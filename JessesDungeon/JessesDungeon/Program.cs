using System;
using System.Collections.Generic;
using System.Threading;
using System.Globalization;

namespace JessesDungeon
{
    class Program
    {
        static void Main(string[] args)
        {
            //Console.WriteLine("____________________________________________________");

            string[,] discoveredMap =
            {
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},
                {"   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   ", " ", "   "},

            };

            TextInfo myTI = new CultureInfo("en-US", false).TextInfo;

            Armor rags = new Armor("Rags", 0, 0.95, false, 0, "These are your clothes, but with a fancier name.");
            Armor leatherArmor = new Armor("Leather Armor", 1, 0.85, false, 70, "Provides a bit of protection, but still no match for a good stabbing.");
            Armor studdedLeatherArmor = new Armor("Studded Leather Armor", 3, 0.80, false, 120, "Stiff and studded: that's how she likes it.");
            Armor ringmail = new Armor("Ringmail", 5, 0.75, false, 400, "Composed of mismatched rings and metal shards, this is surely a \"practicality over fashion\" choice.");
            Armor chainmail = new Armor("Chainmail", 7, 0.70, false, 0, "The closest you'll ever get to being a knight.");
            Armor hazmatSuit = new Armor("Hazmat Suit", 10, 0.80, false, 1500, "Knives, swords, and guns are VERY hazardous materials.");


            //add all armor, weapon, shield merchant will sell at any point to list
            List<Armor> merchantArmor = new List<Armor>();
            merchantArmor.Add(leatherArmor);
            merchantArmor.Add(studdedLeatherArmor);
            merchantArmor.Add(ringmail);
            merchantArmor.Add(hazmatSuit);

            Weapon unarmed = new Weapon("Unarmed", 0, 1, 0, true, false, 0, "Fists of fury.");
            Weapon rustyWoodenSpoon = new Weapon("Rusty Wooden Spoon", 1, 2, 0, true, false, 0, "A miracle of natural law.");
            Weapon stick = new Weapon("Stick", 1, 2, 0, true, true, 5, "Ho Haha Guard Turn Parry Dodge Spin Ha Thrust!");
            Weapon pointyStick = new Weapon("Pointy Stick", 4, 2, 0, true, false, 10, "Brilliant use of \"force over surface area\" wouldn't you say?");
            Weapon mildewEncrustedPocketKnife = new Weapon("Mildew-encrusted Pocket Knife", 4, 3, 0, true, false, 0, "Gross. But pointy!");
            Weapon knife = new Weapon("Knife", 4, 3, 0, true, false, 20, "You could definitely stab something with this.");
            Weapon huntingKnife = new Weapon("Hunting Knife", 6, 3, 0, true, false, 50, "THAT'S a knife.");
            Weapon axe = new Weapon("Fireman's Axe", 8, 3, 0, false, false, 400, "This emergency axe was not made for combat. The force of this two-handed weapon increases your damage die by two, but its unwieldy nature will decrease your AC by two as well.");
            Weapon pogoStick = new Weapon("Pogo Stick", 4, 2, 0, false, false, 700, "Wielding this contraption like a lance/bazooka, each successful hit leads to an additional attack -- albeit at a -5 penalty.");
            Weapon realSword = new Weapon("Sword", 10, 3, 0, true, false, 0, "Unfortunately, this sword is not unnaturally propotioned or outfitted with a gun.");
            Weapon gun = new Weapon("Gun", 20, 0, -5, true, false, 1000, "Can make a massive hole in your target if you can handle its massive kickback (-5 penalty).");

            List<Weapon> merchantWeapon = new List<Weapon>();
            merchantWeapon.Add(stick);
            merchantWeapon.Add(pointyStick);
            merchantWeapon.Add(knife);
            merchantWeapon.Add(huntingKnife);
            merchantWeapon.Add(axe);
            merchantWeapon.Add(pogoStick);
            merchantWeapon.Add(gun);

            Shield nullShield = new Shield("Forearm", 0, 1.00, true, 0, "'Tis nothing but spun sugar and bootblack.");
            Shield soupBowl = new Shield("Soup Bowl", 1, 0.95, false, 0, "Can't top this one.");
            Shield cardboardCutout = new Shield("Cardboard Cutout", 1, 0.95, true, 3, "Well it looks like a shield...");
            Shield garbageCanLid = new Shield("Garbage Can Lid", 2, 0.90, false, 10, "Can't top this one.");
            Shield realShield = new Shield("Shield", 5, 0.85, false, 0, "Perfect for phalanx formation if you only had some friends.");

            List<Shield> merchantShield = new List<Shield>();
            merchantShield.Add(cardboardCutout);
            merchantShield.Add(garbageCanLid);

            Potion healingPotion = new Potion("Healing Potion", 20, "This potion will recover 20 HP.");
            Potion lightHealingPotion = new Potion("Light Healing Potion", 10, "This potion will recover 10 HP.");
            Potion greaterHealingPotion = new Potion("Greater Healing Potion", 50, "This potion will recover 50 HP.");

            Item sackOfCash = new Item("Sack of Cash", "Salamanca's giant bag of crystals.");
            Item giantBlueCrystal = new Item("Giant Blue Crystal", "An enormous[ly] beautiful gem.");
            Item stevia = new Item("Box of Stevia", "Artificial Sweetener. Is it bad for you? Who cares am I right.");
            Item janesKey = new Item("Bedroom Key", "A key that should open the door in the room with the flowers.");
            Item largeBrassKey = new Item("Large Brass Key", "A key that should open the door behind the pogo stick dude.");
            Item liquorKey = new Item("Liquor Key", "A key that should open the lockbox in the old winery.");
            Item mezcal = new Item("Bottle of Mezcal", "A fine bottle of liquor.");
            Item jeweledRing = new Item("Jeweled Ring", "A beautiful ring you found in the tree-woman's room.");
            Item sackOfGoodies = new Item("Skinny Pete's Sack of Goodies", "A fine goodie bag for any occasion.");
            Item minkCoat = new Item("Mink Coat", "An extremely LUXURIOUS coat. Or an extremely CRUEL coat. Whichever you are less offended by.");
            Item fredStash = new Item("Stinky Cash", "Separated out from putrid rotting food, this bounty must be part of a long forgotten contingency plan.");
            Item safe = new Item("Safe Cash", "This cash is so safe that the only written form of its combination is locked inside it.");
            Item generator = new Item("Electric Generator", "This small generator may not be worth much outside this dungeon, but in here it's all but priceless.");
            Item dungeonKey = new Item("Heisenberg's Key", "A key found in the Fortress that (hopefully) will free you and everyone else.");

            List<Item> undroppables = new List<Item>();
            List<Armor> equippableArmor = new List<Armor>();
            equippableArmor.Add(rags);
            List<Shield> equippableShield = new List<Shield>();
            equippableShield.Add(nullShield);
            List<Weapon> equippableWeapon = new List<Weapon>();
            equippableWeapon.Add(unarmed);
            List<Potion> potionBelt = new List<Potion>();


            Random die = new Random();


            bool debugMode = false;
            bool bowlAndSpoonLooted = false;
            bool listenedToTownVoices = false;
            bool unlockedListenTo = false;
            bool hasNotEnteredTown = true;
            bool hasLeftTown = false;
            bool searchedTree = false;
            bool galeQuestGiven = false;
            bool galeQuestCompleted = false;
            bool hermitVisited = false;
            bool lookedMeepEyes = false;
            bool searchedMeepMounds = false;
            bool talkedToMeepMounds = false;
            bool searchedMikeHouse = false;
            bool fuckedUpWithMike = false;
            bool searchedGraveyard = false;
            bool salamancaGuardDefeated = false;
            bool salamancaGuardSearched = false;
            bool salamancaCousinDefeated = false;
            bool salamancaDead = false;
            bool randomEncountersOn = true;
            bool lydiaQuestGiven = false;
            bool lydiaQuestCompleted = false;
            bool lootedCentaur = false;
            bool frontEntranceWarning = false;
            bool joinedFightClub = false;
            bool fightClubLoop = false;
            bool foughtInFightClub = false;
            bool theCreeperInTheDarkDefeated = false;
            bool puddleSearched = false;
            bool visitedBowlingAlley = false;
            bool bowlingLoop = false;
            bool talkedToPriest = false;
            bool noticedJane = false;
            bool janesProtectionActive = false;
            bool janesDoorOpened = false;
            bool signedLogBook = false;
            bool dryadLoop = false;
            bool peteLoop = false;
            bool buyLoop = false;
            bool sellLoop = false;
            bool inventoryLoop = false;
            bool salamancaLoop = false;
            bool salamancaBagLooted = false;
            bool newConverseAvailable = true;
            bool gusQuestGiven = false;
            bool gusQuestCompleted = false;
            bool gusLoop = false;
            bool losPollosHermanos = false;
            bool mikeQuestGiven = false;
            bool mikeQuestCompleted = false;
            bool peteQuestGiven = false;
            bool peteQuestCompleted = false;
            bool saulQuestGiven = false;
            bool saulQuestCompleted = false;
            bool studdedLeatherArmorLooted = false;
            bool knightSuitAvailable = false;
            bool mikeLoop = false;
            bool janeQuestGiven = false;
            bool janeQuestCompleted = false;
            bool janeLoop = false;
            bool freePotions = false;
            bool dudeOnAPogoStickDefeated = false;
            bool hidenGoseke = false;
            bool secretTunnelOpened = false;
            bool returnedRing = false;
            bool shopClosed = false;
            bool readLogbook = false;
            bool tookPeteCash = false;
            bool tookGusCash = false;
            bool tookSaulCash = false;
            bool tookHermitCash = false;
            bool tookLydiaCash = false;
            bool tookMikeCash = false;
            bool tookJaneCash = false;
            bool talkLoop = false;
            bool killedJesse = false;
            bool jesseDefeated = false;
            bool sparedJesse = false;
            bool searchedHeisenberg = false;
            bool narratorDefeated = false;
            bool searchedFortress = false;
            bool mapTown = false;
            bool mapPeace = false;
            bool mapSalamanca = false;
            bool mapLiquor = false;
            bool mapVacuum = false;
            bool mapCartel = false;
            bool mapMike = false;
            bool mapFight = false;
            bool mapLydia = false;
            bool mapSaul = false;
            bool mapBowl = false;
            bool mapHermit = false;
            bool mapFortress = false;

            List<string> boolList = new List<string> { "debugMode", "bowlAndSpoonLooted", "listenedToTownVoices", "unlockedListenTo", "hasNotEnteredTown", "hasLeftTown", "searchedTree", "galeQuestGiven", "galeQuestCompleted", "hermitVisited", "lookedMeepEyes", "searchedMeepMounds", "talkedToMeepMounds", "searchedMikeHouse", "fuckedUpWithMike", "searchedGraveyard", "salamancaGuardDefeated", "salamancaGuardSearched", "salamancaCousinDefeated", "salamancaDead", "randomEncountersOn", "lydiaQuestGiven", "lydiaQuestCompleted", "lootedCentaur", "frontEntranceWarning", "joinedFightClub", "fightClubLoop", "foughtInFightClub", "theCreeperInTheDarkDefeated", "puddleSearched", "visitedBowlingAlley", "bowlingLoop", "talkedToPriest", "noticedJane", "janesProtectionActive", "janesDoorOpened", "signedLogBook", "dryadLoop", "peteLoop", "buyLoop", "sellLoop", "inventoryLoop", "salamancaLoop", "salamancaBagLooted", "newConverseAvailable", "gusQuestGiven", "gusQuestCompleted", "gusLoop", "losPollosHermanos", "mikeQuestGiven", "mikeQuestCompleted", "peteQuestGiven", "peteQuestCompleted", "saulQuestGiven", "saulQuestCompleted", "studdedLeatherArmorLooted", "knightSuitAvailable", "mikeLoop", "janeQuestGiven", "janeQuestCompleted", "janeLoop", "freePotions", "dudeOnAPogoStickDefeated", "hidenGoseke", "secretTunnelOpened", "returnedRing", "shopClosed", "readLogbook", "tookPeteCash", "tookGusCash", "tookSaulCash", "tookHermitCash", "tookLydiaCash", "tookMikeCash", "tookJaneCash", "talkLoop", "killedJesse", "jesseDefeated", "sparedJesse", "searchedHeisenberg", "narratorDefeated", "searchedFortress", "mapTown", "mapPeace", "mapSalamanca", "mapLiquor", "mapVacuum", "mapCartel", "mapMike", "mapFight", "mapLydia", "mapSaul", "mapBowl", "mapHermit", "mapFortress" };
            List<bool> boolFlags = new List<bool> { debugMode, bowlAndSpoonLooted, listenedToTownVoices, unlockedListenTo, hasNotEnteredTown, hasLeftTown, searchedTree, galeQuestGiven, galeQuestCompleted, hermitVisited, lookedMeepEyes, searchedMeepMounds, talkedToMeepMounds, searchedMikeHouse, fuckedUpWithMike, searchedGraveyard, salamancaGuardDefeated, salamancaGuardSearched, salamancaCousinDefeated, salamancaDead, randomEncountersOn, lydiaQuestGiven, lydiaQuestCompleted, lootedCentaur, frontEntranceWarning, joinedFightClub, fightClubLoop, foughtInFightClub, theCreeperInTheDarkDefeated, puddleSearched, visitedBowlingAlley, bowlingLoop, talkedToPriest, noticedJane, janesProtectionActive, janesDoorOpened, signedLogBook, dryadLoop, peteLoop, buyLoop, sellLoop, inventoryLoop, salamancaLoop, salamancaBagLooted, newConverseAvailable, gusQuestGiven, gusQuestCompleted, gusLoop, losPollosHermanos, mikeQuestGiven, mikeQuestCompleted, peteQuestGiven, peteQuestCompleted, saulQuestGiven, saulQuestCompleted, studdedLeatherArmorLooted, knightSuitAvailable, mikeLoop, janeQuestGiven, janeQuestCompleted, janeLoop, freePotions, dudeOnAPogoStickDefeated, hidenGoseke, secretTunnelOpened, returnedRing, shopClosed, readLogbook, tookPeteCash, tookGusCash, tookSaulCash, tookHermitCash, tookLydiaCash, tookMikeCash, tookJaneCash, talkLoop, killedJesse, jesseDefeated, sparedJesse, searchedHeisenberg, narratorDefeated, searchedFortress, mapTown, mapPeace, mapSalamanca, mapLiquor, mapVacuum, mapCartel, mapMike, mapFight, mapLydia, mapSaul, mapBowl, mapHermit, mapFortress };

            int hermitAnger = 0;
            int highestHermitAnger = 0;
            int debugMoneyOutput = 0;
            int inappropriateTouchingCounter = 0;
            int fightClubMode = -1;
            int bowlingSkill = 0;
            int lastBowlingBet = 0;
            int egoBowlingScore = 0;
            int enemyBowlingScore = 0;
            int bowlingPrizePackage = 0;
            int salamancaStolenCrystals = 0;
            int converseCount = 0;
            int gusSenseMotiveCheck = 0;
            int saulHermitBond = 0;
            int konamiProgress = -1;
            int stolenHeisenPotions = 0;

            List<string> intList = new List<string> { "hermitAnger", "highestHermitAnger", "debugMoneyOutput", "inappropriateTouchingCounter", "fightClubMode", "bowlingSkill", "lastBowlingBet", "egoBowlingScore", "enemyBowlingScore", "bowlingPrizePackage", "salamancaStolenCrystals", "converseCount", "gusSenseMotiveCheck", "saulHermitBond", "konamiProgress", "stolenHeisenPotions" };
            List<int> intFlags = new List<int> { hermitAnger, highestHermitAnger, debugMoneyOutput, inappropriateTouchingCounter, fightClubMode, bowlingSkill, lastBowlingBet, egoBowlingScore, enemyBowlingScore, bowlingPrizePackage, salamancaStolenCrystals, converseCount, gusSenseMotiveCheck, saulHermitBond, konamiProgress, stolenHeisenPotions };

            string debugMoneyInput = "";
            string fightClubAction = "";
            string fightClubChoice = "";
            string bowlingAction = null;
            string purchaseItem = null;
            string sellItem = null;
            string sellItem2 = null;
            string usingItem = null;
            string inspectingItem = null;
            string salamancaAction = null;
            string salamancaChoice = null;
            string disappearChoice = null;

            string action = "";

            List<string> stringList = new List<string>(){ "debugMoneyInput", "fightClubAction", "fightClubChoice", "bowlingAction", "purchaseItem", "sellItem", "sellItem2", "usingItem", "inspectingItem", "salamancaAction", "salamancaChoice", "disappearChoice", "action" };
            List<string> stringFlags = new List<string>() { debugMoneyInput, fightClubAction, fightClubChoice, bowlingAction, purchaseItem, sellItem, sellItem2, usingItem, inspectingItem, salamancaAction, salamancaChoice, disappearChoice, action };


            var ego = new Stats("Ego", 100, 100, rags, unarmed, nullShield, 0, 0.95, 0, 6, 1, 1, 0, 0, "J7", "J7", false, false, null, 0, 0);











            Console.WriteLine("\"Welcome to my dungeon, bitch!\"");

            Console.WriteLine();
            Console.WriteLine("You've been thrown into a pit and the entrance shut and locked above you.");
            Console.WriteLine();
            Thread.Sleep(5000);


            while (ego.Location != "winner")
            {
                if (ego.LastDefeated == "The Creeper in the Dark")
                {
                    theCreeperInTheDarkDefeated = true;
                    pointyStick.Unlocked = true;
                }
                if (ego.LastDefeated == "Salamanca Guard")
                {
                    salamancaGuardDefeated = true;
                    huntingKnife.Unlocked = true;
                    leatherArmor.Unlocked = true;
                }
                if (ego.LastDefeated == "Salamanca Cousin")
                {
                    salamancaCousinDefeated = true;
                    huntingKnife.Unlocked = true;
                    leatherArmor.Unlocked = true;
                }
                if (ego.LastDefeated == "Dude on a Pogo Stick")
                {
                    dudeOnAPogoStickDefeated = true;
                    pogoStick.Unlocked = true;
                    ringmail.Unlocked = true;
                }
                if (ego.LastDefeated == "Narrator")
                {
                    narratorDefeated = true;
                }
                if (hermitAnger > highestHermitAnger)
                {
                    highestHermitAnger = hermitAnger;
                }


                Console.Clear();
                switch (ego.Location)
                {
                    case "J7":
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[12, 18] = "[x]";
                        discoveredMap[12, 17] = "-";
                        Console.WriteLine("You're in the initial room with the entrance shut and locked above you.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "J7";
                            ego.Location = "I7";
                            discoveredMap[12, 18] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "I7":
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[12, 16] = "[x]";
                        discoveredMap[12, 15] = "-";
                        discoveredMap[12, 17] = "-";
                        if (undroppables.Contains(dungeonKey))
                        {
                            Console.WriteLine("There is some sort of commotion to the east. Something tells you that once you enter that room there will be no escaping whatever may be going on over there.");
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the east and west.");
                            Console.WriteLine();
                            Console.WriteLine("What will you do?");
                            Console.WriteLine("-------------------");
                            Console.WriteLine("Inventory");
                            Console.WriteLine("Map");
                            Console.WriteLine("Stats");
                            Console.WriteLine("Look at");
                            Console.WriteLine("Search");
                            Console.WriteLine("Go east");
                            Console.WriteLine("Go west");
                            Console.WriteLine();
                            Console.WriteLine();

                            Console.Write("Your action: ");
                            action = Console.ReadLine();
                            action = action.ToLower();
                            action = action.Trim();

                            if (action == "go west")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "I7";
                                ego.Location = "H7";
                                discoveredMap[12, 16] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "go east")
                            {
                                action = "complete";
                                ego.Location = "winner";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward, bitch!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at dinner tray" || action == "search dinner tray")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("No! No dinner tray! Focus!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                        else
                        {
                            Console.WriteLine("This room is bare, save for what looks like a [dinner tray] dwelling in a dust-ridden corner.");
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the east and west.");
                            Console.WriteLine();
                            Console.WriteLine("What will you do?");
                            Console.WriteLine("-------------------");
                            Console.WriteLine("Inventory");
                            Console.WriteLine("Map");
                            Console.WriteLine("Stats");
                            Console.WriteLine("Look at");
                            Console.WriteLine("Search");
                            Console.WriteLine("Go east");
                            Console.WriteLine("Go west");
                            Console.WriteLine();
                            Console.WriteLine();

                            Console.Write("Your action: ");
                            action = Console.ReadLine();
                            action = action.ToLower();
                            action = action.Trim();

                            if (action == "go west")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "I7";
                                ego.Location = "H7";
                                discoveredMap[12, 16] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "go east")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "I7";
                                ego.Location = "J7";
                                discoveredMap[12, 16] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at dinner tray")
                            {
                                if (bowlAndSpoonLooted == false)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("You see a large bowl with a spoon resting inside. On closer inspection... my goodness - this thing is so old the wooden spoon is rusty!");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("For better or worse, the tray is empty.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }

                            }

                            if (action == "search dinner tray")
                            {
                                if (bowlAndSpoonLooted == false)
                                {
                                    talkLoop = true;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Well, let's see here... there's the bowl. And the spoon which - presumably - was used to eat with.");
                                    Thread.Sleep(2500);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    while (talkLoop == true)
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Wait.");
                                        Console.WriteLine();
                                        Console.WriteLine("You don't want to, like, try and use these... do you?");
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Yes");
                                        Console.WriteLine("No");
                                        Console.WriteLine();
                                        Console.Write(">");

                                        action = Console.ReadLine();
                                        action = action.ToLower();

                                        if (action == "yes")
                                        {
                                            action = "complete";
                                            talkLoop = false;
                                            bowlAndSpoonLooted = true;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.Write("Oooookay");
                                            Thread.Sleep(500);
                                            Console.Write(".");
                                            Thread.Sleep(500);
                                            Console.Write(".");
                                            Thread.Sleep(500);
                                            Console.Write(".");
                                            Thread.Sleep(1500);
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("You pick up the spoon, and brandish it high into the air. You swing it around several times, running battle drills with yourself. \"Voosh! voooosh!\" You begin to hear the sounds of your glorious blade whizzing through the air; though you soon realize that you were just getting a little too into it and began making sound effects.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            equippableWeapon.Add(rustyWoodenSpoon);
                                            GetEquipped(ego, rustyWoodenSpoon);
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("You pick up the bowl, and juggle it around in your hand a few times. Fitting your fingers up against the inside walls, you push outward until friction causes the bowl to remain on the end of your hand. Extending your arm furiously, you repel many floating particles of dust which were certainly a choking hazard.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            equippableShield.Add(soupBowl);
                                            GetStrapped(ego, soupBowl);
                                        }
                                        else if (action == "no")
                                        {
                                            action = "complete";
                                            talkLoop = false;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("Well good. That's very sensible of you.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("That didn't do anything useful.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                }
                                else
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("You've already taken the bowl and Rusty Wooden Spoon. These things don't just regenerate.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("...Is \"wood doesn't grow on trees\" too obvious here?");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to facepalm");
                                    Console.ReadLine();
                                }
                            }
                        }


                        break;

                    case "H7":
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[12, 14] = "[x]";
                        discoveredMap[12, 13] = "-";
                        discoveredMap[12, 15] = "-";
                        discoveredMap[11, 14] = " | ";
                        discoveredMap[13, 14] = " | ";
                        Console.WriteLine("The coating of dust is relatively lighter in this room - probably due to increased foot traffic as made evident by the [tracks] on the ground.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H7";
                            ego.Location = "G7";
                            discoveredMap[12, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H7";
                            ego.Location = "I7";
                            discoveredMap[12, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H7";
                            ego.Location = "H6";
                            discoveredMap[12, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H7";
                            ego.Location = "H8";
                            discoveredMap[12, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at tracks")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("While going in and out of all four paths, there are far more foot falls leading westward than any other direction.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search tracks")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You get down on all fours, and press your cheek against the floor to get the best view of the tracks that you can from the side. Crawling along the floor and swapping floor-cheeks as necessary, you determine that the tracks are certainly tracks made in dust.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("After returning to status erectus, you realize you're now wearing the tracks, erasing anything they may have told you. I certainly hope you \"looked at\" them first!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Totally messing with you. You're dusty but they're still there. It's cool.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to (for real) continue");
                            Console.ReadLine();
                        }


                        break;

                    case "G7":
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[12, 12] = "[x]";
                        discoveredMap[12, 11] = "-";
                        discoveredMap[12, 13] = "-";
                        discoveredMap[11, 12] = " | ";
                        discoveredMap[13, 12] = " | ";
                        Console.WriteLine("There is a high volume of dust [tracks] in this room, and you can hear indistinguishable [voices] coming from the west.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        if (unlockedListenTo == true) { Console.WriteLine("Listen to"); }
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G7";
                            ego.Location = "F7";
                            discoveredMap[12, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G7";
                            ego.Location = "H7";
                            discoveredMap[12, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G7";
                            ego.Location = "G6";
                            discoveredMap[12, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G7";
                            ego.Location = "G8";
                            discoveredMap[12, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at tracks")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("While going in and out of all four paths, there are far more foot falls leading westward than any other direction.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search tracks")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You get down on all fours, and press your cheek against the floor to get the best view of the tracks that you can from the side. Crawling along the floor and swapping floor-cheeks as necessary, you determine that the tracks are certainly tracks made in dust.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("...That's how Aragorn does it isn't it?");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at voices" || action == "search voices")
                        {
                            listenedToTownVoices = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            if (action == "look at voices")
                            {
                                Console.WriteLine("How exactly do you look at sound? Come on now. Seriously!");
                            }
                            else if (action == "search voices")
                            {
                                Console.WriteLine("How exactly do you search sound? Come on now. Seriously!");
                            }
                                action = "complete";
                            Thread.Sleep(2500);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Oh this is on me, isn't it? No \"listen to\" command?... Well we don't have the budget to provide you with EVERY command prompt.");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "listen to tracks" && unlockedListenTo == true)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Smartass.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "listen to voices" && unlockedListenTo == true)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Sidling up against the closest wall and holding your breath, you can make out the conversation.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.Clear();
                            //7 total conversations. 6 "newconverses"
                            if (converseCount == 7 || (converseCount == 6 && newConverseAvailable == true))
                            {
                                converseCount = 7;
                                newConverseAvailable = false;
                                Console.WriteLine("\"...There's no way that's true, man.\"");
                                Thread.Sleep(4000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"It totally is, bro, I'm tellin' you! You pay him and just 'vwip!' he'll get you outta here! Anywhere you wanna go and any kind of life you want!\"");
                                Thread.Sleep(14000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Oh yeah? Then why hasn't everyone done it? Why haven't you?\"");
                                Thread.Sleep(5000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Bro, you're not getting me. When I say 'a lot,' I mean *a lot.*\"");
                                Thread.Sleep(10000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"What kind of business plan is that, then?\"");
                                Thread.Sleep(4000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I don't know, man. I think it's what he used to charge and he just keeps the same price out of principle or whatever.\"");
                                Thread.Sleep(12000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"So, what, do you just drag a huge bag of cash up there and say 'here you go' or something?\"");
                                Thread.Sleep(4000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Nah, dude, it's like some super spy stuff with like a secret passcode. It's weird, but you say, 'I need a new dust filter for my Hoover Maxextract Pressurepro Model 60 - can you help me with that?'\"");
                                Thread.Sleep(15000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Woah. Feel like I'd need to write that down. What was it again?\"");
                                Thread.Sleep(5000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"'I need a new dust filter for my Hoover Maxextract Pressurepro Model 60 - can you help me with that?'\"");
                                Thread.Sleep(5000);
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"So, like, do you think anyone will ever do it?\"");
                                Thread.Sleep(4000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"If there's even enough money down here at all, you'd have to pool everyone's stash together just to get one guy out. And I really don't think anyone's gonna go for that.\"");
                                Thread.Sleep(12000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"They'll probably need your whole sack of goodies, too!\"");
                                Thread.Sleep(4000);
                                Console.Clear();
                                Console.WriteLine("The remainder of this conversation takes a dark turn.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (converseCount == 6 || (converseCount == 5 && newConverseAvailable == true))
                            {
                                converseCount = 6;
                                newConverseAvailable = false;
                                Console.WriteLine("\"It had time travel! It had borg! It had pew pew bang and a happy ending! I liked it!\"");
                                Thread.Sleep(4000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Bro, I'm just gonna slap those each out of the air in turn.\"");
                                Thread.Sleep(4000);
                                Console.WriteLine();
                                Console.WriteLine("\"There are no constraints on the time travel, so that whole thing is just a disaster. It doesn't even matter if I could (and I could) say 'she should've done this or that.' Omnipotence and omnipresence simply cheapen the struggle.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"'Voyager' treats the borg wrong, and the finale is no different. The borg are an unending army where a single ship can decimate the entire alpha quadrant, and Voyager just like blows up some of them. You ever take calculus, bro? Subtract 'a lot' from infinity and you still have at least one ship that can end the alpha quadrant whenever it wants.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"And your 'pew pew bang happy ending,' bro? The whole thing was about deciding between an act of self-interest and an ethical act of self-sacrifice -- mirroring the series premiere, mind you. But - unlike the premiere - Janeway just has her cake and eats it too, which is a poor ending to any story.\"");
                                Thread.Sleep(55000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"'Endgame' is the most rewatched episode of the series on Netflix.\"");
                                Thread.Sleep(5000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Yeah and they'll probably release some movie on Netflix as an extension of their successful series too. In what world would something like that be any good?\"");
                                Thread.Sleep(10000);
                                Console.Clear();
                                Console.WriteLine("The remainder of this conversation takes a dark turn.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (converseCount == 5 || (converseCount == 4 && newConverseAvailable == true))
                            {
                                converseCount = 5;
                                newConverseAvailable = false;
                                Console.WriteLine("\"It was just ahead of its time, bro.\"");
                                Thread.Sleep(4000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Did you even watch the original series? Yes, it was certainly ahead of its time -- but it also got pretty 'out there.'\"");
                                Thread.Sleep(8000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"What do you mean?\"");
                                Thread.Sleep(3000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"It got extremely heavy-handed and preachy, and just straight up bizarre sometimes. The show became like a sketch show, with the crew ending up on some world coincidentally identical to some previous period in Human history. Even Abraham Lincoln showed up!\"");
                                Thread.Sleep(14000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Oh, come on, bro, all the 'Star Trek' shows just threw the crew into different scenarios like that.\"");
                                Thread.Sleep(8000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"There's a fine line between 'themes' in future series and 'reality' in the original. Roddenberry was a visionary and the original series was groundbreaking, but the show was a mess.\"");
                                Thread.Sleep(14000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Yeah you're right! 'Star Trek' and 'The Visionaries' were both unjustly canceled!\"");
                                Thread.Sleep(5000);
                                Console.Clear();
                                Console.WriteLine("The remainder of this conversation takes a dark turn.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (converseCount == 4 || (converseCount == 3 && newConverseAvailable == true))
                            {
                                converseCount = 4;
                                newConverseAvailable = false;
                                Console.WriteLine("\"There's nothing that can get in the way of love, bro.\"");
                                Thread.Sleep(4000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"It's even visited several times throughout the series; the very point of their relationship is that they can never be.\"");
                                Thread.Sleep(8000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"But they did end up togeth --\"");
                                Thread.Sleep(3000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Bro, don't even get me started on the movies again. They were trash and that was just pandering to audiences so to fill their pockets on a lackluster movie.\"");
                                Thread.Sleep(10000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Oh, come on, bro, everyone deserves a happy ending.\"");
                                Thread.Sleep(5000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Riker chose his career over love. His ambition flourished but at the cost of his personal life. There's even tangential themes of him 'ending up like Picard' but - not only accepting it - relishing it.\"");
                                Thread.Sleep(14000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I've got faith... Faith of the heart...\"");
                                Thread.Sleep(3000);
                                Console.Clear();
                                Console.WriteLine("The remainder of this conversation takes a dark turn.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (converseCount == 3 || (converseCount == 2 && newConverseAvailable == true))
                            {
                                converseCount = 3;
                                newConverseAvailable = false;
                                Console.WriteLine("\"Bro it got a 93% Rotten Tomatoes score and a 89% audience approval score.\"");
                                Thread.Sleep(5000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Dude should I even list movies that were terrible but also 'scored' well with critics and audiences? Not to mention the corruption rumors behind the ratings on Star Wars IX.\"");
                                Thread.Sleep(8000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"But what makes you think you'd be right in the face of so much differing opinion?\"");
                                Thread.Sleep(6000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"The script was contrived and heavy-handed. The love story was shoe-horned near the end from non-existence. And don't even get me started on Data.\"");
                                Thread.Sleep(10000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"...Let's not say things we can't take back, bro.\"");
                                Thread.Sleep(10000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"OK, you're right on that. But come on -- that whole thing about firing the torpedos at the Phoenix and everyone just stands there until they miss? Data obviously misses on purpose, and as he doesn't capitalize on his decoy it only serves as fabricated drama for a lacking movie.\"");
                                Thread.Sleep(14000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"DATA CAN DO NO WRONG!!\"");
                                Thread.Sleep(4000);
                                Console.Clear();
                                Console.WriteLine("The remainder of this conversation takes a dark turn.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (converseCount == 2 || (converseCount == 1 && newConverseAvailable == true))
                            {
                                converseCount = 2;
                                newConverseAvailable = false;
                                Console.WriteLine("\"No way, man. How could she be better? She's not even likeable on her own.\"");
                                Thread.Sleep(5000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, man. She's strong, she's independent, and she lets everyone know it. At least she's not Picard's coddled little pet.\"");
                                Thread.Sleep(8000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Love isn't a weakness. Their relationship is understated and it doesn't take away from Crusher's strength as a woman. Pulaski is just mean - do you remember when she just kept telling Data he's just a machine and his dreams and aspirations of being human is impossible? Bitch is just nasty.\"");
                                Thread.Sleep(10000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"That's how it is with a confident, independent person. It's how anyone like her would really act, and she has many otherwise redeeming qualities related to that behavior.\"");
                                Thread.Sleep(10000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Sure -- but this isn't reality. TV is a form of art, and as such is a representation of reality - NOT reality itself. Art is lies that tells the truth.\"");
                                Thread.Sleep(10000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"TV is art? Next you're going to tell me those scribbles Picasso makes are art, too.\"");
                                Thread.Sleep(4000);
                                Console.Clear();
                                Console.WriteLine("The remainder of this conversation takes a dark turn.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (converseCount == 1 || (converseCount == 0 && newConverseAvailable == true))
                            {
                                converseCount = 1;
                                newConverseAvailable = false;
                                Console.WriteLine("\"No, man! No one will ever - CAN ever - be better than the original!\"");
                                Thread.Sleep(5000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Listen, bro. Life is change. Records are made to be broken. Adapt or die. New things will always come along and it is their very purpose to best what came before.\"");
                                Thread.Sleep(8000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Yeah but that don't mean that just because a newer one is good that it's better. Think about the time period Spock existed in and the fact that he had no original material to work off of.\"");
                                Thread.Sleep(10000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Yeah but do those handicaps change the score? It's maybe \'unfair\' that Tim Russ didn't have to reinvent the wheel and could build on Nimoy's work, but that's how it goes. As Newton said: we stand on the shoulders of giants, bro.\"");
                                Thread.Sleep(10000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Oh, dude, Mighty Ducks 3? I loved that movie too.\"");
                                Thread.Sleep(4000);
                                Console.Clear();
                                Console.WriteLine("The remainder of this conversation takes a dark turn.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "listen to voices" && listenedToTownVoices == true && unlockedListenTo == false)
                        {
                            action = "complete";
                            unlockedListenTo = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("What are you some kind of smartass? Fine.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "listen to" && unlockedListenTo == true)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Listen to? Listen to WHAT?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("listen to ") && unlockedListenTo == true)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Let's not get carried away, ok. Listen to voices -- THAT'S IT. You're lucky even that.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "F7": //Town
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        discoveredMap[12, 10] = "[x]";
                        if (hasLeftTown == false)
                        {
                            Console.WriteLine("There are two [men] conversing, who stop and look as you enter. They are each standing behind a crudely built [podium]; one has a [plank] of wood lying beside him, while the other conversely has a large, filled [sack].");
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the east.");
                            if (hasNotEnteredTown == true)
                            {
                                hasNotEnteredTown = false;
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man with the wooden plank speaks.");
                                Console.WriteLine();
                                Console.WriteLine("\"Hey. You must be new? Haven't seen you around before. You can call me Badger, and this here is Skinny Pete. Welcome to your new home!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"If you wanna do some trading, Skinny Pete is your man. He's interested in pretty much anything - and that's how he's also got pretty much anything! Otherwise, if you need to rest -- I'm your guy. For just a small fee, you can get a full night's rest and (rest assured!) I'll watch out for ya.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"And, well, if you want to \"make something\" of yourself down here, you can go pay your respects to the cartel just out and to the north. I'd be careful getting involved with them, though.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("What will you do?");
                            Console.WriteLine("-------------------");
                            Console.WriteLine("Inventory");
                            Console.WriteLine("Map");
                            Console.WriteLine("Stats");
                            Console.WriteLine("Look at");
                            Console.WriteLine("Search");
                            Console.WriteLine("Talk to");
                            Console.WriteLine("Rest (3 crystals)");
                            Console.WriteLine("Shop");
                            Console.WriteLine("Go east");
                            Console.WriteLine();
                            Console.WriteLine();

                            Console.Write("Your action: ");
                            action = Console.ReadLine();
                            action = action.ToLower();
                            action = action.Trim();

                            if (action == "go east")
                            {
                                mapTown = true;
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "F7";
                                ego.Location = "G7";
                                hasLeftTown = true;
                                discoveredMap[12, 10] = "[T]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at men")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The men look haggard and a bit disheveled, but they are not currently attacking and/or robbing you, so that's definitely a good sign.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search men")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("I really don't think they'd be all right with that. Not yet, anyway -- you guys just met!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "talk to men")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, uh, yeah. I mean I just gave you my \'welcome\' spiel... that's all I got for right now. You get me right?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "look at podium")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Each podium looks like it might collapse to a light breeze. You can't be sure, but you don't think these were professionally built.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search podium")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Careful! Probably get a splinter.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "look at plank")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The plank is roughly the size of a person. What a coincidence that he uses it for people to sleep on!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search plank")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Three feet by seven feet. Kind of snug, but it'll work -- better than the floor am I right?!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "look at sack")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("That sack seems to be filled to the brim with goodies. So many odd shapes, angles, and points are trying to burst through the sides!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search sack")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Skinny Pete puts an arm out, barring your path. \"Hey, man - just lemme know what you want and I'll see what I got, all right?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "shop")
                            {
                                action = "complete";
                                peteLoop = true;
                                while (peteLoop == true)
                                {
                                    Console.WriteLine("\"What're we doin', bro?\"");
                                    Console.WriteLine();
                                    Console.WriteLine("Buy");
                                    Console.WriteLine("Sell");
                                    Console.WriteLine();
                                    Console.WriteLine("Exit");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write(">");
                                    purchaseItem = Console.ReadLine();
                                    purchaseItem = purchaseItem.ToLower();
                                    purchaseItem = purchaseItem.Trim();

                                    if (purchaseItem == "buy")
                                    {
                                        buyLoop = true;
                                        while (buyLoop == true)
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("Items available for sale:");
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("Armor:");
                                            foreach (Armor armor in merchantArmor)
                                            {
                                                bool foundCheck = armor.Unlocked;
                                                if (foundCheck == true)
                                                {
                                                    Console.WriteLine($"{armor.Name} (Dmg Reduction: {armor.DamageReduction}  Crit Resist: {armor.CritResist}) - {armor.Price} crystals");
                                                }
                                            }
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("Weapons:");
                                            foreach (Weapon weapon in merchantWeapon)
                                            {
                                                bool foundCheck = weapon.Unlocked;
                                                if (foundCheck == true)
                                                {
                                                    Console.WriteLine($"{weapon.Name} (Damage Bonus: {weapon.Damage}  Crit Multiplier: {weapon.CritMultiplier}) - {weapon.Price} crystals");
                                                }
                                            }
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("Shields:");
                                            foreach (Shield shield in merchantShield)
                                            {
                                                bool foundCheck = shield.Unlocked;
                                                if (foundCheck == true)
                                                {
                                                    Console.WriteLine($"{shield.Name} (AC: {shield.ArmorClass}  Crit Resist: {shield.CritResist}) - {shield.Price} crystals");
                                                }
                                            }
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("Exit");
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.Write("\"Anything catch your eye?\" ");
                                            purchaseItem = Console.ReadLine();
                                            purchaseItem = purchaseItem.ToLower();
                                            purchaseItem = purchaseItem.Trim();
                                            purchaseItem = myTI.ToTitleCase(purchaseItem);

                                            foreach (Armor armor in merchantArmor)
                                            {
                                                string bagCheck = armor.Name;
                                                if (purchaseItem == bagCheck)
                                                {
                                                    bool buyCheck = armor.Unlocked;
                                                    if (buyCheck == true)
                                                    {
                                                        purchaseItem = "switzerfisch";
                                                        if (ego.BlueCrystals >= armor.Price)
                                                        {
                                                            equippableArmor.Add(armor);
                                                            ego.BlueCrystals = ego.BlueCrystals - armor.Price;
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("\"Hey man good doing business with you.\"");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                            break;
                                                        }
                                                        else
                                                        {
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("\"Shoot I don't think you got enough cash! Maybe next time, all right, bro?\"");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                        }
                                                    }
                                                }
                                            }
                                            foreach (Weapon weapon in merchantWeapon)
                                            {
                                                string bagCheck = weapon.Name;
                                                if (purchaseItem == bagCheck)
                                                {
                                                    bool buyCheck = weapon.Unlocked;
                                                    if (buyCheck == true)
                                                    {
                                                        purchaseItem = "switzerfisch";
                                                        if (ego.BlueCrystals >= weapon.Price)
                                                        {
                                                            equippableWeapon.Add(weapon);
                                                            ego.BlueCrystals = ego.BlueCrystals - weapon.Price;
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("\"Hey man good doing business with you.\"");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                            break;
                                                        }
                                                        else
                                                        {
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("\"Shoot I don't think you got enough cash! Maybe next time, all right, bro?\"");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                        }
                                                    }
                                                }
                                            }
                                            foreach (Shield shield in merchantShield)
                                            {
                                                string bagCheck = shield.Name;
                                                if (purchaseItem == bagCheck)
                                                {
                                                    bool buyCheck = shield.Unlocked;
                                                    if (buyCheck == true)
                                                    {
                                                        purchaseItem = "switzerfisch";
                                                        if (ego.BlueCrystals >= shield.Price)
                                                        {
                                                            equippableShield.Add(shield);
                                                            ego.BlueCrystals = ego.BlueCrystals - shield.Price;
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("\"Hey man good doing business with you.\"");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                            break;
                                                        }
                                                        else
                                                        {
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("\"Shoot I don't think you got enough cash! Maybe next time, all right, bro?\"");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                        }
                                                    }
                                                }



                                            }
                                            if (purchaseItem == "Exit")
                                            {
                                                buyLoop = false;
                                                purchaseItem = "switzerfisch";
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"Cool, man.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                            if (purchaseItem != "switzerfisch")
                                            {
                                                purchaseItem = "switzerfisch";
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("That didn't do anything useful.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                        }
                                    }
                                    else if (purchaseItem == "sell")
                                    {
                                        sellLoop = true;
                                        while (sellLoop == true)
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Whatcha got for me?\" ");
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            foreach (Armor armor in equippableArmor)
                                            {
                                                Console.WriteLine(armor.Name);
                                            }
                                            foreach (Weapon weapon in equippableWeapon)
                                            {
                                                if (weapon.Name == "Unarmed") { }
                                                else { Console.WriteLine(weapon.Name); }
                                            }
                                            foreach (Shield shield in equippableShield)
                                            {
                                                if (shield.Name == "Forearm") { }
                                                else { Console.WriteLine(shield.Name); }
                                            }
                                            foreach (Potion potion in potionBelt)
                                            {
                                                Console.WriteLine(potion.Name);
                                            }
                                            foreach (Item item in undroppables)
                                            {
                                                Console.WriteLine(item.Name);
                                            }
                                            Console.WriteLine();
                                            Console.Write("Enter item or [exit]: ");
                                            sellItem = Console.ReadLine();
                                            sellItem = sellItem.ToLower();
                                            sellItem = myTI.ToTitleCase(sellItem);
                                            sellItem = sellItem.Trim();


                                            if (sellItem == "Unarmed")
                                            {
                                                sellItem = "switzerfisch";
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Come on, bro, you can't sell your hands.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                            else if (sellItem == "Forearm")
                                            {
                                                sellItem = "switzerfisch";
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Come on, bro, you can't sell your arm.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                            else if (sellItem == "Rags")
                                            {
                                                sellItem = "switzerfisch";
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Come on, bro, you can't go naked. Might catch something.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                            else
                                            {
                                                if (peteQuestCompleted == true)
                                                {
                                                    foreach (Armor armor in equippableArmor)
                                                    {
                                                        string bagCheck = armor.Name;
                                                        if (sellItem == bagCheck)
                                                        {
                                                            sellItem = "switzerfisch";
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine($"\"{armor.Name}? How does {(armor.Price / 3)} sound?\"");
                                                            Console.WriteLine();
                                                            Console.WriteLine("Yes");
                                                            Console.WriteLine("No");
                                                            Console.WriteLine();
                                                            Console.Write(">");
                                                            sellItem2 = Console.ReadLine();
                                                            sellItem2 = sellItem2.ToLower();
                                                            if (sellItem2 == "yes")
                                                            {
                                                                if (ego.EquippedArmor.Name == armor.Name) { GetStripped(ego, rags, ego.EquippedWeapon, ego.EquippedShield); }
                                                                equippableArmor.Remove(armor);
                                                                ego.BlueCrystals = ego.BlueCrystals + (armor.Price / 3);
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                break;
                                                            }
                                                            else if (sellItem2 == "no")
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("All right, bro, maybe next time.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("That didn't do anything useful.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }
                                                    foreach (Weapon weapon in equippableWeapon)
                                                    {
                                                        string bagCheck = weapon.Name;
                                                        if (sellItem == bagCheck)
                                                        {
                                                            sellItem = "switzerfisch";
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine($"\"{weapon.Name}? How does {(weapon.Price / 3)} sound?\"");
                                                            Console.WriteLine();
                                                            Console.WriteLine("Yes");
                                                            Console.WriteLine("No");
                                                            Console.WriteLine();
                                                            Console.Write(">");
                                                            sellItem2 = Console.ReadLine();
                                                            sellItem2 = sellItem2.ToLower();
                                                            if (sellItem2 == "yes")
                                                            {
                                                                if (ego.EquippedWeapon.Name == weapon.Name) { GetStripped(ego, ego.EquippedArmor, unarmed, ego.EquippedShield); }
                                                                equippableWeapon.Remove(weapon);
                                                                ego.BlueCrystals = ego.BlueCrystals + (weapon.Price / 3);
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                break;
                                                            }
                                                            else if (sellItem2 == "no")
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("All right, bro, maybe next time.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("That didn't do anything useful.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }
                                                    foreach (Shield shield in equippableShield)
                                                    {
                                                        string bagCheck = shield.Name;
                                                        if (sellItem == bagCheck)
                                                        {
                                                            sellItem = "switzerfisch";
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine($"\"{shield.Name}? How does {(shield.Price / 3)} sound?\"");
                                                            Console.WriteLine();
                                                            Console.WriteLine("Yes");
                                                            Console.WriteLine("No");
                                                            Console.WriteLine();
                                                            Console.Write(">");
                                                            sellItem2 = Console.ReadLine();
                                                            sellItem2 = sellItem2.ToLower();
                                                            if (sellItem2 == "yes")
                                                            {
                                                                if (ego.EquippedShield.Name == shield.Name) { GetStripped(ego, ego.EquippedArmor, ego.EquippedWeapon, nullShield); }
                                                                equippableShield.Remove(shield);
                                                                ego.BlueCrystals = ego.BlueCrystals + (shield.Price / 3);
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                break;
                                                            }
                                                            else if (sellItem2 == "no")
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("All right, bro, maybe next time.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("That didn't do anything useful.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    foreach (Armor armor in equippableArmor)
                                                    {
                                                        string bagCheck = armor.Name;
                                                        if (sellItem == bagCheck)
                                                        {
                                                            sellItem = "switzerfisch";
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine($"\"{armor.Name}? How does {(armor.Price / 4)} sound?\"");
                                                            Console.WriteLine();
                                                            Console.WriteLine("Yes");
                                                            Console.WriteLine("No");
                                                            Console.WriteLine();
                                                            Console.Write(">");
                                                            sellItem2 = Console.ReadLine();
                                                            sellItem2 = sellItem2.ToLower();
                                                            if (sellItem2 == "yes")
                                                            {
                                                                if (ego.EquippedArmor.Name == armor.Name) { GetStripped(ego, rags, ego.EquippedWeapon, ego.EquippedShield); }
                                                                equippableArmor.Remove(armor);
                                                                ego.BlueCrystals = ego.BlueCrystals + (armor.Price / 4);
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                break;
                                                            }
                                                            else if (sellItem2 == "no")
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("All right, bro, maybe next time.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("That didn't do anything useful.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }
                                                    foreach (Weapon weapon in equippableWeapon)
                                                    {
                                                        string bagCheck = weapon.Name;
                                                        if (sellItem == bagCheck)
                                                        {
                                                            sellItem = "switzerfisch";
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine($"\"{weapon.Name}? How does {(weapon.Price / 4)} sound?\"");
                                                            Console.WriteLine();
                                                            Console.WriteLine("Yes");
                                                            Console.WriteLine("No");
                                                            Console.WriteLine();
                                                            Console.Write(">");
                                                            sellItem2 = Console.ReadLine();
                                                            sellItem2 = sellItem2.ToLower();
                                                            if (sellItem2 == "yes")
                                                            {
                                                                if (ego.EquippedWeapon.Name == weapon.Name) { GetStripped(ego, ego.EquippedArmor, unarmed, ego.EquippedShield); }
                                                                equippableWeapon.Remove(weapon);
                                                                ego.BlueCrystals = ego.BlueCrystals + (weapon.Price / 4);
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                break;
                                                            }
                                                            else if (sellItem2 == "no")
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("All right, bro, maybe next time.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("That didn't do anything useful.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }
                                                    foreach (Shield shield in equippableShield)
                                                    {
                                                        string bagCheck = shield.Name;
                                                        if (sellItem == bagCheck)
                                                        {
                                                            sellItem = "switzerfisch";
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine($"\"{shield.Name}? How does {(shield.Price / 4)} sound?\"");
                                                            Console.WriteLine();
                                                            Console.WriteLine("Yes");
                                                            Console.WriteLine("No");
                                                            Console.WriteLine();
                                                            Console.Write(">");
                                                            sellItem2 = Console.ReadLine();
                                                            sellItem2 = sellItem2.ToLower();
                                                            if (sellItem2 == "yes")
                                                            {
                                                                if (ego.EquippedShield.Name == shield.Name) { GetStripped(ego, ego.EquippedArmor, ego.EquippedWeapon, nullShield); }
                                                                equippableShield.Remove(shield);
                                                                ego.BlueCrystals = ego.BlueCrystals + (shield.Price / 4);
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                break;
                                                            }
                                                            else if (sellItem2 == "no")
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("All right, bro, maybe next time.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("That didn't do anything useful.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }
                                                }
                                                foreach (Item item in undroppables)
                                                {
                                                    sellItem = "switzerfisch";
                                                    string bagCheck = item.Name;
                                                    if (sellItem == bagCheck)
                                                    {
                                                        if (item.Name == "Rags")
                                                        {
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("\"Hrmm... Nah, bro, I think you should hold onto those.\"");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                        }
                                                        else
                                                        {
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("OK, you sell it.");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("Then you think better of it and buy it back.");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                        }
                                                    }
                                                }
                                                foreach (Potion potion in potionBelt)
                                                {
                                                    sellItem = "switzerfisch";
                                                    string bagCheck = potion.Name;
                                                    if (sellItem == bagCheck)
                                                    {
                                                        Console.WriteLine();
                                                        Console.WriteLine();
                                                        Console.WriteLine("\"Ehh sorry, bro, I don't deal in those kinds of things.");
                                                        Console.WriteLine();
                                                        Console.Write("Press ENTER to continue");
                                                        Console.ReadLine();
                                                    }
                                                }
                                            }
                                            if (sellItem == "Exit")
                                            {
                                                sellLoop = false;
                                                sellItem = "switzerfisch";
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"Cool, man.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                            if (sellItem != "switzerfisch")
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("That didn't do anything useful.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                        }
                                    }
                                    else if (purchaseItem == "exit")
                                    {
                                        peteLoop = false;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Cool, man.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("That didn't do anything useful.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                            }

                            if (action == "rest")
                            {
                                action = "complete";
                                if (ego.BlueCrystals > 2)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yeah, man, get some rest. Don't worry for a second me and Pete got your back.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("You stretch out on the plank of wood and go to sleep.");
                                    ego.CurrentHitPoints = ego.MaxHitPoints;
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Hey, man, you're looking a little light in the pockets... I need to eat too -- you understand, right, bro? I'll be here when you've got a few more to spend.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }

                            if (action == "talk to")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Talk to? Talk to WHO?!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action.StartsWith("talk to "))
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                                Console.WriteLine();
                                Console.WriteLine("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }                           
                        else
                        {
                            Console.WriteLine("[Badger] and [Skinny Pete] stop their conversation and look at you. Skinny Pete's [sack] looks even burstier than before.");
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the east.");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"How's it goin'?\" Badger asks.");
                            Console.WriteLine();
                            Console.WriteLine("Skinny Pete adds, \"yeah, like, anything to trade?\"");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("What will you do?");
                            Console.WriteLine("-------------------");
                            Console.WriteLine("Inventory");
                            Console.WriteLine("Map");
                            Console.WriteLine("Stats");
                            Console.WriteLine("Look at");
                            Console.WriteLine("Search");
                            Console.WriteLine("Talk to");
                            Console.WriteLine("Rest (3 crystals)");
                            Console.WriteLine("Shop");
                            Console.WriteLine("Go east");
                            Console.WriteLine();
                            Console.WriteLine();

                            Console.Write("Your action: ");
                            action = Console.ReadLine();
                            action = action.ToLower();
                            action = action.Trim();

                            if (action == "go east")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "F7";
                                ego.Location = "G7";
                                discoveredMap[12, 10] = "[T]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at badger")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Badger smiles at you as he awaits your answer. He seems to genuinely be a nice and caring man stuck in a terrible circumstance.");
                                Console.WriteLine();
                                Console.WriteLine("Shame that you're a silent protagonist.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search badger")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("I really don't think he'd be all right with that -- you've only recently met!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "talk to badger")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Sup, guy? Be careful when you're walkin\' around out there - especially the body pile west of town. I'm not sure if you can catch chlamydia from a toilet seat or not, but you definitely can there.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "look at skinny pete")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Skinny Pete seems harmless enough -- eager to make a sale, but not that \"sleazy salesman\" type.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search skinny pete")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("I really don't think he'd be all right with that -- you've only recently met!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "talk to skinny pete")
                            {
                                action = "complete";
                                if (converseCount == 7 && readLogbook == true && tookPeteCash == false)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Wait, you want my sack of goodies for what...? How did you know about that?!\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Skinny Pete sighs. \"I guess my voice carries when I get a little excited.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"But you really think you can gather enough cash for this?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"All right, man, if you think this'll get us out of here.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    peteLoop = true;
                                    while (peteLoop == true)
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"But I'll have to close up shop!\"");
                                        Console.WriteLine();
                                        Console.WriteLine("\"Do you want to take it now?\"");
                                        Console.WriteLine();
                                        Console.WriteLine("Yes");
                                        Console.WriteLine("No");
                                        Console.WriteLine();
                                        Console.Write(">");

                                        action = Console.ReadLine();
                                        action = action.ToLower();

                                        if (action == "yes")
                                        {
                                            action = "complete";
                                            tookPeteCash = true;
                                            peteLoop = false;
                                            shopClosed = true;
                                            undroppables.Add(sackOfGoodies);
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Aight, bro. Take good care of it!\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else if (action == "no")
                                        {
                                            action = "complete";
                                            peteLoop = false;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Ok, bro, just let me know.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("That didn't do anything useful.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                }
                                else if (lydiaQuestGiven == true && peteQuestGiven == false)
                                {
                                    peteQuestGiven = true;
                                    undroppables.Add(liquorKey);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Sup, man? What can I help you with?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Oh, uh, stevia? Well, yes, I do have some, but...\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Listen, bro, I'd love to help you out -- but this is the very last of what I got.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"All right, I tell you what, bro. There is something you could do for me in exchange.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Up to the north and just a bit west of here is the old spirits storehouse. It used to be packed with goodies, though I'm sure it's been scavenged by now. But there is one thing that's probably still there.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"There's a lockbox in there that Jesse put away for a special occasion. I always just left it there, but now everything's gone to hell and it's definitely better here with me.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"But of course now it's too dangerous to go get it! But you, bro - you can do it.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"I've got the key here. You go get that for me and we're square.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (peteQuestGiven == true && peteQuestCompleted == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"How's it going, bro? Just let me know if you need anything!\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (peteQuestGiven == true && undroppables.Contains(mezcal))
                                {
                                    peteQuestCompleted = true;
                                    undroppables.Remove(mezcal);
                                    newConverseAvailable = true;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"You got it, bro! Thanks, man!\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"I really appreciate it, bro. Here: take your stevia.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("Skinny Pete hands you a packet of stevia.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"What's that, bro? You need how much...?\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Oh, no, bro! I'm sorry, man, but that's all I got! I didn't realize you needed more!\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"You know what, bro, I think I can still help you out. It's no guarantee, but I can tell you who bought up most of my stevia.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Maybe he's used it, but he bought way, way more than you need -- so there's definitely a shot!\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"It was this slinky guy who I heard lives west of here. He seemed nice but there was also something kinda slippery about him.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"And I feel real bad about all this, bro. I'm so sorry you risked your neck for this bottle and you didn't even get your end.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"From now on I'm gonna give you more for everything you sell me, OK, bro? I know I don't have to do it, but I'm gonna do it!\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Now go out there and get them valuables!\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yo, man - I know you gotta be careful and whatnot, but go bring me back some goodies, yeah?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }

                            if (action == "look at sack")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("That sack seems to be filled to the brim with goodies. So many odd shapes, angles, and points are trying to burst through the sides!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search sack")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Skinny Pete puts an arm out, barring your path. \"Hey, man - just lemme know what you want and I'll see what I got, all right?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "shop")
                            {
                                action = "complete";
                                if (shopClosed == false)
                                {
                                    peteLoop = true;
                                    while (peteLoop == true)
                                    {
                                        Console.WriteLine("\"What're we doin', bro?\"");
                                        Console.WriteLine();
                                        Console.WriteLine("Buy");
                                        Console.WriteLine("Sell");
                                        Console.WriteLine();
                                        Console.WriteLine("Exit");
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.Write(">");
                                        purchaseItem = Console.ReadLine();
                                        purchaseItem = purchaseItem.ToLower();
                                        purchaseItem = purchaseItem.Trim();
                                        if (purchaseItem == "buy")
                                        {
                                            buyLoop = true;
                                            while (buyLoop == true)
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Items available for sale:");
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Armor:");
                                                foreach (Armor armor in merchantArmor)
                                                {
                                                    bool foundCheck = armor.Unlocked;
                                                    if (foundCheck == true)
                                                    {
                                                        Console.WriteLine($"{armor.Name} (AC: {armor.DamageReduction}  Crit Resist: {armor.CritResist}) - {armor.Price} crystals");
                                                    }
                                                }
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Weapons:");
                                                foreach (Weapon weapon in merchantWeapon)
                                                {
                                                    bool foundCheck = weapon.Unlocked;
                                                    if (foundCheck == true)
                                                    {
                                                        Console.WriteLine($"{weapon.Name} (Damage Bonus: {weapon.Damage}  Crit Multiplier: {weapon.CritMultiplier}) - {weapon.Price} crystals");
                                                    }
                                                }
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Shields:");
                                                foreach (Shield shield in merchantShield)
                                                {
                                                    bool foundCheck = shield.Unlocked;
                                                    if (foundCheck == true)
                                                    {
                                                        Console.WriteLine($"{shield.Name} (AC: {shield.ArmorClass}  Crit Resist: {shield.CritResist}) - {shield.Price} crystals");
                                                    }
                                                }
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Exit");
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.Write("\"Anything catch your eye?\" ");
                                                purchaseItem = Console.ReadLine();
                                                purchaseItem = purchaseItem.ToLower();
                                                purchaseItem = myTI.ToTitleCase(purchaseItem);
                                                purchaseItem = purchaseItem.Trim();
                                                foreach (Armor armor in merchantArmor)
                                                {
                                                    string bagCheck = armor.Name;
                                                    if (purchaseItem == bagCheck)
                                                    {
                                                        bool buyCheck = armor.Unlocked;
                                                        if (buyCheck == true)
                                                        {
                                                            purchaseItem = "switzerfisch";
                                                            if (ego.BlueCrystals >= armor.Price)
                                                            {
                                                                equippableArmor.Add(armor);
                                                                ego.BlueCrystals = ego.BlueCrystals - armor.Price;
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                break;
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Shoot I don't think you got enough cash! Maybe next time, all right, bro?\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }
                                                }
                                                foreach (Weapon weapon in merchantWeapon)
                                                {
                                                    string bagCheck = weapon.Name;
                                                    if (purchaseItem == bagCheck)
                                                    {
                                                        bool buyCheck = weapon.Unlocked;
                                                        if (buyCheck == true)
                                                        {
                                                            purchaseItem = "switzerfisch";
                                                            if (ego.BlueCrystals >= weapon.Price)
                                                            {
                                                                equippableWeapon.Add(weapon);
                                                                ego.BlueCrystals = ego.BlueCrystals - weapon.Price;
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                break;
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Shoot I don't think you got enough cash! Maybe next time, all right, bro?\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }
                                                }
                                                foreach (Shield shield in merchantShield)
                                                {
                                                    string bagCheck = shield.Name;
                                                    if (purchaseItem == bagCheck)
                                                    {
                                                        bool buyCheck = shield.Unlocked;
                                                        if (buyCheck == true)
                                                        {
                                                            purchaseItem = "switzerfisch";
                                                            if (ego.BlueCrystals >= shield.Price)
                                                            {
                                                                equippableShield.Add(shield);
                                                                ego.BlueCrystals = ego.BlueCrystals - shield.Price;
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                break;
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Shoot I don't think you got enough cash! Maybe next time, all right, bro?\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }



                                                }
                                                if (purchaseItem == "Exit")
                                                {
                                                    buyLoop = false;
                                                    purchaseItem = "switzerfisch";
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("\"Cool, man.\"");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                                if (purchaseItem != "switzerfisch")
                                                {
                                                    purchaseItem = "switzerfisch";
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("That didn't do anything useful.");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                            }
                                        }
                                        else if (purchaseItem == "sell")
                                        {
                                            sellLoop = true;
                                            while (sellLoop == true)
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"Whatcha got for me?\"");
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                foreach (Armor armor in equippableArmor)
                                                {
                                                    Console.WriteLine(armor.Name);
                                                }
                                                foreach (Weapon weapon in equippableWeapon)
                                                {
                                                    if (weapon.Name == "Unarmed") { }
                                                    else { Console.WriteLine(weapon.Name); }
                                                }
                                                foreach (Shield shield in equippableShield)
                                                {
                                                    if (shield.Name == "Forearm") { }
                                                    else { Console.WriteLine(shield.Name); }
                                                }
                                                foreach (Potion potion in potionBelt)
                                                {
                                                    Console.WriteLine(potion.Name);
                                                }
                                                foreach (Item item in undroppables)
                                                {
                                                    Console.WriteLine(item.Name);
                                                }
                                                Console.WriteLine();
                                                Console.Write("Enter item or [exit]: ");
                                                sellItem = Console.ReadLine();
                                                sellItem = sellItem.ToLower();
                                                sellItem = myTI.ToTitleCase(sellItem);
                                                sellItem = sellItem.Trim();

                                                if (sellItem == "Unarmed")
                                                {
                                                    sellItem = "switzerfisch";
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("Come on, bro, you can't sell your hands.");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                                else if (sellItem == "Forearm")
                                                {
                                                    sellItem = "switzerfisch";
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("Come on, bro, you can't sell your arm.");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                                else if (sellItem == "Rags")
                                                {
                                                    sellItem = "switzerfisch";
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("Come on, bro, you can't go naked. Might catch something.");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                                else
                                                {
                                                    if (peteQuestCompleted == true)
                                                    {
                                                        foreach (Armor armor in equippableArmor)
                                                        {
                                                            string bagCheck = armor.Name;
                                                            if (sellItem == bagCheck)
                                                            {
                                                                sellItem = "switzerfisch";
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine($"\"{armor.Name}? How does {(armor.Price / 3)} sound?\"");
                                                                Console.WriteLine();
                                                                Console.WriteLine("Yes");
                                                                Console.WriteLine("No");
                                                                Console.WriteLine();
                                                                Console.Write(">");
                                                                sellItem2 = Console.ReadLine();
                                                                sellItem2 = sellItem2.ToLower();
                                                                if (sellItem2 == "yes")
                                                                {
                                                                    if (ego.EquippedArmor.Name == armor.Name) { GetStripped(ego, rags, ego.EquippedWeapon, ego.EquippedShield); }
                                                                    equippableArmor.Remove(armor);
                                                                    ego.BlueCrystals = ego.BlueCrystals + (armor.Price / 3);
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                    break;
                                                                }
                                                                else if (sellItem2 == "no")
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("All right, bro, maybe next time.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                                else
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("That didn't do anything useful.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                            }
                                                        }
                                                        foreach (Weapon weapon in equippableWeapon)
                                                        {
                                                            string bagCheck = weapon.Name;
                                                            if (sellItem == bagCheck)
                                                            {
                                                                sellItem = "switzerfisch";
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine($"\"{weapon.Name}? How does {(weapon.Price / 3)} sound?\"");
                                                                Console.WriteLine();
                                                                Console.WriteLine("Yes");
                                                                Console.WriteLine("No");
                                                                Console.WriteLine();
                                                                Console.Write(">");
                                                                sellItem2 = Console.ReadLine();
                                                                sellItem2 = sellItem2.ToLower();
                                                                if (sellItem2 == "yes")
                                                                {
                                                                    if (ego.EquippedWeapon.Name == weapon.Name) { GetStripped(ego, ego.EquippedArmor, unarmed, ego.EquippedShield); }
                                                                    equippableWeapon.Remove(weapon);
                                                                    ego.BlueCrystals = ego.BlueCrystals + (weapon.Price / 3);
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                    break;
                                                                }
                                                                else if (sellItem2 == "no")
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("All right, bro, maybe next time.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                                else
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("That didn't do anything useful.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                            }
                                                        }
                                                        foreach (Shield shield in equippableShield)
                                                        {
                                                            string bagCheck = shield.Name;
                                                            if (sellItem == bagCheck)
                                                            {
                                                                sellItem = "switzerfisch";
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine($"\"{shield.Name}? How does {(shield.Price / 3)} sound?\"");
                                                                Console.WriteLine();
                                                                Console.WriteLine("Yes");
                                                                Console.WriteLine("No");
                                                                Console.WriteLine();
                                                                Console.Write(">");
                                                                sellItem2 = Console.ReadLine();
                                                                sellItem2 = sellItem2.ToLower();
                                                                if (sellItem2 == "yes")
                                                                {
                                                                    if (ego.EquippedShield.Name == shield.Name) { GetStripped(ego, ego.EquippedArmor, ego.EquippedWeapon, nullShield); }
                                                                    equippableShield.Remove(shield);
                                                                    ego.BlueCrystals = ego.BlueCrystals + (shield.Price / 3);
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                    break;
                                                                }
                                                                else if (sellItem2 == "no")
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("All right, bro, maybe next time.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                                else
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("That didn't do anything useful.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        foreach (Armor armor in equippableArmor)
                                                        {
                                                            string bagCheck = armor.Name;
                                                            if (sellItem == bagCheck)
                                                            {
                                                                sellItem = "switzerfisch";
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine($"\"{armor.Name}? How does {(armor.Price / 4)} sound?\"");
                                                                Console.WriteLine();
                                                                Console.WriteLine("Yes");
                                                                Console.WriteLine("No");
                                                                Console.WriteLine();
                                                                Console.Write(">");
                                                                sellItem2 = Console.ReadLine();
                                                                sellItem2 = sellItem2.ToLower();
                                                                if (sellItem2 == "yes")
                                                                {
                                                                    if (ego.EquippedArmor.Name == armor.Name) { GetStripped(ego, rags, ego.EquippedWeapon, ego.EquippedShield); }
                                                                    equippableArmor.Remove(armor);
                                                                    ego.BlueCrystals = ego.BlueCrystals + (armor.Price / 4);
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                    break;
                                                                }
                                                                else if (sellItem2 == "no")
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("All right, bro, maybe next time.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                                else
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("That didn't do anything useful.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                            }
                                                        }
                                                        foreach (Weapon weapon in equippableWeapon)
                                                        {
                                                            string bagCheck = weapon.Name;
                                                            if (sellItem == bagCheck)
                                                            {
                                                                sellItem = "switzerfisch";
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine($"\"{weapon.Name}? How does {(weapon.Price / 4)} sound?\"");
                                                                Console.WriteLine();
                                                                Console.WriteLine("Yes");
                                                                Console.WriteLine("No");
                                                                Console.WriteLine();
                                                                Console.Write(">");
                                                                sellItem2 = Console.ReadLine();
                                                                sellItem2 = sellItem2.ToLower();
                                                                if (sellItem2 == "yes")
                                                                {
                                                                    if (ego.EquippedWeapon.Name == weapon.Name) { GetStripped(ego, ego.EquippedArmor, unarmed, ego.EquippedShield); }
                                                                    equippableWeapon.Remove(weapon);
                                                                    ego.BlueCrystals = ego.BlueCrystals + (weapon.Price / 4);
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                    break;
                                                                }
                                                                else if (sellItem2 == "no")
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("All right, bro, maybe next time.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                                else
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("That didn't do anything useful.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                            }
                                                        }
                                                        foreach (Shield shield in equippableShield)
                                                        {
                                                            string bagCheck = shield.Name;
                                                            if (sellItem == bagCheck)
                                                            {
                                                                sellItem = "switzerfisch";
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine($"\"{shield.Name}? How does {(shield.Price / 4)} sound?\"");
                                                                Console.WriteLine();
                                                                Console.WriteLine("Yes");
                                                                Console.WriteLine("No");
                                                                Console.WriteLine();
                                                                Console.Write(">");
                                                                sellItem2 = Console.ReadLine();
                                                                sellItem2 = sellItem2.ToLower();
                                                                if (sellItem2 == "yes")
                                                                {
                                                                    if (ego.EquippedShield.Name == shield.Name) { GetStripped(ego, ego.EquippedArmor, ego.EquippedWeapon, nullShield); }
                                                                    equippableShield.Remove(shield);
                                                                    ego.BlueCrystals = ego.BlueCrystals + (shield.Price / 4);
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("\"Hey man good doing business with you.\"");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                    break;
                                                                }
                                                                else if (sellItem2 == "no")
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("All right, bro, maybe next time.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                                else
                                                                {
                                                                    Console.WriteLine();
                                                                    Console.WriteLine();
                                                                    Console.WriteLine("That didn't do anything useful.");
                                                                    Console.WriteLine();
                                                                    Console.Write("Press ENTER to continue");
                                                                    Console.ReadLine();
                                                                }
                                                            }
                                                        }
                                                    }
                                                    foreach (Item item in undroppables)
                                                    {
                                                        sellItem = "switzerfisch";
                                                        string bagCheck = item.Name;
                                                        if (sellItem == bagCheck)
                                                        {
                                                            if (item.Name == "Rags")
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("\"Hrmm... Nah, bro, I think you should hold onto those.\"");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                            else
                                                            {
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("OK, you sell it.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine();
                                                                Console.WriteLine("Then you think better of it and buy it back.");
                                                                Console.WriteLine();
                                                                Console.Write("Press ENTER to continue");
                                                                Console.ReadLine();
                                                            }
                                                        }
                                                    }
                                                    foreach (Potion potion in potionBelt)
                                                    {
                                                        sellItem = "switzerfisch";
                                                        string bagCheck = potion.Name;
                                                        if (sellItem == bagCheck)
                                                        {
                                                            Console.WriteLine();
                                                            Console.WriteLine();
                                                            Console.WriteLine("\"Ehh sorry, bro, I don't deal in those kinds of things.");
                                                            Console.WriteLine();
                                                            Console.Write("Press ENTER to continue");
                                                            Console.ReadLine();
                                                        }
                                                    }
                                                }
                                                if (sellItem == "Exit")
                                                {
                                                    sellLoop = false;
                                                    sellItem = "switzerfisch";
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("\"Cool, man.\"");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                                if (sellItem != "switzerfisch")
                                                {
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("That didn't do anything useful.");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                            }
                                        }
                                        else if (purchaseItem == "exit")
                                        {
                                            peteLoop = false;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Cool, man.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("That didn't do anything useful.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Sorry, bro -- you took all my stuff!.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }

                            if (action == "rest")
                            {
                                action = "complete";
                                if (ego.BlueCrystals > 2)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yeah, man, get some rest. Don't worry for a second me and Pete got your back.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("You stretch out on the plank of wood and go to sleep.");
                                    ego.CurrentHitPoints = ego.MaxHitPoints;
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Hey, man, you're looking a little light in the pockets... I need to eat too -- you understand, right, bro? I'll be here when you've got a few more to spend.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }

                            if (action == "talk to")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Talk to? Talk to WHO?!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action.StartsWith("talk to "))
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                                Console.WriteLine();
                                Console.WriteLine("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                       

                        break;

                    case "G6": //Dryad
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[10, 12] = "[x]";
                        discoveredMap[10, 11] = "-";
                        discoveredMap[10, 13] = "-";
                        discoveredMap[9, 12] = " | ";
                        discoveredMap[11, 12] = " | ";
                        if (gusQuestCompleted == true && janeQuestGiven == false && searchedTree == true)
                        {
                            janeQuestGiven = true;
                            janeLoop = true;
                            Console.WriteLine("\"Hey, you. Come here.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The tree woman drops her tree-like pose as she addresses you.");
                            Console.WriteLine();
                            Console.WriteLine("\"I've seen you coming and going from the cartel. There's a lot of activity going on -- you're not going after Jesse... are you?\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"I understand. It is his doing we're all locked down here, and likely the only way out is through him. I won't tell you not to.\"");
                            Console.WriteLine();
                            Console.WriteLine("\"However, if you'll do something for me, then I can make your way far easier.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"There is a secret escape tunnel that will take you straight to Jesse. I can get you the key to this door.\"");
                            Console.WriteLine();
                            Console.WriteLine("\"But... you must promise me that you won't kill him.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            while (janeLoop == true)
                            {
                                Console.Clear();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Will you promise me?\"");
                                Console.WriteLine();
                                Console.WriteLine("Yes");
                                Console.WriteLine("No");
                                Console.WriteLine();
                                Console.Write(">");

                                action = Console.ReadLine();
                                action = action.ToLower();
                                action = action.Trim();

                                if (action == "yes")
                                {
                                    janeLoop = false;
                                    freePotions = true;
                                    undroppables.Add(janesKey);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Thank you.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Take this key and use it to enter a room to the southwest. In the drawer of a nightstand will be the key to the door.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"The secret door is nearby. He's got some kid on a pogo stick guarding it.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"He has strict instructions and will not let you in. But afterward there should be nothing between you and Jesse.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"And - please - take any potions you need. Free of charge.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (action == "no")
                                {
                                    janeLoop = false;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Oh. I guess I understand. Please just... make it quick at least.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("That didn't do anything useful.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }
                        else
                        {
                            if (searchedTree == false) { Console.WriteLine("The very first thing you notice is that there is a [tree] in the corner of this room. It is not apparent how a plant could survive or even take root in a place like this."); }
                            if (searchedTree == true) { Console.WriteLine("The [tree] woman stands in the corner, looking as realistic as ever."); }
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the north, south, east, and west.");
                            Console.WriteLine();
                            Console.WriteLine("What will you do?");
                            Console.WriteLine("-------------------");
                            Console.WriteLine("Inventory");
                            Console.WriteLine("Map");
                            Console.WriteLine("Stats");
                            Console.WriteLine("Look at");
                            Console.WriteLine("Search");
                            if (searchedTree == true) { Console.WriteLine("Talk to"); }
                            if (searchedTree == true) { Console.WriteLine("Buy potions"); }
                            Console.WriteLine("Go north");
                            Console.WriteLine("Go south");
                            Console.WriteLine("Go east");
                            Console.WriteLine("Go west");
                            Console.WriteLine();
                            Console.WriteLine();

                            Console.Write("Your action: ");
                            action = Console.ReadLine();
                            action = action.ToLower();
                            action = action.Trim();

                            if (action == "go west")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "G6";
                                ego.Location = "F6";
                                discoveredMap[10, 12] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "go east")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "G6";
                                ego.Location = "H6";
                                discoveredMap[10, 12] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "go north")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "G6";
                                ego.Location = "G5";
                                discoveredMap[10, 12] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "go south")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "G6";
                                ego.Location = "G7";
                                discoveredMap[10, 12] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at tree" && searchedTree == false)
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You don't even need that famous ecologist's correspondence school for botanists. Trees can't live down here. But, nevertheless, there it is.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search tree" && searchedTree == false)
                            {
                                action = "complete";
                                searchedTree = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The tree is warm, and gives to the touch slightly more than you'd expect it to. Its leaves are brilliantly green and press up against the dungeon ceiling.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Getting down on your hands and knees to inspect its roots, you find that the tree isn't even planted into the floor at all. Its trunk seems to be split in half as it comes from the ground and unites a few feet up - perhaps to maintain balance without being truly rooted.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Completely taken with curiosity, you press your ear up against the trunk and begin knocking on various parts of the trunk to listen to the effects. Your hands find their way to two protrusions from the trunk above you which are even softer than the rest of the tree. Intrigued, you squeeze to see just how malleable they are.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Excuse me.\"");
                                Thread.Sleep(3000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Holy shit.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.Clear();
                                Console.WriteLine("You fall backward, landing ass first and head second. Looking up, you see a woman standing over you with a somewhat miffed expression on her face. Half of the tree's leaves are now sassily pressed up against what seems to be the woman's hip.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("She brushes off her... knobs, and returns her gaze to you. \"Did you want something?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You know you can't just say nothing, but you also don't want to find your way out of this dungeon just to be slapped with sexual harrassment charges. You must craft this response CAREFULLY.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("...");
                                Thread.Sleep(3000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("OK it's been like 2 minutes. It's definitely been too long. Way too long.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.Clear();
                                Console.WriteLine("The woman sighs. \"You're new. It's all right. Get up.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The woman continues as you climb to your feet. \"I make and sell potions. If you have business for me, all you need do is say something; I can see you're not a danger so I no longer need to hide.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Oh, and - just in case you're some knight in shining armor type - I don't need rescuing. I am not a poor damsel cursed to remain in \'form of tree\' until a brave hero breaks the spell. I could probably even beat you up.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "look at tree" && searchedTree == true)
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("I mean, now that you know what to look for... even Crocodile Dundee could see from here.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search tree" && searchedTree == true)
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Mmmmmmmnope. Nope nope nope.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "talk to tree" && searchedTree == true)
                            {
                                action = "complete";
                                if (killedJesse == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The woman does not respond.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (undroppables.Contains(dungeonKey))
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The tree woman smiles at you. \"So you've done it, have you?\"");
                                    Console.WriteLine();
                                    Console.WriteLine("\"I hear Jimmy is putting together some obnoxious ceremony for you. He's gathering people at the exit, so there's no way to avoid it -- for either of us.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    if (freePotions == true)
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"And thank you for keeping your promise.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                                else if (undroppables.Contains(jeweledRing) && returnedRing == false)
                                {
                                    janeLoop = true;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Oh. That ring...\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    while (janeLoop == true)
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Could I have it?\"");
                                        Console.WriteLine();
                                        Console.WriteLine("Yes");
                                        Console.WriteLine("No");
                                        Console.WriteLine();
                                        Console.Write(">");

                                        action = Console.ReadLine();
                                        action = action.ToLower();
                                        action = action.Trim();

                                        if (action == "yes")
                                        {
                                            action = "complete";
                                            janeLoop = false;
                                            returnedRing = true;
                                            newConverseAvailable = true;
                                            undroppables.Remove(jeweledRing);
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("She smiles and looks at it for a moment, then slips it into what you assume is a pocket. \"Thank you.\"");
                                            Console.WriteLine();
                                            Console.WriteLine("\"I had forgotten where I left this; I thought it was lost. I'm glad you brought it back to me.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else if (action == "no")
                                        {
                                            action = "complete";
                                            janeLoop = false;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Oh. Well I suppose I've already resigned to it being lost... So all right.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("That didn't do anything useful.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                }
                                else if (converseCount == 7 && readLogbook == true && returnedRing == true && tookJaneCash == false)
                                {
                                    if (tookGusCash && tookHermitCash && tookJaneCash && tookLydiaCash && tookMikeCash && tookPeteCash && tookSaulCash)
                                    {
                                        undroppables.Add(jeweledRing);
                                        tookJaneCash = true;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Do you really think that'll work? Do you think Jesse will let this go?\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("She retrieves the ring from her pocket and holds it in the palm of one hand while running her finger along it with the other.");
                                        Console.WriteLine();
                                        Console.WriteLine("\"All right. But remember your promise!\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Do you really think that'll work? Do you think Jesse will let this go?\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("She retrieves the ring from her pocket and holds it in the palm of one hand while running her finger along it with the other.");
                                        Console.WriteLine();
                                        Console.WriteLine("\"I can't. I just don't see... I just don't think you have enough to convince him to take the trade. I can't risk it.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                                else if (freePotions == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Please remember your promise.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (noticedJane == false)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Just because I've decided you're not a threat to me doesn't mean I want to chat.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (noticedJane == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"A picture of me in a church? I apologize if I gave the impression that I'd care.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }

                            if (action == "talk to")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Talk to? Talk to WHO?!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action.StartsWith("talk to "))
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                                Console.WriteLine();
                                Console.WriteLine("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "buy potions" && searchedTree == true && freePotions == true)
                            {
                                action = "complete";
                                if (killedJesse == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The woman does not respond.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    dryadLoop = true;
                                    while (dryadLoop == true)
                                    {
                                        if (potionBelt.Count >= 3)
                                        {
                                            dryadLoop = false;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("What do you think this is: every video game ever? This is real life, and you can't carry any more potions without them breaking. I'd be happy to sell you more when you use the ones you already have.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            break;
                                        }
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Light Healing Potion (10 HP) - Free!");
                                        Console.WriteLine("Healing Potion (20 HP) - Free!");
                                        Console.WriteLine("Greater Healing Potion (50 HP) - Free!");
                                        Console.WriteLine();
                                        Console.WriteLine("Exit");
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.Write("\"Well? What would you like?\" ");
                                        Console.WriteLine();
                                        Console.Write("> ");
                                        purchaseItem = Console.ReadLine();
                                        purchaseItem = purchaseItem.ToLower();
                                        purchaseItem = myTI.ToTitleCase(purchaseItem);
                                        purchaseItem = purchaseItem.Trim();

                                        if (purchaseItem == "Light Healing Potion")
                                        {
                                            potionBelt.Add(lightHealingPotion);
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Light? Are you doing some self-imposed-challenge run?\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        if (purchaseItem == "Healing Potion")
                                        {
                                            potionBelt.Add(healingPotion);
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Normal? Are you doing some self-imposed-challenge run?\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        if (purchaseItem == "Greater Healing Potion")
                                        {
                                            potionBelt.Add(greaterHealingPotion);
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"You got it.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        if (purchaseItem == "Exit")
                                        {
                                            dryadLoop = false;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Good luck.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                }
                            }
                            else if (action == "buy potions" && searchedTree == true)
                            {
                                action = "complete";
                                if (killedJesse == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The woman does not respond.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    dryadLoop = true;
                                    while (dryadLoop == true)
                                    {
                                        if (potionBelt.Count >= 3)
                                        {
                                            dryadLoop = false;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("What do you think this is: every video game ever? This is real life, and you can't carry any more potions without them breaking. I'd be happy to sell you more when you use the ones you already have.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            break;
                                        }
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Light Healing Potion (10 HP) - 20 crystals");
                                        Console.WriteLine("Healing Potion (20 HP) - 50 crystals");
                                        Console.WriteLine("Greater Healing Potion (50 HP) - 150 crystals");
                                        Console.WriteLine();
                                        Console.WriteLine("Exit");
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.Write("\"Well? What would you like?\" ");
                                        Console.WriteLine();
                                        Console.Write("> ");
                                        purchaseItem = Console.ReadLine();
                                        purchaseItem = purchaseItem.ToLower();
                                        purchaseItem = myTI.ToTitleCase(purchaseItem);
                                        purchaseItem = purchaseItem.Trim();

                                        if (purchaseItem == "Light Healing Potion")
                                        {
                                            if (ego.BlueCrystals >= 20)
                                            {
                                                potionBelt.Add(lightHealingPotion);
                                                ego.BlueCrystals = ego.BlueCrystals - 20;
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"I hope you need it enough to come back, but not so much that you don't.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                            else
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"Oh dear. I seem not to have enough of the key component of my elixir! BLUE CRYSTALS -- GO GET MORE.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                        }
                                        if (purchaseItem == "Healing Potion")
                                        {
                                            if (ego.BlueCrystals >= 50)
                                            {
                                                potionBelt.Add(healingPotion);
                                                ego.BlueCrystals = ego.BlueCrystals - 50;
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"I hope you need it enough to come back, but not so much that you don't.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                            else
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"Oh dear. I seem not to have enough of the key component of my elixir! BLUE CRYSTALS -- GO GET MORE.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                        }
                                        if (purchaseItem == "Greater Healing Potion")
                                        {
                                            if (ego.BlueCrystals >= 150)
                                            {
                                                potionBelt.Add(greaterHealingPotion);
                                                ego.BlueCrystals = ego.BlueCrystals - 150;
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"I hope you need it enough to come back, but not so much that you don't.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                            else
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"Oh dear. I seem not to have enough of the key component of my elixir! BLUE CRYSTALS -- GO GET MORE.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                        }
                                        if (purchaseItem == "Exit")
                                        {
                                            dryadLoop = false;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Hmph.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                }                                
                            }
                        }


                        break;

                    case "G5": //Gale
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[8, 12] = "[x]";
                        discoveredMap[7, 12] = " | ";
                        discoveredMap[9, 12] = " | ";
                        if (undroppables.Contains(dungeonKey))
                        {
                            Console.WriteLine("There is no one here, leaving just an unguarded make-shift [fortification].");
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the north and south.");
                            Console.WriteLine();
                            Console.WriteLine("What will you do?");
                            Console.WriteLine("-------------------");
                            Console.WriteLine("Inventory");
                            Console.WriteLine("Map");
                            Console.WriteLine("Stats");
                            Console.WriteLine("Look at");
                            Console.WriteLine("Search");
                            Console.WriteLine("Talk to");
                            Console.WriteLine("Go north");
                            Console.WriteLine("Go south");
                            Console.WriteLine();
                            Console.WriteLine();

                            Console.Write("Your action: ");
                            action = Console.ReadLine();
                            action = action.ToLower();

                            if (action == "go north")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You go north. Straight into a stone wall. derp.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "go south")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "G5";
                                ego.Location = "G6";
                                discoveredMap[8, 12] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at fortification")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Make-shift it may be, but it'll certainly hold against anything you could do it.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search fortification")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The wall is made of well-placed wood and stone. While it's certainly not impenetrable, any effort to break in would, at the very least, take long enough and create such a ruckus that it would be noticed.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Well it would have when there were actually people here. I suppose now you could actually spend the time breaking in if you really wanted to.");
                                Console.WriteLine();
                                Console.WriteLine("Unfortunately, we got a little bit of senioritis going on here, and with this being the end of the game, all the programmers are too eager to wrap things up to get them to stay and write the code for this course of action. Sorry!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                        else
                        {
                            Console.WriteLine("There is a [man] pacing back and forth over a make-shift [fortification]. He eyes you as you walk up, but seems more interested in keeping pace between the ends of his patrol.");
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the north and south.");
                            Console.WriteLine();
                            Console.WriteLine("What will you do?");
                            Console.WriteLine("-------------------");
                            Console.WriteLine("Inventory");
                            Console.WriteLine("Map");
                            Console.WriteLine("Stats");
                            Console.WriteLine("Look at");
                            Console.WriteLine("Search");
                            Console.WriteLine("Talk to");
                            Console.WriteLine("Go north");
                            Console.WriteLine("Go south");
                            Console.WriteLine();
                            Console.WriteLine();

                            Console.Write("Your action: ");
                            action = Console.ReadLine();
                            action = action.ToLower();
                            action = action.Trim();

                            if (action == "go north")
                            {
                                action = "complete";
                                if (losPollosHermanos == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("This is a parser game made in the style of 90s adventure games, so you gotta type out the code... hope you remember it! At least it's not switzerfisch or something.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Hey I get it. Life's short! It's \"Los Pollos Hermanos.\" But don't say I never did anything for you.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("You go north. Straight into a stone wall. derp.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }

                            }

                            if (action == "go south")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "G5";
                                ego.Location = "G6";
                                discoveredMap[8, 12] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at man")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("This man is not what you'd expect a sentry to look like. He seems like he'd be more at home with a book, or perhaps a karaoke machine. But regardless of how he looks, he is figuratively and literally standing between you and what is beyond this gate.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search man")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He's all the way up there... and you're all the way down here... it's just not meant to be.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "talk to man")
                            {
                                action = "complete";
                                if (galeQuestGiven == false)
                                {
                                    galeQuestGiven = true;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("As you go to speak, he turns and interrupts you.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Do you have business here? The boss is too busy to do a meet and greet with all new residents.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("After a pause, the man sighs and speaks.");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"If you want to see Gus, you can do him a service. To the east and far north of here is his competitor. Bring us his crystals; it doesn't matter how you get them. Without his crystals he won't have the power to command his empire.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Seeing the blank expression you're exhibiting, he continues. \"Ah of course... Blue crystals. It's basically money down here. All trade is done through this currency.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (galeQuestGiven == true && undroppables.Contains(sackOfCash))
                                {
                                    galeQuestCompleted = true;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("The man halts his sentry and faces you. \"Is that the Salamanca cache you got there? Let me take a re");
                                    Thread.Sleep(3000);
                                    Console.Write("e");
                                    Thread.Sleep(500);
                                    Console.Write("e");
                                    Thread.Sleep(500);
                                    Console.Write("e");
                                    Thread.Sleep(500);
                                    Console.Write("a");
                                    Thread.Sleep(500);
                                    Console.Write("l");
                                    Thread.Sleep(500);
                                    Console.WriteLine(" close look.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Unsure of how else to proceed, you open the sack to showcase the crystals within.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yipes! You surprised me. Now I'm not sure what to do, as I didn't actually expect you to succeed. Just... hold on right there.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("He turns and disappears from view behind the fortification. A long moment later, a door opens and you are beckoned to enter.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    randomEncountersOn = true;
                                    ego.FleeLocation = "G5";
                                    ego.Location = "G4";
                                    discoveredMap[8, 12] = "[ ]";
                                }
                                else if (galeQuestGiven == true && galeQuestCompleted == false)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The man turns and speaks. \"Well do you have it? It's gonna be way, way more than you could possibly gather on your own, so save yourself the strain of going down that road. Just go get it.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (galeQuestGiven == true && galeQuestCompleted == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Are you speaking to me?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }

                            if (action == "los pollos hermanos")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man disappears behind the fortification. A short moment later, the door opens.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                randomEncountersOn = true;
                                ego.FleeLocation = "G5";
                                ego.Location = "G4";
                                discoveredMap[8, 12] = "[ ]";
                            }

                            if (action == "look at fortification")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Make-shift it may be, but it'll certainly hold against anything you could do it.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search fortification")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The wall is made of well-placed wood and stone. While it's certainly not impenetrable, any effort to break in would, at the very least, take long enough and create such a ruckus that it would be noticed.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "talk to")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Talk to? Talk to WHO?!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action.StartsWith("talk to "))
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                                Console.WriteLine();
                                Console.WriteLine("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }


                        break;

                    case "G4": //Gus
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[6, 12] = "[x]";
                        discoveredMap[7, 12] = " | ";
                        mapCartel = true;
                        Console.WriteLine("A number of men occupy this room, some of which are watching you. There is one [man] obviously in charge, who sits at a table opposite an empty chair. He gestures for you to sit.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Sit");
                        Console.WriteLine("Go south");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            if (undroppables.Contains(sackOfCash) && tookGusCash == false)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Two men bar your path. It seems you have business to attend to.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                randomEncountersOn = true;
                                ego.FleeLocation = "G4";
                                ego.Location = "G5";
                                discoveredMap[6, 12] = "[C]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                        }

                        if (action == "look at man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The man is completely calm and collected. He sits maintaining eye contact, yet does not convey any threat.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Something about him tells you that's just not gonna fly.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The man's response is simply a small twitch of his eye and a reiteration of his gesture for you to sit down.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "sit")
                        {
                            action = "complete";
                            if (converseCount == 7 && readLogbook == true && tookGusCash == false)
                            {
                                undroppables.Add(sackOfCash);
                                tookGusCash = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hm. You believe buying Heisenberg's escape is the key to our release? I am less convinced than you.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He flares an eyebrow momentarily. \"Though I suppose with the power I am about to amass that I could easily take it back.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"And everyone else's.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"All right, you have my support. You make take back Salamanca's stash.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (undroppables.Contains(sackOfCash) && tookGusCash == false)
                            {
                                undroppables.Remove(sackOfCash);
                                losPollosHermanos = true;
                                newConverseAvailable = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"My men tell me you did us a service. And for that I would see you rewarded.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                if (salamancaStolenCrystals > 0)
                                {
                                    gusLoop = true;
                                    while (gusLoop == true)
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("He looks at you silently for a moment, as if studying you.");
                                        Console.WriteLine();
                                        Console.WriteLine("\"But first I must ask. Did you take any?\"");
                                        Console.WriteLine();
                                        Console.WriteLine("Yes");
                                        Console.WriteLine("No");
                                        Console.WriteLine();
                                        Console.Write(">");
                                        action = Console.ReadLine();
                                        action = action.ToLower();
                                        action = action.Trim();

                                        if (action == "yes")
                                        {
                                            gusLoop = false;
                                            action = "complete";
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Hm. I do appreciate your honesty.\"");
                                            Console.WriteLine();
                                            Console.WriteLine("He gestures to some men, who come over and take all of your blue crystals. Given your situation it would be foolish to fight back.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            if (salamancaStolenCrystals > ego.BlueCrystals)
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("A smirk escapes the man's stoic front. \"Have you spent it already? We'll have to extract the proper value otherwise.\"");
                                                Console.WriteLine();
                                                Console.WriteLine("\"I have need of one such as you, so consider reward for your service an invitation back to this place. Simply say 'Los pollos hermanos' outside and you will be given entry.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"For now, however, we shall recover our rightful property.\"");
                                                Console.WriteLine();
                                                Console.WriteLine("The man nods to someone behind you. Before you can think to react, there's a loud \"bang\" and the world goes black.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                                break;
                                            }
                                            else
                                            {
                                                ego.BlueCrystals = 0;
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"Do understand that I must trust those in my employ.\"");
                                                Console.WriteLine();
                                                Console.WriteLine("I have need of one such as you, so consider reward for your service an invitation back to this place. Simply say 'Los pollos hermanos' outside and you will be given entry.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"Until then, however, I have some things I must do. Please return another time.\"");
                                                Console.WriteLine();
                                                Console.WriteLine("The man nods to someone behind you. Turning around you see there are two large men coming to escort you out.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                randomEncountersOn = true;
                                                ego.FleeLocation = "G4";
                                                ego.Location = "G5";
                                                discoveredMap[6, 12] = "[C]";
                                            }
                                        }
                                        else if (action == "no")
                                        {
                                            gusLoop = false;
                                            action = "complete";
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("The man's expressionless mask gives way to a slight squinting of the eyes. He continues to study you for a moment longer.");
                                            Console.WriteLine();
                                            gusSenseMotiveCheck = die.Next(1, 21) + (salamancaStolenCrystals / 10);
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            if (gusSenseMotiveCheck > 10)
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("A smirk escapes the man's stoic front. \"Do understand that I must trust those in my employ.\"");
                                                Console.WriteLine();
                                                Console.WriteLine("\"I have need of one such as you, so consider reward for your service an invitation back to this place. Simply say 'Los pollos hermanos' outside and you will be given entry.\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"For now, however, we shall recover our rightful property.\"");
                                                Console.WriteLine();
                                                Console.WriteLine("The man nods to someone behind you. Before you can think to react, there's a loud \"bang\" and the world goes black.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                            }
                                            else
                                            {
                                                equippableWeapon.Add(axe);
                                                axe.Unlocked = true;
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("A smirk escapes the man's stoic front. \"Very well then.\"");
                                                Console.WriteLine();
                                                Console.WriteLine("\"Please take this in return for your services. This axe wasn't made for fighting, but it's better than much else you'll find down here, yes?\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"I have need of one such as you. Simply say 'Los pollos hermanos' outside and you will be given entry. For now, however, I ask that you return another time.\"");
                                                Console.WriteLine();
                                                Console.WriteLine("The man nods to someone behind you. Turning around you see there are two large men coming to escort you out.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                randomEncountersOn = true;
                                                ego.FleeLocation = "G4";
                                                ego.Location = "G5";
                                                discoveredMap[6, 12] = "[C]";
                                            }
                                        }
                                        else
                                        {
                                            action = "complete";
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("No weasling out of this one. Answer the man.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                }
                                else
                                {
                                    equippableWeapon.Add(axe);
                                    axe.Unlocked = true;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Please take this in return. This axe wasn't made for fighting, but it's better than much else you'll find down here, yes?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"I have need of one such as you. Simply say 'Los pollos hermanos' outside and you will be given entry. For now, however, I ask that you return another time.\"");
                                    Console.WriteLine();
                                    Console.WriteLine("The man nods to someone behind you. Turning around you see there are two large men coming to escort you out.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    randomEncountersOn = true;
                                    ego.FleeLocation = "G4";
                                    ego.Location = "G5";
                                    discoveredMap[6, 12] = "[C]";
                                }
                            }
                            else if (gusQuestGiven == false)
                            {
                                gusQuestGiven = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man nods at you. \"I thank you for joining me. Now - I have a proposal for you. One that is for our mutual benefit.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("His face cracks a half smile. \"You would like to get out of here, correct? Unsurprisingly, so would we. With your help I believe we could just pull that off.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"The way out is through Jesse; he is the one who constructed this place. I am unsure of what his aim is, but he systematically captured many of his past associates and trapped us all within.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"He is currently holed up with his partner, Heisenberg. My plan is this: break in and force our release -- through whatever means necessary. A simple plan, yes - but difficult.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Our first aim will be to weaken his defenses by swaying those in his employ that are less than loyal. You have already started us off on that endeavor.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Salamanca's money is useful, but what it symbolizes is that which truly matters: Power. People follow power, and with your aid we shall be that to which this dungeon's denizens flock.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"There is one more man we need concern ourselves with. He has done work for me in the past, but he adamantly maintains his independence. He is strong, and he is skilled; he must either be one of us, or not of consequence.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"He is a good man, but do not let his headstrong nature keep us from our goal. Do whatever is necessary to make him fall in line.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Mike resides to the far east of here. I look forward to your return.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (gusQuestGiven == true && mikeQuestCompleted == true)
                            {
                                gusQuestCompleted = true;
                                knightSuitAvailable = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"So Mike has agreed not to interfere. That will do fine.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"The time has come to make our move.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I will bribe and intimidate most of Heisenberg's forces. His fortress shall be far more accessible to you from this point forward.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"We're counting on you.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (gusQuestGiven == true && gusQuestCompleted == false)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"It is good to see you are safe. But your mission is too important for dawdling. Please deal with Mike as quickly as possible.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (gusQuestCompleted == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"There is nothing left to discuss. It is time.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }


                        break;

                    case "C4": //Vacuum Man
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[6, 4] = "[x]";
                        discoveredMap[7, 5] = " | ";
                        Console.WriteLine("This room just has a [man] standing in the center of it. While you imagine he's aware of your presence, he has no apparent reaction.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Talk to");
                        Console.WriteLine("Go south");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C4";
                            ego.Location = "C5";
                            discoveredMap[6, 4] = "[?]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The man stands stationary with a bag at his feet. He doesn't seem to be guarding or watching anything. Just... standing.");
                            Console.WriteLine();
                            Console.WriteLine("As you look over the man and study him, he continues to carry on as if nothing has changed. He exudes an inexplicable air of confidence, making his mere presence intimidating.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("As you reach out to touch the man, he grabs your wrist and turns to meet your gaze.");
                            Console.WriteLine();
                            Console.WriteLine("\"Can I do something for you, sir,\" he states moreso than asks.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("After a moment, he releases your arm and returns his eyes to their previous heading. \"Be off with you then.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to man")
                        {
                            action = "complete";
                            if (disappearChoice == null)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man has no reaction. He may as well be deaf.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Our business is concluded.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "i need a new dust filter for my hoover maxextract pressurepro model 60 - can you help me with that?")
                        {
                            action = "complete";
                            if (disappearChoice != null)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Our business is concluded.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (tookGusCash && tookHermitCash && tookJaneCash && tookLydiaCash && tookMikeCash && tookPeteCash && tookSaulCash)
                            {
                                talkLoop = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man turns his head to you, then shifts his gaze down to your bounty of goods.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I don't usually accept trades. But given the circumstances I have learned to be flexible. I accept your offer as equitable.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                while (talkLoop == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Who's going?\"");
                                    Console.WriteLine();
                                    Console.Write(">");

                                    action = Console.ReadLine();
                                    action = action.ToLower();
                                    action = action.Trim();

                                    if (action == "heisenberg" || action == "jesse")
                                    {
                                        disappearChoice = action;
                                        action = "complete";
                                        talkLoop = false;
                                        undroppables.Remove(sackOfCash);
                                        undroppables.Remove(generator);
                                        undroppables.Remove(jeweledRing);
                                        undroppables.Remove(minkCoat);
                                        undroppables.Remove(giantBlueCrystal);
                                        undroppables.Remove(sackOfGoodies);
                                        undroppables.Remove(safe);
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"It's done.\"");
                                        Console.WriteLine();
                                        Console.WriteLine("\"You get me to him and I will handle everything from there.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else if (action == "badger" || action == "skinny pete" || action == "jane" || action == "gale" || action == "gus" || action == "bowling guy" || action == "saul" || action == "hermit mcgill" || action == "lydia" || action == "mike" || action == "daniel" || action == "narrator" || (action == "salamanca" && !salamancaDead) || action == "sad broom man")
                                    {
                                        disappearChoice = action;
                                        action = "complete";
                                        talkLoop = false;
                                        undroppables.Remove(sackOfCash);
                                        undroppables.Remove(generator);
                                        undroppables.Remove(jeweledRing);
                                        undroppables.Remove(minkCoat);
                                        undroppables.Remove(giantBlueCrystal);
                                        undroppables.Remove(sackOfGoodies);
                                        undroppables.Remove(safe);
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"It's done.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else if (action == "me")
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("The man pulls his bag up off the floor. He takes out a hand-held vacuum, and gives it to you. He holds the bag open, and turns to face you. \"Just relax.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("He places the bag over your head, and everything goes black. You're not too sure what happened next, but you awaken on your living room couch.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        ego.Location = "disappeared";
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"It looks like you worked hard for this haul. You might want to give me a name.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                            }
                            else if (ego.BlueCrystals >= 125000)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man pulls his bag up off the floor. He takes out a hand-held vacuum, and gives it to you. He holds the bag open, and turns to face you. \"Just relax.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He places the bag over your head, and everything goes black. You're not too sure what happened next, but you awaken on your living room couch.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                ego.Location = "disappeared";
                            }
                            else if (ego.BlueCrystals < 125000)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man turns his head, and quickly shifts his gaze down to your hands and back to your eyes. A moment later he returns to his previous stance.");
                                Console.WriteLine();
                                Console.WriteLine("You must be missing something.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "H9": //outside Hermit McGill
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[16, 14] = "[x]";
                        discoveredMap[16, 13] = "-";
                        Console.WriteLine("You have come to a walled off section of the dungeon with a peculiar [dwelling] fashioned out of peculiar material. There are pliable metallic [sheets] netted between posts.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go west")
                        {
                            action = "complete";
                            mapHermit = true;
                            randomEncountersOn = true;
                            ego.FleeLocation = "H9";
                            ego.Location = "G9";
                            discoveredMap[16, 14] = "[H]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at dwelling")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Whoever built this thing must've gone to great lengths to find, trade, or otherwise acquire all this material. There's more metal here than probably the rest of the dungeon combined.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search dwelling")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("As you approach, a voice from inside calls out, \"whoever you are, please leave any light source in the lighthouse!\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Flabbergasted that you failed to notice a lighthouse in a small dungeon room, you spin around and scan rapidly. After a short time, your eyes lock onto a bucket labeled \"Hermit's lighthouse.\" The word \"hermit\" is underlined... twice.");
                            Console.WriteLine();
                            Console.WriteLine("You don't have anything anyway, so you go inside.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"One. Two. Three.\"");
                            Console.WriteLine();
                            Console.WriteLine("Someone is counting your steps aloud as you take them. As you begin to take your next step, the voice becomes agitated and spikes in both volume and pitch.");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"NO MORE THAN FOUR! DON\'T TAKE MORE THAN FOUR STEPS IN!!\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            hermitAnger--;
                            if (hermitAnger < 0) { hermitAnger = 0; }
                            ego.Location = "Hermit";
                        }

                        if (action == "look at sheets")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Are those... space blankets?");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search sheets")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Defintely space blankets.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "Hermit": //Hermit McGill
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        Console.WriteLine("You are in a very, very dark hovel. The [hermit] is here... somewhere.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Talk to");
                        Console.WriteLine("Step forward");
                        Console.WriteLine("Leave");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "leave")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "Hermit";
                            ego.Location = "H9";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Gladly.");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at hermit")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You squint harder and tighter than you ever have before. You still see nothing.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search hermit")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("If you even knew where he was to begin such an action, it'd probably not be a good idea.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "step forward")
                        {
                            action = "complete";
                            hermitAnger = hermitAnger + 3;
                            if (hermitAnger > 11) { hermitAnger = 11; }
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("If you thought the voice was agitated before...");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.Clear();
                            Console.WriteLine("\"GET OUT! GET OUT! GET OUT! WHAT ARE YOU DOING!? GET OUT!!\"");
                            Thread.Sleep(1000);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("A book comes flying at you. Unfortunately it's so dark you only found this out by it hitting you square in the face.");
                            Console.WriteLine();
                            Console.WriteLine("You've taken 1 point of damage.");
                            Thread.Sleep(3000);
                            ego.CurrentHitPoints = ego.CurrentHitPoints - 1;
                            if (ego.CurrentHitPoints <= 0)
                            {
                                EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);                              
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit has begun filling the space between his words with panicked screams and short, shallow breaths.");
                                Console.WriteLine();
                                Console.WriteLine("\"GET OUT NOW GET OUT NOW GET OUT GET OUT NOW GET OUT NOW NOW NOW GET OUT!\"");
                                Console.WriteLine();
                                Console.WriteLine("Without even punctuation to pause on, you really have to give him credit.");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("...It's probably the wise move to leave.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                ego.Location = "H9";
                            }
                        }

                        if (action == "talk to hermit")
                        {
                            if (hermitVisited == false)
                            {
                                action = "complete";
                                hermitVisited = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - welcome to my home. I appreciate your not bringing any light in here. But I don't believe we've met? They call me Hermit McGill. And you are?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - that's all right. Names aren't important. It's CHARACTER that defines you.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - unless there's something you need? I was right in the middle of something. Please try to leave the sheets draped together as you leave.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (hermitAnger == 10)
                            {
                                action = "complete";
                                Console.Clear();
                                Console.WriteLine("\"GET OUT! GET OUT! GET OUT! WHAT ARE YOU DOING!? GET OUT!!\"");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("A book comes flying at you. Unfortunately it's so dark you only found this out by it hitting you square in the face.");
                                Console.WriteLine();
                                Console.WriteLine("You've taken 1 point of damage.");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - 1;
                                if (ego.CurrentHitPoints >= 0)
                                {
                                    EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                }
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit has begun filling the space between his words with panicked screams and short, shallow breaths.");
                                Console.WriteLine();
                                Console.WriteLine("\"GET OUT NOW GET OUT NOW GET OUT GET OUT NOW GET OUT NOW NOW NOW GET OUT!\"");
                                Console.WriteLine();
                                Console.WriteLine("Without even punctuation to pause on, you really have to give him credit.");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("...It's probably the wise move to leave.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                ego.Location = "H9";
                            }
                            else if (converseCount == 7 && readLogbook == true && tookHermitCash == false)
                            {
                                action = "complete";
                                if (hermitAnger < 3)
                                {
                                    tookHermitCash = true;
                                    undroppables.Add(generator);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The hermit clears his throat. \"Yes, well - welcome to my home. I appreciate your not bringing any light in here. What brings you by?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The hermit clears his throat. \"Yes, well - I guess I do want to leave. You think this will get us all out, do you?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The hermit clears his throat. \"Yes, well - I can see the merit of your argument. I have something that may be of use to you.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The hermit clears his throat. \"Yes, well - I brought this here with me. I kept it hidden just incase it came in handy. It'll probably be worth a good amount in trade.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The hermit gives you an Electric Generator.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The hermit clears his throat. \"Yes, well - I see you're back. Be sure you left any light source outside. Is there a reason you're here?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The hermit clears his throat. \"Yes, well - I guess I do want to leave. You think this will get us all out, do you?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The hermit clears his throat. \"Yes, well - Unfortunately I do not see the merit of your argument. You simply do not persuade me to help you.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            else if (saulQuestGiven == true && saulHermitBond == 0)
                            {
                                action = "complete";
                                saulHermitBond++;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - welcome to my home. I appreciate your not bringing any light in here. What brings you by?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well, of course I have stevia. Wait -- who?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Jimmy?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine("\"GET OUT! GET OUT! GET OUT! GET OUT!!\"");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("A book comes flying at you. Unfortunately it's so dark you only found this out by it hitting you square in the face.");
                                Console.WriteLine();
                                Console.WriteLine("You've taken 1 point of damage.");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - 1;
                                if (ego.CurrentHitPoints >= 0)
                                {
                                    EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                }
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit has begun filling the space between his words with panicked screams and short, shallow breaths.");
                                Console.WriteLine();
                                Console.WriteLine("\"DON'T SAY THAT NAME IN HERE I WANT NOTHING TO DO WITH HIM!\"");
                                Console.WriteLine();
                                Console.WriteLine("\"TELL HIM HE'S A ROTTEN NO-GOODNICK!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("...It's probably the wise move to leave.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                ego.Location = "H9";
                            }
                            else if (saulHermitBond == 2)
                            {
                                action = "complete";
                                saulHermitBond++;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - welcome to my home. I appreciate your not bringing any light in here. What brings you by?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well, of course I complained about him. Wait -- what?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"'Unacceptable?'\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine("\"GET OUT! GET OUT! GET OUT! GET OUT!!\"");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("A book comes flying at you. Unfortunately it's so dark you only found this out by it hitting you square in the face.");
                                Console.WriteLine();
                                Console.WriteLine("You've taken 1 point of damage.");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - 1;
                                if (ego.CurrentHitPoints >= 0)
                                {
                                    EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                }
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit has begun filling the space between his words with panicked screams and short, shallow breaths.");
                                Console.WriteLine();
                                Console.WriteLine("\"WHAT IS 'ACCEPTABLE' ABOUT GOING AND GETTING DRUNK WITH THE KIDS IN TOWN INSTEAD OF COMING BACK WITH MY GROCERIES IN A REASONABLE AMOUNT OF TIME?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"AND YOU CAN TELL HIM I SAID SO!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("...It's probably the wise move to leave.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                ego.Location = "H9";
                            }
                            else if (saulHermitBond == 4)
                            {
                                action = "complete";
                                saulHermitBond++;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - welcome to my home. I appreciate your not bringing any light in here. What brings you by?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well, of course I gave him orders. Wait -- what?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Didn't like being ordered around all the time?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine("\"GET OUT! GET OUT! GET OUT! GET OUT!!\"");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("A book comes flying at you. Unfortunately it's so dark you only found this out by it hitting you square in the face.");
                                Console.WriteLine();
                                Console.WriteLine("You've taken 1 point of damage.");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - 1;
                                if (ego.CurrentHitPoints >= 0)
                                {
                                    EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                }
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit has begun filling the space between his words with panicked screams and short, shallow breaths.");
                                Console.WriteLine();
                                Console.WriteLine("\"HOW ELSE WOULD I BE SURE HE DID THE RIGHT THING IF ALL HE DOES IS DO WHATEVER HE WANTS IF I DON'T KEEP HIM IN LINE?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"THIS ARRANGEMENT WAS HIS IDEA AFTER ALL!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("...It's probably the wise move to leave.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                ego.Location = "H9";
                            }
                            else if (saulHermitBond == 6)
                            {
                                action = "complete";
                                saulHermitBond++;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - welcome to my home. I appreciate your not bringing any light in here. What brings you by?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well, of course there is much to do. Wait -- what?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"I nagged him all the time?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine("\"GET OUT! GET OUT! GET OUT! GET OUT!!\"");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("A book comes flying at you. Unfortunately it's so dark you only found this out by it hitting you square in the face.");
                                Console.WriteLine();
                                Console.WriteLine("You've taken 1 point of damage.");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - 1;
                                if (ego.CurrentHitPoints >= 0)
                                {
                                    EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                }
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit has begun filling the space between his words with panicked screams and short, shallow breaths.");
                                Console.WriteLine();
                                Console.WriteLine("\"IS ASKING FOR MY FAVORITE SANDWICH AND NEVER GETTING IT NAGGING?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"ALL I EVER WANTED WAS A GARLIC AND AVOCADO SANDWICH!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("...It's probably the wise move to leave.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                ego.Location = "H9";
                            }
                            else if (saulHermitBond == 8)
                            {
                                action = "complete";
                                saulHermitBond++;
                                saulQuestCompleted = true;
                                undroppables.Add(stevia);
                                newConverseAvailable = true;
                                ego.BlueCrystals = ego.BlueCrystals + 2;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - welcome to my home. I appreciate your not bringing any light in here. What brings you by?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well, it's you! I have something for you!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well, Jimmy tells me you need this. I'd like for you to have it.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well, and I apologize if I injured you with those books I threw. Please allow me to pay for a safe rest with that nice young man with the wooden plank.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"He still charges 2 crystals, I'm sure?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (hermitAnger < 3)
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - welcome to my home. I appreciate your not bringing any light in here. What brings you by?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - that's all right. We don't always need a purpose, do we? A simple visit is always nice.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - unless there's something you need? I was right in the middle of something. Please try to leave the sheets draped together as you leave.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (hermitAnger > 2 && hermitAnger < 6)
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - I see you're back. Be sure you left any light source outside. Is there a reason you're here?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - that's fine. Don't always need a purpose I suppose. It's kind to visit people.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - unless there's something you need? I was right in the middle of something. Leave the sheets draped together as you leave.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (hermitAnger > 5 && hermitAnger < 9)
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - You're back. Hope you left your light sources outside. What do you want?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - Fine. Just here to distract me, I suppose. Not like you'd be one to consider if you're interrupting something.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - can we cut this short? I was right in the middle of something. BE SURE the sheets are draped together as you leave.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (hermitAnger == 9)
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - What?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - Nothing? Just sticking your nose into places, I suppose. Not like you'd ever consider if you're not welcome.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The hermit clears his throat. \"Yes, well - can you just get out? I was right in the middle of something. Don't dare have the sheets not draped together as you leave.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "A7": //Saul Meepman
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[12, 0] = "[x]";
                        discoveredMap[12, 1] = "-";
                        Console.WriteLine("There are several tall [mounds] of dirt and mud piled all over this room. Every so often your peripheral vision catches a [glint] of light coming from inside the mounds.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        if (searchedMeepMounds == true) { Console.WriteLine("Talk to"); }
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go east")
                        {
                            mapSaul = true;
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "A7";
                            ego.Location = "B7";
                            discoveredMap[12, 0] = "[J]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at mounds")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Did you expect to learn something useful? Well, you did. There are small openings in every mound which are all located at right around the height of a human's eyes.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search mounds")
                        {
                            action = "complete";
                            searchedMeepMounds = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The mounds are sturdy. You could probably crumble one with some effort, if you chose to.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("As you're continuing to assess the mound of dirt, an arm suddenly reaches around from behind it and smacks your hand.");
                            Console.WriteLine();
                            Console.WriteLine("\"Watch it, buddy! This office was harder to set up than you'd think.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to mounds" && searchedMeepMounds == true && talkedToMeepMounds == false)
                        {
                            action = "complete";
                            talkedToMeepMounds = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"Hiya, Pleased to meetcha.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("A man steps out from behind a mound. He is (unsurprisingly) covered in dirt; but he also (surprisingly) is wearing a flashy suit. He smiles and extends his hand.");
                            Console.WriteLine();
                            Console.WriteLine("\"You seem like the kind of guy who it'd be wise to be friendly to. I can feel something special aboutcha. You are something special, eh? Don't be modest!\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"Well yes, anyway. It's great to make your acquaintance; Jimmy's the name. You new? It's always good to meet the new ones; get to 'em before they meet all the wrong people.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"You and I? We're gonna be great friends -- I can just tell. It's all good, man! Come back and visit ANY time!\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to mounds" && searchedMeepMounds == true && talkedToMeepMounds == true)
                        {
                            action = "complete";
                            if (undroppables.Contains(dungeonKey))
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"You did it, huh? I knew we could count on you!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, listen, if we're really getting ourselves out of here, I have a lot of prep work to do in order to be ready. You understand, I'm sure. I'll see you on the outside, all right, bud?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Thanks again!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (converseCount == 7 && readLogbook == true && tookSaulCash == false)
                            {
                                undroppables.Add(safe);
                                tookSaulCash = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man steps out from behind one of his hiding places.");
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, buddy! Welcome back! What can I do for you?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Uh-huh I see... and you think that'll work?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I totally see what you're getting at and - buddy, believe me - I 100% support it.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"But I just don't know what I can really do to help you out!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I can tell by your expression that you're not completely jiving with my version of events. That's fine and I respect that. You see, the thing is I do have something, but it's ALL my something, you know what I mean?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"You really know how to tug on the heart strings. Listen, my friend, I really want to help -- truly I do! But do you think you could get this done by just leaving out my teensy little contribution?.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"All right all right! You really are stubborn sometimes, you know?\"");
                                Console.WriteLine();
                                Console.WriteLine("From inside one of his mounds, he retrieves a small safe.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"The only problem - and I SWEAR this is true - I don't remember the combination. I do have it written down, but that paper is... inside the safe.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"My friend, if you are half as persuasive as you were with me then I'm sure you can make it work.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                if (tookHermitCash == false)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"And be sure to check with my brother -- I KNOW he's got something hidden there.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            else if (peteQuestCompleted == true && saulQuestGiven == false)
                            {
                                saulQuestGiven = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man steps out from behind one of his hiding places.");
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, buddy! Welcome back! What can I do for you?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Stevia? The skinny kid from town told you to ask me? Hah!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Listen, buddy, I'd love to help you out -- really I would! But I just simply can't help you.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Now, now! Don't give me that look. No matter what you do it won't change the fact that I no longer have it!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"But I'll tell you, my friend, that I do know where it is!\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Some time ago I used to go shopping for my brother and stock him up for a while. He's a bit of a hermit and doesn't like to go out.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Now -- here's the little caveat. He is less-than-happy with me right now, and we haven't spoken in a while.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"I'd love to help you out, but... I don't know how thrilled he'll be even to hear I sent you there.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"He's a nice enough guy and all, but he is not likely to part with his stuff... especially since he has no source to restock You might have to drop my name and try your luck.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"He lives east and a bit south of here. Just tell him 'little Jimmy' sent you!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (saulHermitBond == 1)
                            {
                                saulHermitBond++;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man steps out from behind one of his hiding places.");
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, buddy! Welcome back! What can I do for you?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Oh. He said what?\"");
                                Console.WriteLine();
                                Console.WriteLine("He looks down at his feet and blushes.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"You know that man is so opinionated. I was just trying to live my separate life while taking care of his, too!\"");
                                Console.WriteLine();
                                Console.WriteLine("\"I guess I grew tired of listening to him complain about me all the time. I probably started acting in some way he found 'unacceptable.'\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (saulHermitBond == 3)
                            {
                                saulHermitBond++;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man steps out from behind one of his hiding places.");
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, buddy! Welcome back! What can I do for you?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Lazy? I'm doing him a favor and I'm lazy?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"All he ever did was bark and give me orders!\"");
                                Console.WriteLine();
                                Console.WriteLine("\"So I didn't come back in a 'reasonable amount of time.' So what! He's lucky I came back at all - ever!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (saulHermitBond == 5)
                            {
                                saulHermitBond++;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man steps out from behind one of his hiding places.");
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, buddy! Welcome back! What can I do for you?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"MY IDEA AFTER ALL?\"");
                                Console.WriteLine();
                                Console.WriteLine("The man places a hand on his chest and looks down for a moment, then looks back up at you. \"Excuse me. 'My idea, after all,' he says?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Sure, it was my idea: 'hey, why don't I do these life-necessities for you and get nothing in return?'\"");
                                Console.WriteLine();
                                Console.WriteLine("\"There is much to do to keep him stocked up to survive down here. If only he wouldn't nag me all the time!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (saulHermitBond == 7)
                            {
                                saulHermitBond++;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man steps out from behind one of his hiding places.");
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, buddy! Welcome back! What can I do for you?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Garlic and avocado sandwiches?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"We had that the first day we got thrown in here - there's no way to get fresh produce down here!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Man, those were some good sandwiches though. You should have seen how high we stacked those sandwiches...\"");
                                Console.WriteLine();
                                Console.WriteLine("\"You remind me of how much I miss my brother. Maybe I'll go visit him and put an end to this feud.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Don't worry, my friend! I'll be sure to toss in your good name for that stevia, too.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (saulHermitBond == 8)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man does not seem to be here.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man steps out from behind one of his hiding places.");
                                Console.WriteLine();
                                Console.WriteLine("\"Hey, buddy! Welcome back! What can I do for you?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"You know, you don't talk much -- and that's great. Always good to have a \'strong and silent type\' pal that you can count on. But don't be shy! if you EVER need something -- I'm your man!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "look at glint")
                        {
                            action = "complete";
                            lookedMeepEyes = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Honing your chi, you concentrate hard on catching one of these glints of light.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("They are eyes.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search glint")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            if (lookedMeepEyes == true) { Console.WriteLine("Scooby-Doo wouldn't, and either should you."); }
                            if (lookedMeepEyes == false) { Console.WriteLine("First you must find it, grasshopper."); }
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to glint" && searchedMeepMounds == true)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("No, you don\'t.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "J4": //Outside Mike
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[6, 18] = "[x]";
                        Console.WriteLine("A fairly well constructed [house] stands in the corner of this room. There is a [statue] of a man standing in front of the entrance.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        if (searchedMikeHouse == true) { Console.WriteLine("Talk to"); }
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go west")
                        {
                            mapMike = true;
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "J4";
                            ego.Location = "I4";
                            discoveredMap[6, 18] = "[M]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at house")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The extent of its quality is beyond \"relative\" for this place. This house would rival any simple house built in the normal world.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search house" && searchedMikeHouse == false)
                        {
                            action = "complete";
                            searchedMikeHouse = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("As you approach the house, the statue comes to life.");
                            Console.WriteLine();
                            Console.Write("Actually I guess it's just a man disguised as a statue. It sure LOOKED real...");
                            if (searchedTree == true) { Console.WriteLine(" and, well, we've been fooled before."); }
                            if (searchedTree == false) { Console.WriteLine(); }
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"Hey? Who are you?\" the statue asks.");
                            Thread.Sleep(1500);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Well, who are you?");
                            Console.WriteLine();
                            Console.Write("> ");
                            string gargoyleName = Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"All right, " + gargoyleName + ", and who is it you're looking for here?\"");
                            Thread.Sleep(2500);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Well? Are you here for a reason or just sight-seeing?");
                            Console.WriteLine();
                            Console.Write("> ");
                            string gargoylePurpose = Console.ReadLine();
                            gargoylePurpose = gargoylePurpose.ToLower();
                            gargoylePurpose = gargoylePurpose.Trim();
                            if (gargoylePurpose == "mike")
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"OK - great,\" the statue-man takes out a notepad and studies it as he continues, \"and what is the cartel's password?\"");
                                Thread.Sleep(3000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Well? Are you in with the in-crowd?");
                                Console.WriteLine();
                                Console.Write("> ");
                                string gargoylePassword = Console.ReadLine();
                                gargoylePassword.ToLower();
                                gargoylePassword = gargoylePassword.Trim();
                                if (gargoylePassword == "los pollos hermanos")
                                {
                                    fuckedUpWithMike = true;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Hrm. The boss doesn't want to get mixed up with you guys. He won\'t see you. Sorry.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (gargoylePassword == "blue")
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Right. Off you go.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    ego.Location = "Mike";
                                }
                                else if (gargoylePassword == "yellow")
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Hrm. I take you for more of a \'blue\' man.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (gargoylePassword == "assur")
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"I, uh, will take your word for it. Wait -- what question did I ask? Eh, whatever. Mike will see you.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    ego.Location = "Mike";
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Good - you're not in the cartel! The boss can't be bothered with them. He will see you now.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    ego.Location = "Mike";
                                }
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hrm. No. The boss only bothers to see people with a purpose. Sorry.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "talk to statue" && searchedMikeHouse == true)
                        {
                            action = "complete";
                            if (undroppables.Contains(dungeonKey))
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hey? Uh, actually, the boss told me not to let you in.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"I wouldn't take it personally? The boss is just overly obsessed with minimalism and efficiency, and I guess he just knows there's no constructive reason for him to see you again.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hey? Uh... who are you again?\"");
                                Thread.Sleep(1500);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Well, who are you?");
                                Console.WriteLine();
                                Console.Write("> ");
                                string gargoyleName = Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"All right, " + gargoyleName + ", and who is it you were looking for again?\"");
                                Thread.Sleep(2000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Well? Are you here for a reason or just sight-seeing?");
                                Console.WriteLine();
                                Console.Write("> ");
                                string gargoylePurpose = Console.ReadLine();
                                gargoylePurpose = gargoylePurpose.ToLower();
                                gargoylePurpose = gargoylePurpose.Trim();
                                if (gargoylePurpose == "mike")
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"OK - great,\" the statue-man takes out a notepad and studies it as he continues, \"and what is the cartel's password?\"");
                                    Thread.Sleep(3000);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Well? Are you in with the in-crowd?");
                                    Console.WriteLine();
                                    Console.Write("> ");
                                    string gargoylePassword = Console.ReadLine();
                                    gargoylePassword.ToLower();
                                    gargoylePassword = gargoylePassword.Trim();
                                    if (gargoylePassword == "los pollos hermanos")
                                    {
                                        fuckedUpWithMike = true;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Hrm. The boss doesn't want to get mixed up with you guys. He won\'t see you. Sorry.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else if (gargoylePassword == "blue")
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Right. Off you go.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        ego.Location = "Mike";
                                    }
                                    else if (gargoylePassword == "yellow")
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Hrm. I take you for more of a \'blue\' man.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else if (gargoylePassword == "assur")
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"I, uh, will take your word for it. Wait -- what question did I ask? Eh, whatever. Mike will see you.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        ego.Location = "Mike";
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Good -- you're not in the cartel! The boss can't be bothered with them. He will see you now.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        ego.Location = "Mike";
                                    }
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Hrm. No. The boss only bothers to see people with a purpose. Sorry.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }

                        if (action == "talk to statue" && searchedMikeHouse == true && fuckedUpWithMike == true)
                        {
                            action = "complete";
                            if (undroppables.Contains(dungeonKey))
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hey? Uh, actually, the boss told me not to let you in.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"I wouldn't take it personally? The boss is just overly obsessed with minimalism and efficiency, and I guess he just knows there's no constructive reason for him to see you again.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hey. Uh?... wait. You're one of those cartel guys, aren't you?\"");
                                Thread.Sleep(2000);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Well, aren't you?");
                                Console.WriteLine();
                                Console.Write("> ");
                                string gargoyleConfession = Console.ReadLine();
                                gargoyleConfession = gargoyleConfession.ToLower();
                                gargoyleConfession = gargoyleConfession.Trim();
                                if (gargoyleConfession == "no")
                                {
                                    fuckedUpWithMike = false;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Oh. Hey? Then... who are you again?\"");
                                    Thread.Sleep(1500);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Well, who are you?");
                                    Console.WriteLine();
                                    Console.Write("> ");
                                    string gargoyleName = Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"All right, " + gargoyleName + ", and who is it you were looking for again?\"");
                                    Thread.Sleep(2000);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Well? Are you here for a reason or just sight-seeing?");
                                    Console.WriteLine();
                                    Console.Write("> ");
                                    string gargoylePurpose = Console.ReadLine();
                                    gargoylePurpose = gargoylePurpose.ToLower();
                                    gargoylePurpose = gargoylePurpose.Trim();
                                    if (gargoylePurpose == "mike")
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"OK - great,\" the statue-man takes out a notepad and studies it as he continues, \"and what is the cartel's password?\"");
                                        Thread.Sleep(3000);
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Well? Are you in with the in-crowd?");
                                        Console.WriteLine();
                                        Console.Write("> ");
                                        string gargoylePassword = Console.ReadLine();
                                        gargoylePassword.ToLower();
                                        gargoylePassword = gargoylePassword.Trim();
                                        if (gargoylePassword == "los pollos hermanos")
                                        {
                                            fuckedUpWithMike = true;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Hrm. The boss doesn't want to get mixed up with you guys. He won\'t see you. Sorry.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else if (gargoylePassword == "blue")
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Right. Off you go.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            ego.Location = "Mike";
                                        }
                                        else if (gargoylePassword == "yellow")
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Hrm. I take you for more of a \'blue\' man.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else if (gargoylePassword == "assur")
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"I, uh, will take your word for it. Wait -- what question did I ask? Eh, whatever. Mike will see you.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            ego.Location = "Mike";
                                        }
                                        else
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Good -- you're not in the cartel! The boss can't be bothered with them. He will see you now.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            ego.Location = "Mike";
                                        }
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Hrm. No. The boss only bothers to see people with a purpose. Sorry.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                                else if (gargoyleConfession == "yes")
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Hrm. The boss doesn't want to get mixed up with you guys. He won\'t see you. Sorry.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"I'm not really sure what you're trying to say? But I'm pretty sure you're that cartel guy. The boss doesn't want to get mixed up with you guys. He won\'t see you. Sorry.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }

                        if (action == "look at statue")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("It's an average (maybe less than average) middle-aged man. He's bald with a bit of a clueless look on his face. The statue stands as if to intercept visitors -- and in that case is a very odd choice of scare-statue.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search statue")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            if (searchedTree == true) { Console.WriteLine("The statue is warm, and slightly more malleable to the touch than it should be... wait. Forget getting a leg-up on the situation -- just stop and back away slowly. You can't afford two potential sexual harrassment cases. It's not worth it."); }
                            if (searchedTree == false) { Console.WriteLine("The statue's clothes are real. In the pockets you find a pair of glasses and an empty notepad -- nothing really of much value to you."); }
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to house")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Nothing happens.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "Mike": //Mike
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        Console.WriteLine("[Mike] is at his desk, and finishes writing something as you approach. He looks up at you with a blank expression.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Talk to");
                        Console.WriteLine("Leave");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "leave")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "Mike";
                            ego.Location = "J4";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Whew.");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at mike")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("This must be the most intense man to ever exist. He's hard; he's tough; he's silent. There's nothing sinister about him, but neither does he inspire any sort of fuzzy feelings.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search mike")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Are you kidding? He'd probably snap your fingers off and drain your blood out of them. Better meek out on this one.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to mike")
                        {
                            action = "complete";
                            if (converseCount == 7 && readLogbook == true && tookMikeCash == false)
                            {
                                undroppables.Add(giantBlueCrystal);
                                tookMikeCash = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Mike raises an eyebrow at you. \"Yeah?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hmph. You really think this will work, huh?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He rises to his feet. \"All right. You can take this big thing back and use it. But this better work.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (gusQuestGiven == false)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Mike raises an eyebrow at you. \"Yeah?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He sighs. \"I thought I told that oaf not to let people waste my time. Get out.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (gusQuestGiven == true && mikeQuestGiven == false)
                            {
                                mikeQuestGiven = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Mike raises an eyebrow at you. \"Yeah?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Mike rises to his feet and glares at you. \"I thought I told that oaf not to let you cartel in here.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Listen. I'll make you a deal.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Your boss's money mule owes me a lot of money. Since it's gotten so dangerous to travel the halls, I can't send my associate to collect. Nor can I go myself, as I'm sure my house will be gone for the same reason. You, however, seem capable.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Lydia resides in the old refrigerated section of the dungeon to the south of here. Find out what's happened and retrieve my money, and I will promise not to challenge the cartel in a power play.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"And that's the best I will offer you. Take it or leave it.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (mikeQuestGiven == true && undroppables.Contains(giantBlueCrystal))
                            {
                                mikeQuestCompleted = true;
                                newConverseAvailable = true;
                                undroppables.Remove(giantBlueCrystal);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Hmph.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Suppose I can smash it.\"");
                                Console.WriteLine();
                                Console.WriteLine("Mike sighs. \"All right. You got nothing to worry about from me in your little drama. Tell them I'm cowed or whatever you gotta do.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (mikeQuestGiven == true && mikeQuestCompleted == false)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Until you return with my money we have nothing to discuss.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (knightSuitAvailable == true)
                            {
                                mikeLoop = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Mike raises an eyebrow at you. \"Yeah?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He rises to his feet. \"I've got something I've been saving for 'the end' that you could use. But you better get us out of here.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                while (mikeLoop == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"I've only got the one so I can't replace it. Do you want it now?\"");
                                    Console.WriteLine();
                                    Console.WriteLine("Yes");
                                    Console.WriteLine("No");
                                    Console.WriteLine();
                                    Console.Write(">");

                                    action = Console.ReadLine();
                                    action = action.ToLower();
                                    action = action.Trim();

                                    if (action == "yes")
                                    {
                                        mikeLoop = false;
                                        knightSuitAvailable = false;
                                        equippableArmor.Add(chainmail);
                                        equippableShield.Add(realShield);
                                        equippableWeapon.Add(realSword);
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You receive a sword, shield, and suit of chain mail.");
                                        Console.WriteLine();
                                        Console.WriteLine("\"Try not to lose it, yeah?\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else if (action == "no")
                                    {
                                        mikeLoop = false;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Probably a smart move.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("That didn't do anything useful.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                            }
                            else if (mikeQuestCompleted == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Mike raises an eyebrow at you. \"Yeah?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He sighs. \"Maybe I could help you with something later. Until then: leave.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        break;

                    case "E7": //Graveyard
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[12, 8] = "[x]";
                        discoveredMap[13, 8] = " | ";
                        discoveredMap[11, 8] = " | ";
                        discoveredMap[12, 7] = "-";
                        Console.WriteLine("Woof! Did something die in here?");
                        Console.WriteLine();
                        Console.WriteLine("Actually yes. This room is a big [mass grave]."); 
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E7";
                            ego.Location = "E6";
                            discoveredMap[12, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E7";
                            ego.Location = "E8";
                            discoveredMap[12, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E7";
                            ego.Location = "D7";
                            discoveredMap[12, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at mass grave")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Creeping to the edge, you look down into the big hole. There are dozens of bodies of varying degrees of decay.");
                            Console.WriteLine();
                            Console.WriteLine("Being down there - alive or dead - would be highly unfortunate.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search mass grave")
                        {
                            action = "complete";
                            if (searchedGraveyard == false)
                            {
                                searchedGraveyard = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Hoping to find a forgotten treasure, you hop down into the pit. After a few minutes of searching through old pockets and packs, you come up empty.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Wait! You've definitely found something in this pocket. Not being able to get a good grip on it, you throw some bodies aside in order to get your prize more exposed.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You now see that \"pocket\" was actually a rotting patch of flesh, and that \"prize\" must've been some internal organ.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You... ah... uhh... wha?...");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.Clear();
                                Thread.Sleep(2000);
                                Console.WriteLine("You awaken face down in, fortunately, something inorganic. You don't know how long you've been out, but you do know one thing -- you won't be digging around in anymore mass graves any time soon.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Nooooope!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }


                        break;

                    case "H2": //Outside Salamanca
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[2, 14] = "[x]";
                        discoveredMap[1, 14] = " | ";
                        discoveredMap[2, 13] = "-";
                        if (salamancaGuardDefeated == false)
                        {
                            Console.WriteLine("You've come upon a fortified and guarded area. So guarded, in fact, that a big scary [man] is coming at you right now.");
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the north and west.");
                            Console.WriteLine();
                            Console.WriteLine("What will you do?");
                            Console.WriteLine("-------------------");
                            Console.WriteLine("Inventory");
                            Console.WriteLine("Map");
                            Console.WriteLine("Stats");
                            Console.WriteLine("Look at");
                            Console.WriteLine("Search");
                            Console.WriteLine("Fight");
                            Console.WriteLine("Flee west");
                            Console.WriteLine();
                            Console.WriteLine();

                            Console.Write("Your action: ");
                            action = Console.ReadLine();
                            action = action.ToLower();
                            action = action.Trim();

                            if (action == "flee west")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.Location = "G2";
                                ego.FleeLocation = "H2";
                                discoveredMap[2, 14] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Run awaaay!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at man")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He looks big, angry, and dangerous.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search man")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You must EARN the right to do that!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "fight")
                            {
                                action = "complete";
                                BadGuyStats badGuy = new BadGuyStats("Salamanca Guard", 50, 50, 2, 0.85, 8, 4, 3.00, die.Next(20, 36), 1, lightHealingPotion, huntingKnife, leatherArmor, "The Salamanca Guard charges at you with a knife!");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You ready yourself for battle.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                                //if (ego.Location == "H2") { salamancaGuardDefeated = true; } //maybe redundant
                            }
                        }
                        else if (salamancaGuardDefeated == true)
                        {
                            Console.WriteLine("You've come upon a fortified - yet unguarded - area. So unguarded, in fact, that a big scary [man] is just lying dead on the ground and no one seems to have noticed.");
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the north and west.");
                            Console.WriteLine();
                            Console.WriteLine("What will you do?");
                            Console.WriteLine("-------------------");
                            Console.WriteLine("Inventory");
                            Console.WriteLine("Map");
                            Console.WriteLine("Stats");
                            Console.WriteLine("Look at");
                            Console.WriteLine("Search");
                            Console.WriteLine("Go north");
                            Console.WriteLine("Go west");
                            Console.WriteLine();
                            Console.WriteLine();

                            Console.Write("Your action: ");
                            action = Console.ReadLine();
                            action = action.ToLower();

                            if (action == "go north")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "H2";
                                ego.Location = "H1";
                                discoveredMap[2, 14] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "go west")
                            {
                                action = "complete";
                                randomEncountersOn = true;
                                ego.FleeLocation = "H2";
                                ego.Location = "G2";
                                discoveredMap[2, 14] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at man")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He looks big, dead, and innocuous.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search man")
                            {
                                action = "complete";
                                if (salamancaGuardSearched == false)
                                {
                                    salamancaGuardSearched = true;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("You earned the right to search him, and gosh darn it you'll go through his pockets as many times as you see fit!");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    ego.BlueCrystals = ego.BlueCrystals + 50;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Oh.");
                                    Console.WriteLine();
                                    Console.WriteLine("There was actually a hidden stash in the soles of his boots. 50 crystals - nice!");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (salamancaGuardSearched == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("YOU FOUND ANOTHER HIDDEN STASH OF oh wait no you didn't.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }
                        

                        break;

                    case "H1": //Salamanca
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[0, 14] = "[x]";
                        discoveredMap[1, 14] = " | ";
                        if (salamancaBagLooted == false) { Console.WriteLine("The wall to the east has been partially demolished to enlarge the room. A [table] that looks like a scientist's laboratory stands to your right, and a large [bag] sits by the far wall."); }
                        else if (salamancaBagLooted == true) { Console.WriteLine("The wall to the east has been partially demolished to enlarge the room. A [table] that looks like a scientist's laboratory stands to your right."); }
                        Console.WriteLine();
                        if (salamancaChoice == null)
                        {
                            Console.WriteLine("An old, decrepit man sitting in the back yells, \"Who is that! Kill him!\"");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Two far less decrepit men are advancing on you. If you're going to do anything, you'd best do it fast.");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine();
                        }
                        if (salamancaChoice != null && salamancaDead == false)
                        {
                            Console.WriteLine("An old [man] is saying things at you that don't understand. Based on his tone and body language, you're guessing it's not flattering.");
                            Console.WriteLine();
                            Console.WriteLine("There is an exit to the south.");
                        }
                        if (salamancaDead == true) { Console.WriteLine("There is an exit to the south."); }
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        if (salamancaChoice != null && salamancaDead == false) { Console.WriteLine("Kill old man"); }
                        if (salamancaChoice == null)
                        {
                            Console.WriteLine("Fight");
                            Console.WriteLine("Flee south");
                        }
                        else { Console.WriteLine("Go south"); }
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (salamancaChoice == null)
                        {
                            if (action == "flee south")
                            {
                                mapSalamanca = true;
                                action = "complete";
                                randomEncountersOn = true;
                                ego.Location = "H2";
                                ego.FleeLocation = "H1";
                                discoveredMap[0, 14] = "[S]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Run awaaay!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at table")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("If you didn't know any better (and you don't), you'd say they are doing something illegal here.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search table")
                            {
                                action = "complete";
                                salamancaLoop = true;
                                while (salamancaLoop == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Within reach is a beaker with a clear liquid being heated over a flame, and a container of red powder.");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("What will you do?");
                                    Console.WriteLine();
                                    Console.WriteLine("Throw the [liquid]");
                                    Console.WriteLine("Throw the [powder]");
                                    Console.WriteLine("[Combine] them and throw them");
                                    Console.WriteLine("Do [nothing]");
                                    Console.WriteLine();
                                    salamancaAction = Console.ReadLine();
                                    salamancaAction = salamancaAction.ToLower();
                                    salamancaAction = salamancaAction.Trim();

                                    if (salamancaAction == "liquid")
                                    {
                                        salamancaLoop = false;
                                        salamancaChoice = "liquid";
                                        BadGuyStats badGuy = new BadGuyStats("Salamanca Cousin", 100, 100, 2, 0.85, 8, 4, 3.00, die.Next(40, 61), 1, healingPotion, huntingKnife, leatherArmor, "The Salamanca Cousin charges at you with a knife!");
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You grab the beaker and hurl it at one of the men. It bursts and covers his face and body, and he falls to the ground screaming.");
                                        Console.WriteLine();
                                        Console.WriteLine("The other is still coming. You ready yourself for battle.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue"); //need to give loot for other one
                                        Console.ReadLine();
                                        PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                        PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                                        if (ego.Location == "H1") { salamancaCousinDefeated = true; } //maybe redundant
                                        else { salamancaAction = null; }
                                    }
                                    else if (salamancaAction == "powder")
                                    {
                                        salamancaLoop = false;
                                        salamancaChoice = "powder";
                                        BadGuyStats badGuy = new BadGuyStats("Salamanca Cousin", 70, 100, 2, 0.85, 8, 4, 3.00, die.Next(20, 31), 1, healingPotion, huntingKnife, leatherArmor, "The Salamanca Cousin charges at you with a knife!");
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You take the powder and throw it at the men. It disperses in the air over them.");
                                        Console.WriteLine();
                                        Console.WriteLine("One doubles over and begins to choke. The other is coughing, but still coming. You ready yourself for battle.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                        PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                                        if (ego.Location == "H1") { salamancaCousinDefeated = true; } //maybe redundant
                                        if (ego.Location == "H1")
                                        {
                                            badGuy.CurrentHitPoints = 70;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("The other man has collected himself, and resumes his charge. You ready yourself for battle.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                            PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                                        }
                                        if (ego.Location != "H1") { salamancaAction = null; }
                                    }
                                    else if (salamancaAction == "combine")
                                    {
                                        salamancaLoop = false;
                                        ego.CurrentHitPoints = ego.CurrentHitPoints - 30;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You take the powder and toss it into the beaker. A violent reaction occurs, and you quickly throw it at the men.");
                                        Console.WriteLine();
                                        if (ego.CurrentHitPoints <= 0)
                                        {
                                            Console.WriteLine("Everyone - including you - begins to choke. One of the men doubles over, but the other is still coming. Unfortunately, this is the last thing you see before passing out from the poison.");
                                        }
                                        else
                                        {
                                            Console.WriteLine("Everyone - including you - begins to choke. One of the men doubles over, but the other is still coming. You ready yourself for battle.");
                                        }
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        if (ego.CurrentHitPoints <= 0)
                                        {
                                            EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                            //break; crashing?
                                        }
                                        else
                                        {
                                            salamancaChoice = "combine";
                                            BadGuyStats badGuy = new BadGuyStats("Salamanca Cousin", 50, 100, 2, 0.85, 8, 4, 3.00, die.Next(20, 31), 1, healingPotion, huntingKnife, leatherArmor, "The Salamanca Cousin charges at you with a knife!");
                                            PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                            PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                                            if (ego.Location == "H1") { salamancaCousinDefeated = true; } //maybe redundant
                                            if (ego.Location == "H1")
                                            {
                                                badGuy.CurrentHitPoints = 50;
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("The other man has collected himself, and resumes his charge. You ready yourself for battle.");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                                PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                                            }
                                            if (ego.Location != "H1") { salamancaAction = null; }
                                        }
                                    }
                                    else if (salamancaAction == "nothing")
                                    {
                                        salamancaLoop = false;
                                        salamancaAction = null;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Well you better do something!");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("That didn't do anything useful.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }

                            }

                            if (action == "look at bag")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("It actually is a sack with a giant dollar sign on it. Technically it's misleading as it's not actual dollars... maybe it works.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search bag")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("That's the idea, dummy. Get to it!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "fight")
                            {
                                action = "complete";
                                salamancaChoice = "fight";
                                Console.WriteLine();
                                Console.WriteLine();
                                if (ego.EquippedWeapon.Name == "Unarmed") { Console.WriteLine("You clench your fists and raise them to ready yourself for battle."); }
                                else { Console.WriteLine($"You clench your {ego.EquippedWeapon.Name} and ready yourself for battle."); }
                                Console.WriteLine();
                                Console.WriteLine("One of the men stops and puts his arm out in front of the other. They nod in acknowledgment, and the second man stands at attention with his hands folded at his waist. The other charges.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                BadGuyStats badGuy = new BadGuyStats("Salamanca Cousin", 100, 100, 2, 0.85, 8, 4, 3.00, die.Next(20, 31), 1, healingPotion, huntingKnife, leatherArmor, "The Salamanca Cousin charges at you with a knife!");
                                PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                                if (ego.Location == "H1") { salamancaCousinDefeated = true; } //maybe redundant
                                if (ego.Location == "H1")
                                {
                                    badGuy.CurrentHitPoints = 100;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Seeing the first fall, the other man charges.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                    PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                                }
                                if (ego.Location != "H1") { salamancaAction = null; }
                            }

                            if (salamancaChoice != null)
                            {
                                salamancaLoop = true;
                                while (salamancaLoop == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("The old man is hurling insults in another language. It doesn't seem like he's otherwise much of a threat.");
                                    Console.WriteLine();
                                    Console.WriteLine("What will you do with him?");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("[Leave] him");
                                    Console.WriteLine("[Kill] him");
                                    Console.WriteLine();
                                    salamancaAction = Console.ReadLine();
                                    salamancaAction = salamancaAction.ToLower();
                                    salamancaAction = salamancaAction.Trim();

                                    if (salamancaAction == "leave")
                                    {
                                        salamancaLoop = false;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Mercy is the better part of valor? Something like that. Or maybe you just can't stomach killing an old man in cold blood?");
                                        Console.WriteLine();
                                        Console.WriteLine("Either way, you decide it best just to maneuver around his reach.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else if (salamancaAction == "kill")
                                    {
                                        salamancaLoop = false;
                                        salamancaDead = true;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("No loose ends is probably the safest route. You're in this for your own survival, and not the well-being of any evil old man who crosses your path.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("That didn't do anything useful.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                            }
                        }

                        if (salamancaChoice != null && salamancaDead == false)
                        {
                            if (action == "go south")
                            {
                                mapSalamanca = true;
                                action = "complete";
                                randomEncountersOn = true;
                                ego.Location = "H2";
                                ego.FleeLocation = "H1";
                                discoveredMap[0, 14] = "[S]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at table")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("If you didn't know any better (and you don't), you'd say they were doing something illegal here.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search table")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Oof. You wouldn't even know where to start. You never really paid attention in chemistry class.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "look at bag" && salamancaBagLooted == false)
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("It actually is a sack with a giant dollar sign on it. Technically it's misleading as it's not actual dollars... maybe it works.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search bag" && salamancaBagLooted == false)
                            {
                                action = "complete";
                                salamancaLoop = true;
                                salamancaBagLooted = true;
                                undroppables.Add(sackOfCash);
                                while (salamancaLoop == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("That's the most blue you've ever seen in one place.");
                                    Thread.Sleep(2000);
                                    Console.WriteLine();
                                    Console.WriteLine("...Wanna take some?");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Yes");
                                    Console.WriteLine("No");
                                    Console.WriteLine();
                                    Console.Write(">");
                                    salamancaAction = Console.ReadLine();
                                    salamancaAction = salamancaAction.ToLower();
                                    salamancaAction = salamancaAction.Trim();

                                    if (salamancaAction == "yes")
                                    {
                                        while (salamancaLoop == true)
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("You devil! How much?");
                                            Console.WriteLine();
                                            Console.Write("> ");
                                            salamancaAction = Console.ReadLine();
                                            salamancaAction = salamancaAction.ToLower();

                                            if (Int32.TryParse(salamancaAction, out int stolenCrystals))
                                            {
                                                if (stolenCrystals > 0)
                                                {
                                                    salamancaLoop = false;
                                                    salamancaStolenCrystals = stolenCrystals;
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    if (stolenCrystals <= 20) { Console.WriteLine("Dastardly."); }
                                                    else if (stolenCrystals <= 30) { Console.WriteLine("Ohhhh Sneeeaaakyyyyy!"); }
                                                    else if (stolenCrystals <= 40) { Console.WriteLine("Oh man. Getting those deep pockets."); }
                                                    else if (stolenCrystals <= 50) { Console.WriteLine("Bold strategy, Cotton - let's see if it pays off for 'em."); }
                                                    else if (stolenCrystals > 50) { Console.WriteLine("You must have as many balls as you do crystals right now."); }
                                                    ego.BlueCrystals = ego.BlueCrystals + salamancaStolenCrystals;
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                                else
                                                {
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("You can't take negative, imaginary, or pi crystals, ok? Get with the program.");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                            }
                                            else
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Come on! Gimmie a number. This is exciting isn't it?!");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                        }
                                        

                                    }
                                    else if (salamancaAction == "no")
                                    {
                                        salamancaLoop = false;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Boring. But smart I suppose.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("That didn't do anything useful.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                            }

                            if (action == "look at man")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He's old, he's mean, and he's probably soiling himself. Why'd you leave him alive again?");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search man")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Whenever you approach he swats at you with such intense fury that you back down.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "kill old man")
                            {
                                salamancaDead = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("No loose ends is probably the safest route. You're in this for your own survival, and not the well-being of any evil old man who crosses your path.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (salamancaDead == true)
                        {
                            if (action == "Go south")
                            {
                                mapSalamanca = true;
                                action = "complete";
                                randomEncountersOn = true;
                                ego.Location = "H2";
                                ego.FleeLocation = "H1";
                                discoveredMap[0, 14] = "[S]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }

                            if (action == "look at table")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("If you didn't know any better (and you don't), you'd say they were doing something illegal here.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search table")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Oof. You wouldn't even know where to start. You never really paid attention in chemistry class.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "look at bag" && salamancaBagLooted == false)
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("It actually is a sack with a giant dollar sign on it. Technically it's misleading as it's not actual dollars... maybe it works.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            if (action == "search bag" && salamancaBagLooted == false)
                            {
                                action = "complete";
                                salamancaLoop = true;
                                salamancaBagLooted = true;
                                undroppables.Add(sackOfCash);
                                while (salamancaLoop == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("That's the most blue you've ever seen in one place.");
                                    Thread.Sleep(2000);
                                    Console.WriteLine();
                                    Console.WriteLine("...Wanna take some?");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Yes");
                                    Console.WriteLine("No");
                                    Console.WriteLine();
                                    Console.Write(">");
                                    salamancaAction = Console.ReadLine();
                                    salamancaAction = salamancaAction.ToLower();
                                    salamancaAction = salamancaAction.Trim();

                                    if (salamancaAction == "yes")
                                    {
                                        while (salamancaLoop == true)
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("You devil! How much?");
                                            Console.WriteLine();
                                            Console.Write("> ");
                                            salamancaAction = Console.ReadLine();
                                            salamancaAction = salamancaAction.ToLower();

                                            if (Int32.TryParse(salamancaAction, out int stolenCrystals))
                                            {
                                                if (stolenCrystals > 0)
                                                {
                                                    salamancaLoop = false;
                                                    salamancaStolenCrystals = stolenCrystals;
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    if (stolenCrystals <= 20) { Console.WriteLine("Dastardly."); }
                                                    else if (stolenCrystals <= 30) { Console.WriteLine("Ohhhh Sneeeaaakyyyyy!"); }
                                                    else if (stolenCrystals <= 40) { Console.WriteLine("Oh man. Getting those deep pockets."); }
                                                    else if (stolenCrystals <= 50) { Console.WriteLine("Bold strategy, Cotton - let's see if it pays off for 'em."); }
                                                    else if (stolenCrystals > 50) { Console.WriteLine("You must have as many balls as you do crystals right now."); }
                                                    ego.BlueCrystals = ego.BlueCrystals + salamancaStolenCrystals;
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                                else
                                                {
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("You can't take negative, imaginary, or pi crystals, ok? Get with the program.");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                            }
                                            else
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("Come on! Gimmie a number. This is exciting isn't it?!");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                        }
                                    }
                                    else if (salamancaAction == "no")
                                    {
                                        salamancaLoop = false;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Boring. But smart I suppose.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("That didn't do anything useful.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                            }

                            if (action == "search man")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Nothin', man. Will have to settle for his gigantic bag of cash.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        break;

                    case "I6": //before lydia
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[10, 16] = "[x]";
                        discoveredMap[10, 17] = "-";
                        discoveredMap[10, 15] = "-";
                        discoveredMap[9, 16] = " | ";
                        Console.WriteLine("There is a distinct \"winter\" smell in the air, and a cold draft coming from the east.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "I6";
                            ego.Location = "I5";
                            discoveredMap[10, 16] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "I6";
                            ego.Location = "J6";
                            discoveredMap[10, 16] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "I6";
                            ego.Location = "H6";
                            discoveredMap[10, 16] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "J6": //lydia
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[10, 18] = "[x]";
                        discoveredMap[10, 17] = "-";
                        Console.WriteLine("Ice predominates this room. A [woman] dressed in heavy, exotic furs sits by a table gazing forlornly at a [tea cup].");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Talk to");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go west")
                        {
                            mapLydia = true;
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "J6";
                            ego.Location = "I6";
                            discoveredMap[10, 18] = "[L]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at woman")
                        {
                            action = "complete";
                            if (lydiaQuestCompleted == false)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The source of this woman's sadness seems somewhat artificial.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The source of this woman's happiness seems somewhat artificial.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "search woman")
                        {
                            action = "complete";
                            inappropriateTouchingCounter++;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("inappropriateTouchingCounter=" + inappropriateTouchingCounter + ";");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to woman")
                        {
                            action = "complete";
                            if (undroppables.Contains(dungeonKey))
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The woman looks up at you. \"Oh. Hello!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("She beams. \"Oh? Won the game, have you?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Look for me in the sequel, 'Jesse's Dungeon 2: The Search for El Camino.'\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (converseCount == 7 && readLogbook == true && tookLydiaCash == false)
                            {
                                undroppables.Add(minkCoat);
                                tookLydiaCash = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The woman looks up at you. \"Oh. Hello!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("She beams. \"I'm invigorated! Whatever it is I'm just happy to oblige!\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Oh. Well perhaps not that happy.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The woman turns her head quizzically and quints her eyes. \"Do you really think it'll work?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"All right. But all of my money is still dirty. All I really have that's valuable is... my coat.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Don't take too long in getting us out or I'll freeze!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (mikeQuestGiven == false)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The woman looks up at you. \"Oh. Hello?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("She sighs. \"I'm sorry. Whatever it is I'm just not in the mood.\"");
                                Console.WriteLine();
                                Console.WriteLine("The woman's eyes return to her cup.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (lydiaQuestGiven == false && mikeQuestGiven == true)
                            {
                                lydiaQuestGiven = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The woman looks up at you. \"Oh. Hello?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("She sighs. \"I'm sorry. Whatever it is I'm just not -- oh. You're from the cartel?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"I suppose I do have some backlogged work that I owe. it's just...\" she trails off and returns her eyes toward her cup.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("A glimmer of hope strikes her face for a moment as she looks back to you. \"I hate to make this a \'quid pro quo\' situation, but I can't help you unless you help first.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("She looks back down and runs her finger around the rim of her cup. \"I simply can't get started without my habitual jolt of caffeine. And I can't drink my tea as it is -- I've run out of stevia.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Can you understand the bind I'm in? I need energy to get energy - it's like I ran out of gas in the middle of a desert highway.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I always used to buy it off that skinny junkie to the west. I'm sure he still has some! Please! I'll get what you need as soon as I am able.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Oh, and just one more thing -- I take lots of stevia. A fistful's worth!\"");
                                Console.WriteLine();
                                Console.WriteLine("(It looks like it will take a lot of stevia to fill up those fists!)");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (lydiaQuestGiven == true && undroppables.Contains(stevia))
                            {
                                lydiaQuestCompleted = true;
                                newConverseAvailable = true;
                                undroppables.Remove(stevia);
                                undroppables.Add(giantBlueCrystal);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The woman looks up at you. \"You're back? Do you have it?!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Her eyes ignite with passion when you hand her the stevia. She pours some into her cup and takes a big sip.");
                                Console.WriteLine();
                                Console.WriteLine("\"Finally! It's the well of vitality!!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("She is completely absorbed in her drink and seems to have forgotten you're even here.");
                                Console.WriteLine();
                                Console.WriteLine("You patiently wait for her to finish.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Oh. Hello!\"");
                                Console.WriteLine();
                                Console.WriteLine("She beams. \"I'm invigorated! Whatever it is I'm just happy to oblige!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Yes of course! While you were gone I worked tirelessly to get things ready for you!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"It would have taken AGES to properly arrange the necessary clean crystals, so I got something just as good for you.\"");
                                Console.WriteLine();
                                Console.WriteLine("She hands you a giant blue crystal. \"It's worth the same amount -- I guarantee it. And it's clean!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"If there's some sort of problem I can start working on the original package - but it'll take a while!\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Dirty money takes so long to clean!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You're not too sure why Mike would care if his crystals had dirt on them, but you're just the new guy here.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (lydiaQuestGiven == true && lydiaQuestCompleted == false)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The woman looks up at you. \"You're back? Do you have it?!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("She sighs. \"Oh. Well please hurry. The headaches are setting in.\"");
                                Console.WriteLine();
                                Console.WriteLine("The woman leans back and rests the back of her hand on her forehead.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The woman looks up at you. \"Oh. Hello!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("She beams. \"I'm invigorated! Whatever it is I'm just happy to oblige!\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Only visiting? Well I'm happy you stopped by!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "look at tea cup")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The cup is plain, but sturdy. Looks like it came from a diner.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search tea cup")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The old \"hide precious treasure in the tea cup trick,\" eh? Well not this time. Your search reveals nothing.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to tea cup")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"All right ya got me, copper!\" The tea cup snarks. \"But what you gonna do \'bout it, see?\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You slam the tea cup up against the wall and remove all its weapons and toss them aside. It tries to spill scalding hot liquid on you, but you dodge quickly.");
                            Console.WriteLine();
                            Console.WriteLine("The tea cup continues to struggle, but eventually gives in. You've got 'em.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"Book \'em, Danno.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.Clear();
                            Console.WriteLine("None of this happened.");
                            Console.WriteLine();
                            Console.WriteLine("You waste my time with silly commands and I\'m going to waste it right back, ok?");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "F6": //not centaur
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[10, 10] = "[x]";
                        discoveredMap[10, 11] = "-";
                        discoveredMap[10, 9] = "-";
                        discoveredMap[9, 10] = " | ";
                        Console.WriteLine("A [man] sheepishly pushes a broom slowly across the floor. He's not doing a very good job as this room looks the same as every other room (at best).");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Talk to");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F6";
                            ego.Location = "F5";
                            discoveredMap[10, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F6";
                            ego.Location = "G6";
                            discoveredMap[10, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F6";
                            ego.Location = "E6";
                            discoveredMap[10, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The man has a vacant stare straight at the floor in front of him. His sweeping pattern is erratic and quite ineffective.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You sidle up toward the man. Sensing no reaction, you throw your hesitance to the wind and shove your hands into his pockets and swab around.");
                            Console.WriteLine();
                            if (lootedCentaur == false)
                            {
                                lootedCentaur = true;
                                Console.WriteLine("Hey a blue crystal. Not bad I suppose.");
                                Console.WriteLine();
                            }
                            else if (lootedCentaur == true)
                            {
                                Console.WriteLine("He didn't go restock his blue crystal. Shocker.");
                                Console.WriteLine();
                            }
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The man stops and looks up at you. He quickly shifts his gaze away from your eyes and slowly backs away.");
                            Console.WriteLine();
                            Console.WriteLine("\"Hello?\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Judging that you don't intend him harm, he takes a stance less reminiscent of a cowering animal.");
                            Console.WriteLine();
                            Console.WriteLine(" \"Oh, uh, you must be new. I guess...\" the man's sentence trails off. As if summoning his courage, he takes a deep breath and continues. \"I guess I\'ll tell you what happened to me so maybe it won\'t happen to you.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"I was sent to take down the fortress. They knew it was a doomed mission... probably just not how doomed.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"They say Jesse is the worst of the worst; even that he's the reason why we're all here. But he... I don't know. He wasn't what they had me expecting.\"");
                            Console.WriteLine();
                            Console.WriteLine("\"But Heis - ...Hei -\" the man stops and closes his eyes. \"His boss is the real terror.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("He looks down and continues sweeping.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "E11": //fortress front entrance
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[20, 8] = "[x]";
                        discoveredMap[20, 9] = "-";
                        if (gusQuestCompleted == true) { Console.WriteLine("So this is what a [fortress] with no guards looks like. A lot like it would with them, but your heart is beating way slower so you can appreciate it more."); }
                        else { Console.WriteLine("Well this place is dangerous. Several men appear from what looks like a [fortress] with guns pointed at you. Their body language reads \"go away.\""); }
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        if (gusQuestCompleted == true) { Console.WriteLine("Enter"); }
                        else { Console.WriteLine("Attack!!"); }
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go east")
                        {
                            mapFortress = true;
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E11";
                            ego.Location = "E10";
                            discoveredMap[20, 8] = "[F]";
                            Console.WriteLine();
                            Console.WriteLine();
                            if (gusQuestCompleted == true) { Console.WriteLine("Onward!"); }
                            else { Console.WriteLine("Good idea."); }
                            Thread.Sleep(1500);
                        }

                        if (action == "look at fortress")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The fortress is massive and well built. Unlike other structures in this dungeon, this was not built with scavenged supplies -- it was built into the structure itself.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search fortress")
                        {
                            action = "complete";
                            if (gusQuestCompleted == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Baby steps enter the fortress.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                searchedFortress = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Easy, sparky. Try typing \"win game\" and see if that works, too.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "win game" && searchedFortress)
                        {
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Dooooon't stop");
                            Thread.Sleep(1000);
                            Console.Write(" bel");
                            Thread.Sleep(300);
                            Console.Write("IEEEEEEV");
                            Thread.Sleep(750);
                            Console.Write("IN'!");
                            Thread.Sleep(1000);
                            Console.Write(" Hold on to that fee");
                            Thread.Sleep(1000);
                            Console.Write("EEE");
                            Thread.Sleep(300);
                            Console.Write("LIN'!");
                            Thread.Sleep(1500);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Yeah no");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "attack!!" && gusQuestCompleted == false)
                        {
                            action = "complete";
                            if (frontEntranceWarning == false)
                            {
                                frontEntranceWarning = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("OK -- couple things.");
                                Console.WriteLine();
                                Console.WriteLine("First, I made you type out both those exclamation points as a deterent. Further, if you look at your map, you'll notice that there is no other room connection than the way you came.");
                                Console.WriteLine();
                                Console.WriteLine("But hey listen it's your journey. If you want to do it then just send in that same command again.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                            else if (frontEntranceWarning == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("I've gotta admit -- you've got balls.");
                                Console.WriteLine();
                                Console.WriteLine("Had balls, rather, as one of the many bullets shot at (and through) you hit you in the genitals and severed your testicles from the rest of your body. You are quite dead.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.Clear();
                                discoveredMap[20, 8] = "[ ]";
                                EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                            }
                        }

                        if (action == "enter" && gusQuestCompleted == true)
                        {
                            action = "complete";
                            if (undroppables.Contains(dungeonKey))
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Haven't you had enough?");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                randomEncountersOn = true;
                                ego.FleeLocation = "E11";
                                ego.Location = "Fortress0";
                                discoveredMap[20, 8] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Here we go.");
                                Thread.Sleep(1500);
                            }
                        }


                        break;

                    case "C6": //fight club
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[10, 4] = "[x]";
                        discoveredMap[10, 3] = "-";
                        discoveredMap[10, 5] = "-";
                        discoveredMap[11, 4] = " | ";
                        discoveredMap[9, 4] = " | ";
                        mapFight = true;
                        Console.WriteLine("There's a large number of shirtless men encircling two others who are engaged in a hand-to-hand brawl. There is one [man] standing apart from the others.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Talk to");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C6";
                            ego.Location = "C5";
                            discoveredMap[10, 4] = "[F]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C6";
                            ego.Location = "C7";
                            discoveredMap[10, 4] = "[F]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C6";
                            ego.Location = "B6";
                            discoveredMap[10, 4] = "[F]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C6";
                            ego.Location = "D6";
                            discoveredMap[10, 4] = "[F]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The guy's ripped. He's gorgeous. If you were to experiment it'd be with this dude.");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Something about his demeanor gives the impression he's a bit mentally \"off,\" though.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("What would you search? He's barely wearing any clothes. I guess maybe he can have something between his chiseled abs.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Nope.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to man")
                        {
                            action = "complete";
                            if (joinedFightClub == false)
                            {
                                joinedFightClub = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The man looks you up and down, then smirks and greets you.");
                                Console.WriteLine();
                                Console.WriteLine("\"Welcome to Fight Club. Here we are all equal: no good guys; no bad guys; no NPCs. You want a fight? No need to play games -- just come to Fight Club.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Whenever you want in, just let me know and I'll set you up.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (joinedFightClub == true)
                            {
                                fightClubLoop = true;
                                while (fightClubLoop == true)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Need me to go over the rules? Or are you ready to fight?\"");
                                    Console.WriteLine("-------------------");
                                    Console.WriteLine("Rules");
                                    Console.WriteLine("Fight");
                                    Console.WriteLine("Nevermind!");
                                    Console.WriteLine();
                                    Console.WriteLine();

                                    Console.WriteLine("Ready?");
                                    Console.WriteLine();
                                    Console.Write("> ");
                                    fightClubAction = Console.ReadLine();
                                    fightClubAction = fightClubAction.ToLower();
                                    fightClubAction = fightClubAction.Trim();

                                    if (fightClubAction == "rules")
                                    {
                                        fightClubAction = "complete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You do not talk about Fight Club.");
                                        Console.WriteLine("You do not talk about Fight Club.");
                                        Console.WriteLine("Based on your standing, you will be given fights of varying difficulty.");
                                        Console.WriteLine("Your standing goes up when you win, and goes down when you lose.");
                                        Console.WriteLine("If someone taps out or goes limp: his fight is over.");
                                        Console.WriteLine("The victor wins his opponent\'s blue crystals; everything for a felled opponent, and half if he surrendered.");
                                        Console.WriteLine("If this is your first time at fight club -- you have to fight.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    if (fightClubAction == "fight")
                                    {
                                        fightClubAction = "complete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"What kind of battle you lookin\' for, kid?\"");
                                        Console.WriteLine();
                                        Console.WriteLine("The [toughest], baddest dude you can find!");
                                        Console.WriteLine("[Two] guys -- I can handle it.");
                                        Console.WriteLine("As [many] as possible! Gonna ninja turtle these suckers!");
                                        Console.WriteLine();
                                        Console.Write("> ");
                                        fightClubChoice = Console.ReadLine();
                                        fightClubChoice = fightClubChoice.ToLower();
                                        fightClubChoice = fightClubChoice.Trim();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        if (ego.FightClubRank >= 20)
                                        {
                                            Console.WriteLine("\"Hey sorry I actually wasn't listening, but you know what? You're pretty good. There's not many that could stand toe to toe with you anymore.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"I think it's time for you and me to fight.\"");
                                            fightClubMode = 1;
                                            FightClubBattleGenerator(fightClubMode, ego, potionBelt, equippableArmor, equippableWeapon, equippableShield, theCreeperInTheDarkDefeated, salamancaGuardDefeated, salamancaCousinDefeated, dudeOnAPogoStickDefeated, jesseDefeated, undroppables);
                                        }
                                        else if (fightClubChoice == "toughest" || fightClubChoice == "two" || fightClubChoice == "many")
                                        {
                                            fightClubLoop = false;
                                            foughtInFightClub = true;
                                            if (fightClubChoice == "toughest")
                                            {
                                                Console.WriteLine("\"Ah, a tete-a-tete? The best kind.\"");
                                                fightClubMode = 1;
                                            }
                                            if (fightClubChoice == "two")
                                            {
                                                Console.WriteLine("\"Menage a trois? Didn't take you for that kind of guy, but you got it.\"");
                                                fightClubMode = 2;
                                            }
                                            if (fightClubChoice == "many")
                                            {
                                                Console.WriteLine("\"Cowabunga, bro.\"");
                                                fightClubMode = 3;
                                            }
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                            FightClubBattleGenerator(fightClubMode, ego, potionBelt, equippableArmor, equippableWeapon, equippableShield, theCreeperInTheDarkDefeated, salamancaGuardDefeated, salamancaCousinDefeated, dudeOnAPogoStickDefeated, jesseDefeated, undroppables);
                                        }
                                        else
                                        {
                                            Console.WriteLine("\"Hmm. Maybe I'll look into arranging that option in the future. But as for now that\'s not gonna work.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                    if (fightClubAction == "nevermind!")
                                    {
                                        if (foughtInFightClub == false)
                                        {
                                            fightClubAction = "complete";
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"It's your first night -- you're fighting someone.\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        if (foughtInFightClub == true)
                                        {
                                            fightClubAction = "complete";
                                            fightClubLoop = false;
                                        }
                                    }
                                    if (fightClubAction != "complete")
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Hey, man. I'm gonna need you to focus. What you said didn't do anything useful.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                            }
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "D10": //flynn
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[18, 6] = "[x]";
                        discoveredMap[18, 7] = "-";
                        discoveredMap[17, 6] = " | ";
                        if (hidenGoseke == true || dudeOnAPogoStickDefeated == true) { Console.WriteLine("Well the [west wall] is still here."); }
                        else { Console.WriteLine("There's a [dude] near the [west wall] bouncing on a pogo stick. He bears down on the handles and locks eyes with you as he revs up his bouncing pace."); }
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        if (hidenGoseke == false && dudeOnAPogoStickDefeated == false)
                        {
                            Console.WriteLine("Talk to");
                            Console.WriteLine("Fight"); 
                        }
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D10";
                            ego.Location = "D9";
                            discoveredMap[18, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D10";
                            ego.Location = "E10";
                            discoveredMap[18, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at dude" && hidenGoseke == false && dudeOnAPogoStickDefeated == false)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The way this guy is looking at you is equal parts intimidating, creepy, and suggestive. Whatever his true intentions are, he is definitely proud of his pogo skills.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search dude" && hidenGoseke == false && dudeOnAPogoStickDefeated == false)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("His bouncing is simply far too FURIOUS for an effective search.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to dude")
                        {
                            action = "complete";
                            if (hidenGoseke == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Aww it's all right -- I miss him too. Maybe one day there will be a bunch of mini ones bouncing around.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (dudeOnAPogoStickDefeated == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He's dead, Jim.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He simply responds by making his smirk even bigger (and creepier).");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "look at west wall")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Certainly looks like a wall... hmm... WAIT! Did it just --! Hm no it didn't.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search west wall")
                        {
                            action = "complete";
                            if (undroppables.Contains(dungeonKey))
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Haven't you had enough?");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (undroppables.Contains(largeBrassKey) && (hidenGoseke == true || dudeOnAPogoStickDefeated == true))
                            {
                                undroppables.Remove(largeBrassKey);
                                secretTunnelOpened = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("After extensive searching, you find a well camouflaged slit where your key may fit.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Snick!\" It's open!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                randomEncountersOn = true;
                                ego.FleeLocation = "D10";
                                ego.Location = "Secret Tunnel";
                                discoveredMap[18, 6] = "[ ]";
                            }
                            else if (secretTunnelOpened == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("After a bit of searching, you find the camouflaged door.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("It's open!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                randomEncountersOn = true;
                                ego.FleeLocation = "D10";
                                ego.Location = "Secret Tunnel";
                                discoveredMap[18, 6] = "[ ]";
                            }
                            else if (hidenGoseke == true || dudeOnAPogoStickDefeated == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The wall is cold. Cold as stone.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("As you approach, the pogo dude begins to rev his handles and bounce furiously. Taking that as a warning, you back away.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "talk to west wall")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("HELLO! Hello! hello! helloooo...");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("There\'s actually no echo. I\'m just mocking you. Nothing happens.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "fight" && hidenGoseke == false && dudeOnAPogoStickDefeated == false)
                        {
                            action = "complete";
                            BadGuyStats badGuy = new BadGuyStats("Dude on a Pogo Stick", 150, 150, 3, 0.80, 8, 6, 3.00, die.Next(30, 51), 1, healingPotion, pogoStick, ringmail, "The Dude on a Pogo Stick bounces toward you furiously!");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You ready yourself for battle.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                            PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                            //if (ego.Location == "H2") { salamancaGuardDefeated = true; } //maybe redundant
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "hiden goseke")
                        {
                            action = "complete";
                            if (hidenGoseke == false && dudeOnAPogoStickDefeated == false)
                            {
                                hidenGoseke = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("For some weird reason, the dude on a pogo stick bounces past you and exits to the east.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Ok. You say Hiden Goseke.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }


                        break;

                    case "Secret Tunnel": //tunnel
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[18, 4] = " x ";
                        Console.WriteLine("Even in the darkness of the dungeon, this place is darker still. After your eyes adjust, you see you have entered a narrow tunnel seemingly dug through the earth outside the bounds of the labyrinth.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "Secret Tunnel";
                            ego.Location = "D10";
                            discoveredMap[18, 4] = "   ";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            talkLoop = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Before you can react, a burst of earth is upon you. Your eyes snap shut and you double over hacking on the dirtstorm.");
                            Console.WriteLine();
                            Console.WriteLine("When you finally manage to open your eyes, all you can make out are the nasty, big, pointy teeth of the creature standing before you.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The foul, cruel beast speaks.");
                            Console.WriteLine();
                            Console.WriteLine("I'm a bit lost... you certainly seem like a local - perhaps you can help.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            while (talkLoop == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Should I make a left turn?\"");
                                Console.WriteLine();
                                Console.WriteLine("Yes");
                                Console.WriteLine("No");
                                Console.WriteLine();
                                Console.Write(">");

                                action = Console.ReadLine();
                                action = action.ToLower();
                                action = action.Trim();

                                if (action == "yes")
                                {
                                    action = "complete";
                                    talkLoop = false;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Ehh-- thanks, doc! As history's proven this is going to work out just fine.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (action == "no")
                                {
                                    action = "complete";
                                    talkLoop = false;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Ehh-- thanks, doc! I always make a left here and it never works out. You're way smarter than you look!\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Ehh-- what?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The creature submerges back into the earth and takes off.");
                            Console.WriteLine();
                            Console.WriteLine("...What a loon.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            ego.FleeLocation = "Secret Tunnel";
                            ego.Location = "Jesse";
                            discoveredMap[18, 4] = "   ";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "Fortress0": //konami maze begin
                        if (konamiProgress == -1)
                        {
                            randomEncountersOn = false;
                            Console.WriteLine("Upon entering the room, you feel something shift beneath your feet; it's as if the room itself is moving -- or maybe the rooms around it. Whatever case it may be, something unexpected certainly lies ahead.");
                            Console.WriteLine();
                            Console.WriteLine("It looks like someone scratched a [note] on the wall.");
                        }
                        else { Console.WriteLine("Somehow, you've been returned to the initial room of the maze. You recognize the [note] on the wall."); }
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "map")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The map won't help you here! Bwa! haha! HAHAHA!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search note")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Swing and a miss. Try look at.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at note")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Someone scratched this into the stone with a rock. You can tell because there's a scratched rock at your feet. Smarty.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.Clear();
                            Console.WriteLine("The note reads:");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I can't believe he has such security measures in place. I've been lost here for so long that I've resorted to writing on the wall as if I'm some sort of deranged lunatic gone mad from prolonged isolation. No matter. I shall log my activities here in hopes that it will aid me in remembering the sequence through this maze.");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I at least remember what he said ABOUT it: \"It has been employed over a hundred times and used exponentially more.\"");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I can't just wander indefinitely, as this place has become filled with the violent newcomers who have flooded our halls of late. Even one as hardy as myself may eventually fall. Obviously if I cannot recall the sequence then a simple matter of trial and error is in order.");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("This is simple enough; each trip that I progress I will log the subsequent correct turns here (lest I forget!). Eventually I will have either recalled the entire sequence or simply made it through.");
                            Console.WriteLine();
                            Console.WriteLine("North");
                            Console.WriteLine("North");
                            Console.WriteLine("South");
                            Console.WriteLine("South");
                            Console.WriteLine("West");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "go north")
                        {
                            action = "complete";
                            konamiProgress = 1;
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            ego.Location = "Fortress1";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            konamiProgress = 0;
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            ego.Location = "E11";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Leaving already?");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            konamiProgress = 0;
                            randomEncountersOn = true;
                            ego.FleeLocation = "E11";
                            ego.Location = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            konamiProgress = 0;
                            randomEncountersOn = true;
                            ego.FleeLocation = "E11";
                            ego.Location = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "Fortress1": //konami maze main
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        if (konamiProgress == 5) { Console.WriteLine("There's a [body] in this room - a dead body. Otherwise everything's the same."); }
                        else { Console.WriteLine("Coming as neither a shock nor surprise, there is nothing in this room to tell it apart from the others."); }
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "map")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The map won't help you here! Bwa! haha! HAHAHA!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at body" && konamiProgress == 5)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("If this is our charming chap who wrote that exceptionally helpful note, isn't it fancy that he expired in the exact room that is at the end of the hint he left? I mean, he could have just as easily been killed in any other room on the way here or perhaps after, but he just so happened to die here as if to tell you \"hey this is why my note stopped.\" What are the odds!!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search body" && konamiProgress == 5)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Illustrative storytelling aside, he is of no use to you.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "go north")
                        {
                            action = "complete";
                            if (konamiProgress == 0 || konamiProgress == 1)
                            { 
                                konamiProgress++;
                                ego.Location = "Fortress1";
                            }
                            else
                            {
                                konamiProgress = 0;
                                ego.Location = "Fortress0";
                            }
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            if (konamiProgress == 2 || konamiProgress == 3)
                            {
                                konamiProgress++;
                                ego.Location = "Fortress1";
                            }
                            else
                            {
                                konamiProgress = 0;
                                ego.Location = "Fortress0";
                            }
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            if (konamiProgress == 5)
                            {
                                konamiProgress++;
                                ego.Location = "Fortress1";
                            }
                            else if (konamiProgress == 7)
                            {
                                konamiProgress++;
                                ego.Location = "Fortress2";
                            }
                            else
                            {
                                konamiProgress = 0;
                                ego.Location = "Fortress0";
                            }
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            if (konamiProgress == 4 || konamiProgress == 6)
                            {
                                konamiProgress++;
                                ego.Location = "Fortress1";
                            }
                            else
                            {
                                konamiProgress = 0;
                                ego.Location = "Fortress0";
                            }
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "Fortress2": //konami maze coda
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        Console.WriteLine("This room is filled with some kind of gas.");
                        Console.WriteLine();
                        Console.WriteLine("Do you Advance or go Back?.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Advance");
                        Console.WriteLine("Back");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "map")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The map won't help you here! Bwa! haha! HAHAHA!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "back")
                        {
                            action = "complete";
                            if (konamiProgress == 8)
                            {
                                konamiProgress++;
                                ego.Location = "Fortress2";
                            }
                            else
                            {
                                konamiProgress = 0;
                                ego.Location = "Fortress0";
                            }
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "advance")
                        {
                            action = "complete";
                            if (konamiProgress == 9)
                            {
                                konamiProgress++;
                                ego.Location = "Fortress3";
                            }
                            else
                            {
                                konamiProgress = 0;
                                ego.Location = "Fortress0";
                            }
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "Fortress3": //konami maze end
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        Console.WriteLine("This room looks exactly like the initial room of this maze -- even the southern door leads back out to the dungeon. The only difference is that the note on the wall is missing.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "map")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The map won't help you here! Bwa! haha! HAHAHA!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "go north")
                        {
                            action = "complete";
                            konamiProgress = 0;
                            ego.Location = "Fortress0";
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            konamiProgress = 10;
                            ego.Location = "Jesse";
                            ego.FleeLocation = "Fortress3";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The mechanical shifting has ended.");
                            Thread.Sleep(2500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            konamiProgress = 0;
                            ego.Location = "Fortress0";
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            konamiProgress = 0;
                            ego.Location = "Fortress0";
                            randomEncountersOn = true;
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;


                    case "Jesse": //Jesse
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        if (killedJesse)
                        {
                            Console.WriteLine("The corpse of a young man matching the descriptions of [Jesse] lies expressionless on the floor.");
                            Console.WriteLine();
                            Console.WriteLine("Heisenberg's door is locked and barred.");
                        }
                        else if (jesseDefeated)
                        {
                            Console.WriteLine("No one is here. Loud music is blasting from nearby speakers.");
                            Console.WriteLine();
                            Console.WriteLine("Heisenberg's door is locked and barred.");
                        }
                        else
                        {
                            Console.WriteLine("A young man who matches the descriptions of [Jesse] sits expressionless on a couch. Loud music is blasting from nearby speakers.");
                            Console.WriteLine();
                            Console.WriteLine("He locks eyes with you as you enter.");
                        }
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        if (jesseDefeated)
                        {
                            Console.WriteLine("Unbar the door");
                        }
                        else
                        {
                            Console.WriteLine("Talk to");
                            Console.WriteLine("Fight");
                        }
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "map")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You're up to your compass in plot! You can't use your map now.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at jesse")
                        {
                            action = "complete";
                            if (killedJesse)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The potency of his distant stare almost drowns out the determination that he's dead.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (jesseDefeated)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Peek-a-boo! I see you!");
                                Console.WriteLine();
                                Console.WriteLine("Wait no I don't.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The potency of his distant stare drowns out anything you may determine about him.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "search jesse")
                        {
                            action = "complete";
                            if (killedJesse)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("As you're about to go frisk the corpse lying at the end of the foreboding fortress, you realize you've already done that. You decide not to follow through.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (jesseDefeated)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("As you're about to go frisk the man who's no longer at the end of the foreboding fortress, you realize it's gonna be more difficult than that. He's not here.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("As you're about to go frisk the man sitting at the end of the foreboding fortress, you realize it's gotta be more involved than that. You decide not to follow through.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "talk to jesse" && !jesseDefeated)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("As you go to address him, he shuts off his music and speaks.");
                            Console.WriteLine();
                            if (konamiProgress == 10) { Console.WriteLine("\"You know, I paid a lot for that whole big contraption. Now some random dude just comes wandering through?\""); }
                            else { Console.WriteLine("\"You know, I paid that pogo punk a lot to keep people away from that tunnel. Now some random dude just comes wandering through?\""); }
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            if (disappearChoice == "jesse")
                            {
                                Console.Clear();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The Runaway Five Theme suddenly begins to play.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("As if from nowhere, the disappearing-service man appears from behind the couch and throws a bag over Jesse's head.");
                                Console.WriteLine();
                                Console.WriteLine("\"I'll take care of him from here. You take care of the beast behind the door.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (undroppables.Contains(jeweledRing))
                            {
                                undroppables.Remove(jeweledRing);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("His gaze shifts down and settles upon the jeweled ring you're holding. His eyes widen and he rises to his feet.");
                                Console.WriteLine();
                                Console.WriteLine("\"That ring... where did you get that ring?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He darts at you and grabs the ring. His eyes, burning with rage, now stare intensely into yours.");
                                Console.WriteLine();
                                Console.WriteLine("\"WHERE DID YOU GET THIS?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                BadGuyStats badGuy = new BadGuyStats("Jesse", 150, 150, 4, 0.85, 8, 3, 3.00, 500, 3, healingPotion, axe, ringmail, "Jesse brandishes an axe menacingly!");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He lunges behind the couch and stands back up with an axe. He growls as he advances on you.");
                                Console.WriteLine();
                                Console.WriteLine("Hostile intent is evident. You ready yourself for battle.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                if (ego.JanesProtectionActive == true)
                                {
                                    ego.JanesProtectionActive = false;
                                    ego.ArmorClass--;
                                }
                                if (ego.JustFled == true)
                                {

                                }
                                if (ego.CurrentHitPoints <= 0)
                                {
                                    EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                }
                                else if (badGuy.CurrentHitPoints <= 0)
                                {
                                    jesseDefeated = true;
                                    talkLoop = true;
                                    while (talkLoop == true)
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Jesse lays gasping for air at your feet. He's definitely down for the count, but will survive.");
                                        Console.WriteLine();
                                        Console.WriteLine("Any attempt to go near him is met with resistance. What will you do?");
                                        Console.WriteLine();
                                        Console.WriteLine("[Kill] him");
                                        Console.WriteLine("[Leave] him");
                                        Console.WriteLine();
                                        Console.Write("> ");

                                        action = Console.ReadLine();
                                        action = action.ToLower();
                                        action = action.Trim();

                                        if (action == "leave")
                                        {
                                            action = "complete";
                                            talkLoop = false;
                                            sparedJesse = true;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("Mercy being the necessary part of honor, you leave the cause of your woes to fight another day.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else if (action == "kill")
                                        {
                                            action = "complete";
                                            talkLoop = false;
                                            killedJesse = true;
                                            gun.Unlocked = true;
                                            axe.Unlocked = true;
                                            Console.WriteLine("Searching the grotesque carcass, you find 500 blue crystals, which you take.");
                                            ego.BlueCrystals = ego.BlueCrystals + 500;
                                            Console.WriteLine();
                                            Thread.Sleep(3000);
                                            Console.WriteLine("And the enemy left some presents!");
                                            Console.WriteLine();
                                            Console.WriteLine("The Fireman's Axe and the gun look useful. You take them.");
                                            equippableWeapon.Add(axe);
                                            equippableWeapon.Add(gun);
                                            Thread.Sleep(3000);
                                            Console.WriteLine();
                                            Console.WriteLine("Press ENTER to continue");
                                            Console.ReadLine();
                                            Console.Clear();
                                        }
                                        else
                                        {
                                            action = "complete";
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("There is no escaping this choice.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                }
                            }
                            else if (konamiProgress != 10)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He rises to his feet and squints at you suspiciously.");
                                Console.WriteLine();
                                Console.WriteLine("\"How did you know about my escape tunnel?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Jane? She would not... she would... not...\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"All I wanted was to break his obsession with these crystals! It all seemed so simple at the start. But I guess it always does.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Now even she would betray me.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I've lost sight of it all. It needs to end.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Just make him stop loving them more than himself -- no matter how you balance that equation.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Do that and I'll make this all be over.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (freePotions == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He rises to his feet and squints at you suspiciously.");
                                Console.WriteLine();
                                Console.WriteLine("\"Who are you, anyway?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"...The cartel has conspired against me? With allies? Even... with Jane?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"All I wanted was to break his obsession with these crystals! It all seemed so simple at the start. But I guess it always does.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Now even she would betray me.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I've lost sight of it all. It needs to end.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Just make him stop loving them more than himself -- no matter how you balance that equation.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Do that and I'll make this all be over.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He rises to his feet and squints at you suspiciously.");
                                Console.WriteLine();
                                Console.WriteLine("\"Who are you, anyway?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"...The cartel has conspired against me? With allies? EVERYONE has united to kill me?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"All I wanted was to break his obsession with these crystals! It all seemed so simple at the start. But I guess it always does.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"It's turned into such a travesty.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"I've lost sight of it all. It needs to end.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Just make him stop loving them more than himself -- no matter how you balance that equation.\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Do that and I'll make this all be over.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            if (ego.CurrentHitPoints >= 0)
                            {
                                action = "complete";
                                jesseDefeated = true;
                                ego.Location = "Heisenberg";
                                ego.FleeLocation = "Fortress0";
                                Console.Clear();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The door at the far end of the room is locked and barred from your side. You open it and go in.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "fight" && !jesseDefeated)
                        {
                            if (disappearChoice == "jesse")
                            {
                                Console.Clear();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The Runaway Five Theme suddenly begins to play.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("As if from nowhere, the disappearing-service man appears from behind the couch and throws a bag over Jesse's head.");
                                Console.WriteLine();
                                Console.WriteLine("\"I'll take care of him from here. You take care of the beast behind the door.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                jesseDefeated = true;
                            }
                            else
                            {
                                BadGuyStats badGuy = new BadGuyStats("Jesse", 150, 150, 4, 0.85, 8, 3, 3.00, 500, 3, healingPotion, axe, ringmail, "Jesse brandishes an axe menacingly!");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Jesse reaches behind the couch and stands back up with an axe. He growls as he advances on you.");
                                Console.WriteLine();
                                Console.WriteLine("Hostile intent is evident. You ready yourself for battle.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                if (ego.JanesProtectionActive == true)
                                {
                                    ego.JanesProtectionActive = false;
                                    ego.ArmorClass--;
                                }
                                if (ego.JustFled == true)
                                {

                                }
                                if (ego.CurrentHitPoints <= 0)
                                {
                                    EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                }
                                else if (badGuy.CurrentHitPoints <= 0)
                                {
                                    jesseDefeated = true;
                                    talkLoop = true;
                                    while (talkLoop == true)
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Jesse lays gasping for air at your feet. He's definitely down for the count, but will survive.");
                                        Console.WriteLine();
                                        Console.WriteLine("Any attempt to go near him is met with resistance. What will you do?");
                                        Console.WriteLine();
                                        Console.WriteLine("[Kill] him");
                                        Console.WriteLine("[Leave] him");
                                        Console.WriteLine();
                                        Console.Write("> ");

                                        action = Console.ReadLine();
                                        action = action.ToLower();
                                        action = action.Trim();

                                        if (action == "leave")
                                        {
                                            action = "complete";
                                            talkLoop = false;
                                            sparedJesse = true;
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("Mercy being the necessary part of honor, you leave the cause of your woes to fight another day.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                        else if (action == "kill")
                                        {
                                            action = "complete";
                                            talkLoop = false;
                                            killedJesse = true;
                                            gun.Unlocked = true;
                                            axe.Unlocked = true;
                                            Console.WriteLine("Searching the grotesque carcass, you find 500 blue crystals, which you take.");
                                            ego.BlueCrystals = ego.BlueCrystals + 500;
                                            Console.WriteLine();
                                            Thread.Sleep(3000);
                                            Console.WriteLine("And the enemy left some presents!");
                                            Console.WriteLine();
                                            Console.WriteLine("The Fireman's Axe and the gun look useful. You take them.");
                                            equippableWeapon.Add(axe);
                                            equippableWeapon.Add(gun);
                                            Thread.Sleep(3000);
                                            Console.WriteLine();
                                            Console.WriteLine("Press ENTER to continue");
                                            Console.ReadLine();
                                            Console.Clear();
                                        }
                                        else
                                        {
                                            action = "complete";
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("There is no escaping this choice.");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                }
                            }
                            if (ego.CurrentHitPoints >= 0)
                            {
                                action = "complete";
                                ego.Location = "Heisenberg";
                                ego.FleeLocation = "Fortress0";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The door at the far end of the room is locked and barred from your side. You open it and go in.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "unbar the door" && jesseDefeated)
                        {
                            action = "complete";
                            ego.Location = "Heisenberg";
                            ego.FleeLocation = "Fortress0";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The door at the far end of the room is locked and barred from your side. You open it and go in.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("go "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You're in the show now, mustache.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;


                    case "Heisenberg": //Heisenberg
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        Console.WriteLine("You've entered a fully stocked and polished laboratory. Who you can only assume is [Heisenberg] toils over a work surface wearing a hazmat suit.");
                        Console.WriteLine();
                        Console.WriteLine("\"Shipment time already, Jesse?\"");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Talk to");
                        Console.WriteLine("Fight");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "map")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You're up to your compass in the plot! You can't use your map now.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at heisenberg")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("He hasn't even turned around to address you. He is completely absorbed in his work.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search heisenberg")
                        {
                            action = "complete";
                            if (searchedHeisenberg == false)
                            {
                                searchedHeisenberg = true;
                                equippableWeapon.Add(gun);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("This guy has GOT to have interesting stuff on him. I mean, he's kind of what all of this has centered around. You just HAVE to stick your fingers in those pockets...");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Apparently too absorbed in his work to notice, you lift a gun out of his pocket and add it to your belongings.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                if (stolenHeisenPotions < 3)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("You seem to like tempting fate. Worked out before so you'll probably just get a neutral result at worst, right?");
                                    Console.WriteLine();
                                    Console.WriteLine("SURPRISE you actually find a greater healing potion.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    if (potionBelt.Count < 3)
                                    {
                                        stolenHeisenPotions++;
                                        potionBelt.Add(greaterHealingPotion);
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You add it to your collection.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("But you have too many already. You leave it there.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("OK. You're really pushing it now, don't you think?");
                                    Console.WriteLine();
                                    Console.WriteLine("His pockets are empty, and just consider yourself lucky that he still doesn't notice your grubby little hands all up in his personal space.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }

                        if (action == "talk to heisenberg")
                        {
                            BadGuyStats badGuy = new BadGuyStats("Heisenberg", 200, 200, 3, 0.75, 8, 4, 2.00, 5000, 2 - stolenHeisenPotions, greaterHealingPotion, knife, hazmatSuit, "Heisenberg folds his hands in front of himself and says, \"I am the one who knocks.\"");                            
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"Hm? You're not Jesse.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Heisenberg turns around and assumes a skeptical expression.");
                            Console.WriteLine();
                            Console.WriteLine("\"Who are you?\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            if (disappearChoice == "heisenberg")
                            {
                                Console.Clear();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The Runaway Five Theme suddenly begins to play.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("As if from nowhere, the disappearing-service man appears from behind a lab table and throws a bag over Heisenberg's head.");
                                Console.WriteLine();
                                Console.WriteLine("\"I'll take care of him. You get us out of here.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (killedJesse == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He looks around you and through the opened door.");
                                Console.WriteLine();
                                Console.WriteLine("\"You... what have you...?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("His eyes fix back onto you and they squint menacingly.");
                                Console.WriteLine();
                                Console.WriteLine("\"Have you ever lost a son?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Regardless, I will now make sure you are spared that pain.\"");
                                Console.WriteLine();
                                Console.WriteLine("Hostile intent is evident. You prepare for battle.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                HeisenBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Freeing me?\"");
                                Console.WriteLine();
                                Console.WriteLine("\"Can you truly 'free' a man who has no will to leave?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He looks around you and through the opened door.");
                                Console.WriteLine();
                                Console.WriteLine("\"Has Jesse fled, then?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"So I see Jesse has finally pulled the trigger. And that makes you the bullet?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"But I am not so easy a target.\"");
                                Console.WriteLine();
                                Console.WriteLine("Hostile intent is evident. You prepare for battle.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                HeisenBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                            }
                            if (ego.CurrentHitPoints > 0)
                            {
                                action = "complete";
                                ego.Location = "E11";
                                ego.FleeLocation = "E11";
                                if (sparedJesse == true || killedJesse == true || disappearChoice == "jesse")
                                {
                                    Console.Clear();
                                    undroppables.Add(dungeonKey);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("With all peril quelled, you take your time searching the lab.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("In addition to many fascinating chemist's trinkets, you find a key which does not seem to operate any lock in the immediate vicinity. You take it hoping it is what you have sought.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (disappearChoice == "heisenberg" && sparedJesse == false && killedJesse == false)
                                {
                                    Console.Clear();
                                    undroppables.Add(dungeonKey);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("A voice whispers from behind you.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yo. Is it over?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Jesse is peeking his head in from the other room.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"That was... not how I expected this to go. I am very grateful that you found a way to save him.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("He walks over to a drawer and retrieves a key.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"This will unlock the cage door. Take it and let's get out of here.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.Clear();
                                    undroppables.Add(dungeonKey);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("A voice whispers from behind you.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yo. Is it over?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Jesse is peeking his head in from the other room.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"I knew it would end like this; there was no other way. Thanks for doing what I couldn't face.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("He walks over to a drawer and retrieves a key.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"This will unlock the cage door. Take it and let's get out of here.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }

                        if (action == "fight")
                        {
                            BadGuyStats badGuy = new BadGuyStats("Heisenberg", 200, 200, 3, 0.75, 8, 4, 2.00, 5000, 2 - stolenHeisenPotions, greaterHealingPotion, knife, hazmatSuit, "Heisenberg folds his hands in front of himself and says, \"I am the one who knocks.\"");
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"Hm? You're not Jesse.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Heisenberg turns around and assumes a skeptical expression.");
                            Console.WriteLine();
                            Console.WriteLine("\"Who are you?\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            if (disappearChoice == "heisenberg")
                            {
                                Console.Clear();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("The Runaway Five Theme suddenly begins to play.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("As if from nowhere, the disappearing-service man appears from behind a lab table and throws a bag over Heisenberg's head.");
                                Console.WriteLine();
                                Console.WriteLine("\"I'll take care of him. You get us out of here.\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (killedJesse == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("He looks around you and through the opened door.");
                                Console.WriteLine();
                                Console.WriteLine("\"You... what have you...?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("His eyes fix back onto you and they squint menacingly.");
                                Console.WriteLine();
                                Console.WriteLine("\"Have you ever lost a son?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Regardless, I will now make sure you are spared that pain.\"");
                                Console.WriteLine();
                                Console.WriteLine("Hostile intent is evident. You prepare for battle.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                HeisenBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"So I see Jesse has finally pulled the trigger. And that makes you the bullet?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"But I am not so easy a target.\"");
                                Console.WriteLine();
                                Console.WriteLine("Hostile intent is evident. You prepare for battle.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                HeisenBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                            }
                            if (ego.CurrentHitPoints > 0)
                            {
                                action = "complete";
                                ego.Location = "E11";
                                ego.FleeLocation = "E11";
                                if (sparedJesse == true || killedJesse == true || disappearChoice == "jesse")
                                {
                                    Console.Clear();
                                    undroppables.Add(dungeonKey);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("With all peril quelled, you take your time searching the lab.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("In addition to many fascinating chemist's trinkets, you find a key which does not seem to operate any lock in the immediate vicinity. You take it hoping it is what you have sought.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (disappearChoice == "heisenberg" && sparedJesse == false && killedJesse == false)
                                {
                                    Console.Clear();
                                    undroppables.Add(dungeonKey);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("A voice whispers from behind you.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yo. Is it over?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Jesse is peeking his head in from the other room.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"That was... not how I expected this to go. I am very grateful that you found a way to save him.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("He walks over to a drawer and retrieves a key.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"This will unlock the cage door. Take it and let's get out of here.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else
                                {
                                    Console.Clear();
                                    undroppables.Add(dungeonKey);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("A voice whispers from behind you.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yo. Is it over?\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Jesse is peeking his head in from the other room.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"I knew it would end like this; there was no other way. Thanks for doing what I couldn't face.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("He walks over to a drawer and retrieves a key.");
                                    Console.WriteLine();
                                    Console.WriteLine("\"This will unlock the cage door. Take it and let's get out of here.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }

                        if (action.StartsWith("go "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You're in the show now, mustache.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "G10": //lake
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[18, 12] = "[x]";
                        discoveredMap[17, 12] = " | ";
                        Console.WriteLine("There's a large [puddle] accumulated in the southeast of this room. It looks less than appetizing.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G10";
                            ego.Location = "G9";
                            discoveredMap[18, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at puddle")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The liquid is murky, and made up of various... ingredients. The puddle must be from a gradual dripping of the entire dungeon. Whoever built this place needed a level.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search puddle")
                        {
                            action = "complete";
                            if (puddleSearched == false)
                            {
                                puddleSearched = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You're lucky no one in this dungeon cares about being filthy. You begin running your hand through the puddle in hopes of finding something within.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Well you found something -- and that something BIT YOU!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You retract your hand, and a nasty looking little amphibian comes with it. It gets flung against the wall, lands on the ground, and scampers away.");
                                Console.WriteLine();
                                Console.WriteLine("You've taken 1 point of damage.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                ego.CurrentHitPoints--;
                                if (ego.CurrentHitPoints <= 0)
                                {
                                    EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Can't stop now. You're pot-committed.");
                                    Console.WriteLine();
                                    Console.WriteLine("Aha! Your toiling has paid off with a Mildew-encrusted Pocket Knife!");
                                    equippableWeapon.Add(mildewEncrustedPocketKnife);
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            else if (puddleSearched == true && equippableWeapon.Contains(mildewEncrustedPocketKnife))
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("What? You think you\'re going to find more in there?");
                                Console.WriteLine();
                                Console.WriteLine("Hah all right. Go for it.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Well you found something -- and that something BIT YOU!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You retract your hand, and a nasty looking little amphibian comes with it. It gets flung against the wall, lands on the ground, and scampers away.");
                                Console.WriteLine();
                                Console.WriteLine("You've taken 1 point of damage.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                ego.CurrentHitPoints--;
                                if (ego.CurrentHitPoints <= 0)
                                {
                                    EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("You continue to search, but you\'re not quite so lucky this time and come up empty.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            else if (puddleSearched == true && !equippableWeapon.Contains(mildewEncrustedPocketKnife))
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("What? You think you\'re going to find more in there?");
                                Console.WriteLine();
                                Console.WriteLine("Hah all right. Go for it.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Oh. Well I'll be over here eating crow.");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Aha! Your toiling has paid off with a Mildew-encrusted Pocket Knife!");
                                equippableWeapon.Add(mildewEncrustedPocketKnife);
                                Console.WriteLine();
                                Console.WriteLine("Guess it was a box set.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }


                        break;

                    case "F8": //bowling
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[14, 10] = "[x]";
                        discoveredMap[15, 10] = " | ";
                        discoveredMap[14, 11] = "-";
                        discoveredMap[14, 9] = "-";
                        mapBowl = true;
                        if (visitedBowlingAlley == false) { Console.WriteLine("There's a... [bowling alley]? You can tell from the [man] ushering you toward him and urging you to try his bowling alley."); }
                        else if (visitedBowlingAlley == true) { Console.WriteLine("This is the [bowling alley]. The [man] once again beckons you as if you're his long lost best friend."); }
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Talk to");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F8";
                            ego.Location = "F9";
                            discoveredMap[14, 10] = "[B]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F8";
                            ego.Location = "G8";
                            discoveredMap[14, 10] = "[B]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F8";
                            ego.Location = "E8";
                            discoveredMap[14, 10] = "[B]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("This is the look and demeanor of a man trying to sell you something.");
                            Console.WriteLine();
                            Console.WriteLine("But hey -- who knows if you'll ever see another bowling alley ever again? Or the sun for that matter.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search man")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("As you put your hands on the man and feel him up and down, he spreads his arms and legs, lifts his chin, and closes his eyes. He is overly willing to submit to your search.");
                            Console.WriteLine();
                            Console.WriteLine("When you finish, he smiles at you and nods.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Oh and you did find his money pouch, but I'm assuming you're a gentleman and let him hold onto it -- it's the least you can do for someone so helpful.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to man")
                        {
                            action = "complete";
                            bowlingLoop = true;
                            if (visitedBowlingAlley == false)
                            {
                                visitedBowlingAlley = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Welcome! Welcome to the best (and only) recreational destination of \'Jesse\'s Dungeon!\' For just a few crystals you can bowl away your worries for a few frames, or you can challenge our resident champions for a cash prize!\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (visitedBowlingAlley == true)
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("\"Welcome back to the premiere recreation destination! How can I help you today?\"");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            while (bowlingLoop == true)
                            {
                                Console.Clear();
                                Console.WriteLine("What would you like to do?");
                                Console.WriteLine();
                                Console.WriteLine("-------------------");
                                Console.WriteLine("[Bowl] some frames myself. (3 blue crystals)");
                                Console.WriteLine("[Compete] for cash!");
                                Console.WriteLine("[Nevermind], sir. Perhaps another time.");
                                Console.WriteLine();
                                Console.WriteLine();

                                Console.WriteLine("What kind of fun are we having today?");
                                Console.WriteLine();
                                Console.Write("> ");
                                bowlingAction = Console.ReadLine();
                                bowlingAction = bowlingAction.ToLower();
                                bowlingAction = bowlingAction.Trim();

                                if (bowlingAction == "bowl")
                                {
                                    bowlingAction = "complete";
                                    if (ego.BlueCrystals >= 3)
                                    {
                                        bowlingLoop = false;
                                        ego.BlueCrystals = ego.BlueCrystals - 3;
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("With the man cheering you on like a 16 year old girl would her studly 19 year old boyfriend, you bowl a few frames.");
                                        Console.WriteLine();
                                        if (bowlingSkill < 6) { Console.WriteLine("You did okay. The holes were kind of too small for your hand, and it doesn't roll perfectly."); }
                                        else if (bowlingSkill < 11) { Console.WriteLine("You did all right. The pins work but they could be balanced better."); }
                                        else if (bowlingSkill < 16) { Console.WriteLine("Not too shabby. You knocked out a strike that time."); }
                                        else if (bowlingSkill == 20) { Console.WriteLine("Hey hey a turkey! Not bad considering you only have 3 frames."); }
                                        Console.WriteLine();
                                        if (bowlingSkill < 20) { bowlingSkill++; }
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        if (bowlingSkill == 20) { Console.WriteLine("\"Oh, my friend, You are a master! I can't recall a grander sight!\""); }
                                        else { Console.WriteLine("\"Oh, my friend, I could see your prowess peak with every toss! You are practically an expert!\""); }
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                    }
                                    if (ego.BlueCrystals < 3)
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Oh, my friend - you are a crystal or so short. SO CLOSE! One day, soon, you shall achieve the recreation sensation of your life!\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                                else if (bowlingAction == "compete")
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Ah yes! A brawl of titans! How much will represent your might in this epic duel?\"");
                                    Console.WriteLine();
                                    Console.WriteLine();

                                    Console.WriteLine("He means, \"how much will you wager?\"");
                                    Console.WriteLine();
                                    Console.Write("> ");
                                    bowlingAction = Console.ReadLine();

                                    if (Int32.TryParse(bowlingAction, out int bowlingBet))
                                    {
                                        if (bowlingBet <= ego.BlueCrystals)
                                        {
                                            if (bowlingBet > lastBowlingBet)
                                            {
                                                bowlingLoop = false;
                                                ego.BlueCrystals = ego.BlueCrystals - bowlingBet;
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"Your challenge has been called! We've got a game! Best of luck, my friend!\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                                egoBowlingScore = bowlingSkill + die.Next(1, 21);
                                                enemyBowlingScore = bowlingBet + die.Next(1, 21);
                                                if (egoBowlingScore > enemyBowlingScore)
                                                {
                                                    lastBowlingBet = bowlingBet;
                                                    bowlingPrizePackage = (bowlingBet * 2) - 2;
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("\"A giant amongst men! Here is your prize! With some taken out for upkeep and labor, of course.\"");
                                                    Console.WriteLine();
                                                    ego.BlueCrystals = ego.BlueCrystals + bowlingPrizePackage;
                                                    if (bowlingPrizePackage == 0) { Console.WriteLine("You receive zero. Would have been nice if he mentioned that surcharge up front. Sleazy salesmen..."); }
                                                    else { Console.WriteLine("You receive " + bowlingPrizePackage + " blue crystals."); }
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                                else if (egoBowlingScore < enemyBowlingScore)
                                                {
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("\"It would seem you have been bested, my friend. Not to worry! Just practice - practice - PRACTICE!\"");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                                else if (egoBowlingScore == enemyBowlingScore)
                                                {
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("\"You... you tied? Humph. This wasn't in the manual.\"");
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine();
                                                    Console.WriteLine("\"Well, the two of you just take your wagers back, and challenge each other again. I'll even waive my service fee this time!\"");
                                                    Console.WriteLine();
                                                    ego.BlueCrystals = ego.BlueCrystals + bowlingBet;
                                                    Console.WriteLine();
                                                    Console.Write("Press ENTER to continue");
                                                    Console.ReadLine();
                                                }
                                            }
                                            else
                                            {
                                                Console.WriteLine();
                                                Console.WriteLine();
                                                Console.WriteLine("\"My SIR! It seems no one will take your wager. Anyone who would consider bowling for such a prize package is afraid of you!\"");
                                                Console.WriteLine();
                                                Console.Write("Press ENTER to continue");
                                                Console.ReadLine();
                                            }
                                        }
                                        else
                                        {
                                            Console.WriteLine();
                                            Console.WriteLine();
                                            Console.WriteLine("\"Oh, my friend - you are a crystal or so short. SO CLOSE! One day, soon, you shall achieve the recreation sensation of your life!\"");
                                            Console.WriteLine();
                                            Console.Write("Press ENTER to continue");
                                            Console.ReadLine();
                                        }
                                    }
                                    else
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("\"Yes! Yes! And one day we'll accept that! But for today just blue crystals.\"");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }



                                }
                                else if (bowlingAction == "nevermind")
                                {
                                    bowlingLoop = false;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yes! That's it! Go out there and get some blue crystals to spend here at the ultimate recreation activity!\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else 
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("\"Yes! Yes! And one day we'll have that! But for today just these three options.\"");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }

                        }

                        if (action == "look at bowling alley")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Little arrows etched into the floor, ten wooden pins on one end, and a well-polished stone with three holes on the other. It's got all the ingredients for sure.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search bowling alley")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"Feet over the line!\"");
                            Console.WriteLine();
                            Console.WriteLine("Oh no! A fault!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to bowling alley")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("After having an arguably one-sided conversation with the floor, the man addresses you.");
                            Console.WriteLine();
                            Console.WriteLine("\"That's right! You and my alley are now well acquainted! Let's get to it!\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "G1": //jane's peace
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[0, 12] = "[x]";
                        discoveredMap[1, 12] = " | ";
                        mapPeace = true;
                        Console.WriteLine("There are people gathered around a large [painting] depicting a humanoid tree, seemingly worshiping it. A man who would then be in the role of [priest] nods to you in greeting.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Talk to");
                        if (talkedToPriest == true) { Console.WriteLine("Rest"); }
                        Console.WriteLine("Go south");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G1";
                            ego.Location = "G2";
                            discoveredMap[0, 12] = "[P]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at priest")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("As with everything else in this place, a sense of calm washes over you as you look at him.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search priest")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I know it might seem like just revenge to take advantage of a priest, but there are more imperative things now. Molesting a priest can wait until you escape this place.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to priest")
                        {
                            action = "complete";
                            talkedToPriest = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("\"Welcome,\" the man greets you with a smile. \"Be at ease here; the harsh reality of this dungeon is left outside these walls.\"");
                            Console.WriteLine();
                            Console.WriteLine("\"Should you wish to rest, you will be safe here.\"");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "rest" && talkedToPriest == true)
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You curl up in the corner of the room on a mound of cloth and rest for a while.");
                            ego.CurrentHitPoints = ego.MaxHitPoints;
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at painting")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("It's kind of crude, being made from make-shift art supplies. But it does have a certain beautiful quality to it.");
                            Console.WriteLine();
                            if (searchedTree == true)
                            {
                                Console.WriteLine("Sort of looks like the potion seller, actually.");
                                Console.WriteLine();
                                noticedJane = true;
                            }
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search painting")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Nothing much to it. Finest quality painting you'll find in a place like this.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to painting")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You have the usual sense of feeling foolish when talking to inanimate objects. But there's an additional serenity that came with it this time, at least.");
                            Console.WriteLine();
                            if (ego.JanesProtectionActive == false)
                            {
                                ego.JanesProtectionActive = true;
                                ego.ArmorClass++;
                                Console.WriteLine("Serenity has you thinking more clearly than ever. You gain a temporary +1 AC bonus through your next battle.");
                                Console.WriteLine();
                            }
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "talk to")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Talk to? Talk to WHO?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action.StartsWith("talk to "))
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Unfortunately, talking to that did not aid you in your quest. A waste of time even to describe it!");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "C9": //before jane's bedroom
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[16, 4] = "[x]";
                        discoveredMap[16, 3] = "-";
                        discoveredMap[16, 5] = "-";
                        discoveredMap[15, 4] = " | ";
                        Console.WriteLine("This room is out of place. The walls are lined with [flowers] (long dead, unfortunately), and there's an actual [door] closing off a room to the west.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C9";
                            ego.Location = "C8";
                            discoveredMap[16, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C9";
                            ego.Location = "D9";
                            discoveredMap[16, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            if (undroppables.Contains(janesKey) || janesDoorOpened == true)
                            {
                                ego.FleeLocation = "C9";
                                ego.Location = "B9";
                                janesDoorOpened = true;
                                undroppables.Remove(janesKey);
                                discoveredMap[16, 4] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("This should be good.");
                                Thread.Sleep(1500);
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Locked. Can't say you're surprised.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }

                        }

                        if (action == "look at door")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The door is definitely not denizen-crafted. It's a sturdy, stone door made to fit perfectly.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search door")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The only thing your search achieves is to reinforce your lack of knowledge and skills. The only way for you to get through this door is by key.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at flowers")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The flowers probably were once quite nice. They are most certainly decorative.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search flowers")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("If you were trying to crack off some more petals: mission complete. If you were trying to desecrate this beautiful display and what it once meant: mission accomplished.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "B9": //jane's bedroom
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[16, 2] = "[x]";
                        discoveredMap[16, 3] = "-";
                        Console.WriteLine("This is a fairly nice bedroom -- by any standard. There's a large (and inviting) [bed], a majestic [armoire], and a matching [chest of drawers]. The whole room exudes a rather feminine quality.");
                        Console.WriteLine();
                        Console.WriteLine("The [nightstand] is near the bed on the far wall.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Rest");
                        Console.WriteLine("Leave");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "leave")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "B9";
                            ego.Location = "C9";
                            discoveredMap[16, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Well, all right.");
                            Thread.Sleep(1500);
                        }

                        if (action == "rest")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Such a nice bed shouldn't go to waste. You curl up in the comfortable sheets and awaken refreshed a few hours later.");
                            ego.CurrentHitPoints = ego.MaxHitPoints;
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at bed")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Ostentatious.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search bed")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The mattress is soft yet firm. The blanket is more comfortable than you realized a blanket could be. The pillows are of varying plushness and material.");
                            Console.WriteLine();
                            Console.WriteLine("What is this thing doing here again?");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at armoire")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I know I sold it hard in the initial description, but it's just a piece of furniture. It's certainly nice though.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search armoire")
                        {
                            action = "complete";
                            if (studdedLeatherArmorLooted == false)
                            {
                                studdedLeatherArmorLooted = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Woah. Is that... a dominatrix outfit?");
                                Console.WriteLine();
                                Console.WriteLine("Hey, uh, you'll look silly, but better alive than dignified. You take the Studded Leather Armor.");
                                equippableArmor.Add(studdedLeatherArmor);
                                studdedLeatherArmor.Unlocked = true;
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Unfortunately, none of these frilly outfits are quite as useful as the tight black leather one.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "look at chest of drawers")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You never had an eye for fashion. Or design... if those are different? Either way, it matching the armoire is a nice touch.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search chest of drawers")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You never actually got to participate in a panty raid at college. Let's see here...");
                            Console.WriteLine();
                            Console.WriteLine("Oh. Well not what you expected to find, but there's a gorgeous ring in there. Definitely no use for this thing to remain here.");
                            undroppables.Add(jeweledRing);
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at nightstand")
                        {
                            action = "complete";
                            readLogbook = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Atop the nightstand is a book. Obviously, you read it.");
                            Console.WriteLine();
                            if (signedLogBook == false) { Console.WriteLine("It's a logbook. It seems mostly unfilled, but there are a few entries."); }
                            if (signedLogBook == true) { Console.WriteLine("It's a logbook. Before some oaf pledging to be a hero of some sort, there are a few entries."); }
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("1/21");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Somehow Jesse kidnapped and moved me and some others into what I can only describe as a maze, or dungeon. He encouraged me to write in this book as to fill any loneliness while he's away. He won't tell me what's going on, but insists \"everything will be fine.\" For some reason I have my doubts.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("1/23");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I've met more of my new \"neighbors\" in this place. They're all tied to Jesse in some way; or - more appropriately - to his partner, Heisenberg. But strangely enough he is the only person of that tangled web that I haven't seen. I wonder if he's even here.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("1/30");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The others have begun to take up residence in parts of the maze. I don't think any of them believe physical conflict will get us anywhere, but still I'm glad my room has a secure door with a lock.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("2/15");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I'm becoming more and more frustrated with this situation. While I suppose I should be grateful for this room, it's still no way to live. Jesse visits less and less frequently, and doesn't even stay for more than a couple minutes when he does. He continues to assure me he has it under control and will turn out better for everyone, but it's getting harder every day to resist forcing an explanation from him.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("3/15");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I finally snapped and confronted Jesse. It'd been an entire week since I had seen him, and I wouldn't let him leave until he told me what was going on.");
                            Console.WriteLine();
                            Console.WriteLine("All I could get out of him was that it is \"to save Heisenberg.\" He somehow hoped that he could rehabilitate his friend and allow him to begin a new life. It was clear from his behavior that things were not going as he hoped. When I finally let him leave he took off without another word.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("4/24");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I haven't seen Jesse in over a month, and I wonder if he's ever coming back. I don't think he's going to come back.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("?/??");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("I don't even know how long it's been since my last entry. Jesse hasn't returned since that day, but that is not what concerns me now.");
                            Console.WriteLine();
                            Console.WriteLine("Things are changing. New people are appearing that have not been here before -- lots of them. And things are getting... frightening. People fight each other in the halls for food, money, or shelter. While this room is certainly the safest in the dungeon, it is far from the others and I rely on them for food and other provisions. I may need to consider taking up residence closer to everyone else.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("There are no more entries.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search nightstand")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You open the drawer of the nightstand. Pushing aside a few odds and ends, you find and retrieve the large brass key.");
                            undroppables.Add(largeBrassKey);
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if ((action == "sign logbook" || action == "sign book") && signedLogBook == false)
                        {
                            action = "complete";
                            signedLogBook = true;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("You sign your name with a flourish.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }


                        break;

                    case "E3": //liquor cabinet
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[4, 8] = "[x]";
                        discoveredMap[4, 9] = "-";
                        discoveredMap[5, 8] = " | ";
                        mapLiquor = true;
                        Console.WriteLine("Empty [wine racks] and [cabinets] line the walls, having long since been raided of their contents. In the far corner is a [lock box] built into the wall.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E3";
                            ego.Location = "E4";
                            discoveredMap[4, 8] = "[L]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E3";
                            ego.Location = "F3";
                            discoveredMap[4, 8] = "[L]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "look at wine racks")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Wonder if he liked red or white. Guess we'll never know now.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search wine racks")
                        {
                            action = "complete";
                            if (garbageCanLid.Unlocked == false)
                            {
                                garbageCanLid.Unlocked = true;
                                equippableShield.Add(garbageCanLid);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Hey there's a Garbage Can Lid slipped in the back between the rack and the wall. Let's toddler it up and use it as a shield, yeah?");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Nothing is left of the contents to reveal anything useful.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }

                        if (action == "look at cabinets")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Surprisingly, all the cabinets' doors are still intact. At least whoever robbed this place was respectful of other people's property.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search cabinets")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Based on the internal construction, these are (were) liquor cabinets.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "look at lock box")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("The lock and hinges are fairly beat up. Looks like people have tried and failed to get into it.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }

                        if (action == "search lock box")
                        {
                            action = "complete";
                            if (undroppables.Contains(liquorKey))
                            {
                                undroppables.Remove(liquorKey);
                                undroppables.Add(mezcal);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Inside there is a single bottle of mezcal. You take it.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Funny - the lock box is locked.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }


                        break;

                    case "F11": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[20, 10] = "[x]";
                        discoveredMap[20, 9] = "-";
                        discoveredMap[19, 10] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F11";
                            ego.Location = "F10";
                            discoveredMap[20, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F11";
                            ego.Location = "E11";
                            discoveredMap[20, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "F10": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[18, 10] = "[x]";
                        discoveredMap[18, 9] = "-";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F10";
                            ego.Location = "F11";
                            discoveredMap[18, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F10";
                            ego.Location = "E10";
                            discoveredMap[18, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "E10": //Hiden Goseke
                        if (randomEncountersOn == true)
                        {
                            if (hidenGoseke == true && dudeOnAPogoStickDefeated == false) { }
                            else
                            {
                                RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                                Console.Clear();
                            }
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[18, 8] = "[x]";
                        discoveredMap[18, 9] = "-";
                        discoveredMap[18, 7] = "-";
                        if (hidenGoseke == true && dudeOnAPogoStickDefeated == false) { Console.WriteLine("You have a strange feeling of someone watching you."); }
                        else { Console.WriteLine("Gosh this is a nice room."); }
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the east and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go east")
                        {
                            action = "complete";
                            if (hidenGoseke == true && dudeOnAPogoStickDefeated == false)
                            {
                                BadGuyStats badGuy = new BadGuyStats("Dude on a Pogo Stick", 150, 150, 3, 0.80, 8, 6, 3.00, die.Next(30, 51), 1, healingPotion, pogoStick, ringmail, "The Dude on a Pogo Stick bounces toward you furiously!");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Huh?");
                                Thread.Sleep(1500);
                                Console.WriteLine();
                                Console.WriteLine("You look up and see the dude on a pogo stick heading straight down onto you.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Dropping and rolling, you dodge just in time.");
                                Console.WriteLine();
                                Console.WriteLine("Cockily, you loosen up to fight.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                PlotBattle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                                if (ego.CurrentHitPoints <= 0) { hidenGoseke = false; }
                                PlotBattleResolution(ego, equippableArmor, equippableWeapon, equippableShield, potionBelt, badGuy);
                                //if (ego.Location == "H2") { salamancaGuardDefeated = true; } //maybe redundant
                            }
                            else
                            {
                                randomEncountersOn = true;
                                ego.FleeLocation = "E10";
                                ego.Location = "F10";
                                discoveredMap[18, 8] = "[ ]";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Onward!");
                                Thread.Sleep(1500);
                            }
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E10";
                            ego.Location = "D10";
                            discoveredMap[18, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "G9": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[16, 12] = "[x]";
                        discoveredMap[16, 11] = "-";
                        discoveredMap[16, 13] = "-";
                        discoveredMap[15, 12] = " | ";
                        discoveredMap[17, 12] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G9";
                            ego.Location = "G8";
                            discoveredMap[16, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G9";
                            ego.Location = "G10";
                            discoveredMap[16, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G9";
                            ego.Location = "H9";
                            discoveredMap[16, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G9";
                            ego.Location = "F9";
                            discoveredMap[16, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "F9": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[16, 10] = "[x]";
                        discoveredMap[16, 9] = "-";
                        discoveredMap[16, 11] = "-";
                        discoveredMap[15, 10] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F9";
                            ego.Location = "F8";
                            discoveredMap[16, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F9";
                            ego.Location = "G9";
                            discoveredMap[16, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F9";
                            ego.Location = "E9";
                            discoveredMap[16, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "E9": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[16, 8] = "[x]";
                        discoveredMap[16, 7] = "-";
                        discoveredMap[16, 9] = "-";
                        discoveredMap[15, 8] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E9";
                            ego.Location = "E8";
                            discoveredMap[16, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E9";
                            ego.Location = "F9";
                            discoveredMap[16, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E9";
                            ego.Location = "D9";
                            discoveredMap[16, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "H8": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[14, 14] = "[x]";
                        discoveredMap[14, 13] = "-";
                        discoveredMap[13, 14] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H8";
                            ego.Location = "H7";
                            discoveredMap[14, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H8";
                            ego.Location = "G8";
                            discoveredMap[14, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "G8": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[14, 12] = "[x]";
                        discoveredMap[14, 13] = "-";
                        discoveredMap[14, 11] = "-";
                        discoveredMap[13, 12] = " | ";
                        discoveredMap[15, 12] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G8";
                            ego.Location = "G7";
                            discoveredMap[14, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G8";
                            ego.Location = "G9";
                            discoveredMap[14, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G8";
                            ego.Location = "H8";
                            discoveredMap[14, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G8";
                            ego.Location = "F8";
                            discoveredMap[14, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "D8": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[14, 6] = "[x]";
                        discoveredMap[14, 5] = "-";
                        discoveredMap[14, 7] = "-";
                        discoveredMap[13, 6] = " | ";
                        discoveredMap[15, 6] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D8";
                            ego.Location = "D7";
                            discoveredMap[14, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D8";
                            ego.Location = "D9";
                            discoveredMap[14, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D8";
                            ego.Location = "E8";
                            discoveredMap[14, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D8";
                            ego.Location = "C8";
                            discoveredMap[14, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "B8": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[14, 2] = "[x]";
                        discoveredMap[14, 3] = "-";
                        discoveredMap[13, 2] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "B8";
                            ego.Location = "B7";
                            discoveredMap[14, 2] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "B8";
                            ego.Location = "C8";
                            discoveredMap[14, 2] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "C7": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[12, 4] = "[x]";
                        discoveredMap[12, 5] = "-";
                        discoveredMap[12, 3] = "-";
                        discoveredMap[13, 4] = " | ";
                        discoveredMap[11, 4] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C7";
                            ego.Location = "C6";
                            discoveredMap[12, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C7";
                            ego.Location = "C8";
                            discoveredMap[12, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C7";
                            ego.Location = "D7";
                            discoveredMap[12, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C7";
                            ego.Location = "B7";
                            discoveredMap[12, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;


                    case "B7": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[12, 2] = "[x]";
                        discoveredMap[12, 3] = "-";
                        discoveredMap[12, 1] = "-";
                        discoveredMap[13, 2] = " | ";
                        discoveredMap[11, 2] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "B7";
                            ego.Location = "B6";
                            discoveredMap[12, 2] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "B7";
                            ego.Location = "B8";
                            discoveredMap[12, 2] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "B7";
                            ego.Location = "C7";
                            discoveredMap[12, 2] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "B7";
                            ego.Location = "A7";
                            discoveredMap[12, 2] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "H6": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[10, 14] = "[x]";
                        discoveredMap[10, 15] = "-";
                        discoveredMap[10, 13] = "-";
                        discoveredMap[9, 14] = " | ";
                        discoveredMap[11, 14] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H6";
                            ego.Location = "H5";
                            discoveredMap[10, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H6";
                            ego.Location = "H7";
                            discoveredMap[10, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H6";
                            ego.Location = "I6";
                            discoveredMap[10, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H6";
                            ego.Location = "G6";
                            discoveredMap[10, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "D6": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[10, 6] = "[x]";
                        discoveredMap[10, 5] = "-";
                        discoveredMap[10, 7] = "-";
                        discoveredMap[9, 6] = " | ";
                        discoveredMap[11, 6] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D6";
                            ego.Location = "D5";
                            discoveredMap[10, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D6";
                            ego.Location = "D7";
                            discoveredMap[10, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D6";
                            ego.Location = "E6";
                            discoveredMap[10, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D6";
                            ego.Location = "C6";
                            discoveredMap[10, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "B6": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[10, 2] = "[x]";
                        discoveredMap[10, 3] = "-";
                        discoveredMap[11, 2] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "B6";
                            ego.Location = "B7";
                            discoveredMap[10, 2] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "B6";
                            ego.Location = "C6";
                            discoveredMap[10, 2] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "I5": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[8, 16] = "[x]";
                        discoveredMap[8, 15] = "-";
                        discoveredMap[9, 16] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "I5";
                            ego.Location = "I6";
                            discoveredMap[8, 16] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "I5";
                            ego.Location = "H5";
                            discoveredMap[8, 16] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "H5": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[8, 14] = "[x]";
                        discoveredMap[8, 15] = "-";
                        discoveredMap[9, 14] = " | ";
                        discoveredMap[7, 14] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H5";
                            ego.Location = "H4";
                            discoveredMap[8, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H5";
                            ego.Location = "H6";
                            discoveredMap[8, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H5";
                            ego.Location = "I5";
                            discoveredMap[8, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "F5": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[8, 10] = "[x]";
                        discoveredMap[8, 9] = "-";
                        discoveredMap[9, 10] = " | ";
                        discoveredMap[7, 10] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F5";
                            ego.Location = "F4";
                            discoveredMap[8, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F5";
                            ego.Location = "F6";
                            discoveredMap[8, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F5";
                            ego.Location = "E5";
                            discoveredMap[8, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "E5": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[8, 8] = "[x]";
                        discoveredMap[8, 9] = "-";
                        discoveredMap[8, 7] = "-";
                        discoveredMap[9, 8] = " | ";
                        discoveredMap[7, 8] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E5";
                            ego.Location = "E4";
                            discoveredMap[8, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E5";
                            ego.Location = "E6";
                            discoveredMap[8, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E5";
                            ego.Location = "F5";
                            discoveredMap[8, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E5";
                            ego.Location = "D5";
                            discoveredMap[8, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "D5": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[8, 6] = "[x]";
                        discoveredMap[8, 7] = "-";
                        discoveredMap[8, 5] = "-";
                        discoveredMap[9, 6] = " | ";
                        discoveredMap[7, 6] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D5";
                            ego.Location = "D4";
                            discoveredMap[8, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D5";
                            ego.Location = "D6";
                            discoveredMap[8, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D5";
                            ego.Location = "E5";
                            discoveredMap[8, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D5";
                            ego.Location = "C5";
                            discoveredMap[8, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "C5": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[8, 4] = "[x]";
                        discoveredMap[8, 5] = "-";
                        discoveredMap[9, 4] = " | ";
                        discoveredMap[7, 4] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C5";
                            ego.Location = "C4";
                            discoveredMap[8, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C5";
                            ego.Location = "C6";
                            discoveredMap[8, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C5";
                            ego.Location = "D5";
                            discoveredMap[8, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "I4": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[6, 16] = "[x]";
                        discoveredMap[6, 15] = "-";
                        discoveredMap[6, 17] = "-";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the east and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "I4";
                            ego.Location = "J4";
                            discoveredMap[6, 16] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "I4";
                            ego.Location = "H4";
                            discoveredMap[6, 16] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "H4": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[6, 14] = "[x]";
                        discoveredMap[6, 15] = "-";
                        discoveredMap[5, 14] = " | ";
                        discoveredMap[7, 14] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H4";
                            ego.Location = "H3";
                            discoveredMap[6, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H4";
                            ego.Location = "H5";
                            discoveredMap[6, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H4";
                            ego.Location = "I4";
                            discoveredMap[6, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "F4": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[6, 10] = "[x]";
                        discoveredMap[6, 9] = "-";
                        discoveredMap[5, 10] = " | ";
                        discoveredMap[7, 10] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F4";
                            ego.Location = "F3";
                            discoveredMap[6, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F4";
                            ego.Location = "F5";
                            discoveredMap[6, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F4";
                            ego.Location = "E4";
                            discoveredMap[6, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "E4": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[6, 8] = "[x]";
                        discoveredMap[6, 9] = "-";
                        discoveredMap[6, 7] = "-";
                        discoveredMap[5, 8] = " | ";
                        discoveredMap[7, 8] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E4";
                            ego.Location = "E3";
                            discoveredMap[6, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E4";
                            ego.Location = "E5";
                            discoveredMap[6, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E4";
                            ego.Location = "F4";
                            discoveredMap[6, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E4";
                            ego.Location = "D4";
                            discoveredMap[6, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "D4": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[6, 6] = "[x]";
                        discoveredMap[6, 7] = "-";
                        discoveredMap[7, 6] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D4";
                            ego.Location = "D5";
                            discoveredMap[6, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D4";
                            ego.Location = "E4";
                            discoveredMap[6, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "H3": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[4, 14] = "[x]";
                        discoveredMap[4, 13] = "-";
                        discoveredMap[5, 14] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H3";
                            ego.Location = "H4";
                            discoveredMap[4, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "H3";
                            ego.Location = "G3";
                            discoveredMap[4, 14] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "G3": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[4, 12] = "[x]";
                        discoveredMap[4, 13] = "-";
                        discoveredMap[4, 11] = "-";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the east and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G3";
                            ego.Location = "H3";
                            discoveredMap[4, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G3";
                            ego.Location = "F3";
                            discoveredMap[4, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "F3": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[4, 10] = "[x]";
                        discoveredMap[4, 9] = "-";
                        discoveredMap[4, 11] = "-";
                        discoveredMap[3, 10] = " | ";
                        discoveredMap[5, 10] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F3";
                            ego.Location = "F2";
                            discoveredMap[4, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F3";
                            ego.Location = "F4";
                            discoveredMap[4, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F3";
                            ego.Location = "G3";
                            discoveredMap[4, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F3";
                            ego.Location = "E3";
                            discoveredMap[4, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "G2": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[2, 12] = "[x]";
                        discoveredMap[2, 13] = "-";
                        discoveredMap[2, 11] = "-";
                        discoveredMap[1, 12] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G2";
                            ego.Location = "G1";
                            discoveredMap[2, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G2";
                            ego.Location = "H2";
                            discoveredMap[2, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "G2";
                            ego.Location = "F2";
                            discoveredMap[2, 12] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "F2": //nowhere special
                        if (randomEncountersOn == true)
                        {
                            RandomEncounterGenerator(ego, potionBelt, equippableWeapon, equippableArmor, equippableShield);
                            Console.Clear();
                        }
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        if (ego.JustFled)
                        {
                            ego.JustFled = false;
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[2, 10] = "[x]";
                        discoveredMap[2, 11] = "-";
                        discoveredMap[3, 10] = " | ";
                        Console.WriteLine("Gosh this is a nice room.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the south and east.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F2";
                            ego.Location = "F3";
                            discoveredMap[2, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "F2";
                            ego.Location = "G2";
                            discoveredMap[2, 10] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "D9": //two rooms out jane's bedroom
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[16, 6] = "[x]";
                        discoveredMap[16, 7] = "-";
                        discoveredMap[16, 5] = "-";
                        discoveredMap[15, 6] = " | ";
                        discoveredMap[17, 6] = " | ";
                        Console.WriteLine("This room would be much like the others, if not for the wilted rose petals coming from the west.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D9";
                            ego.Location = "D8";
                            discoveredMap[16, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D9";
                            ego.Location = "D10";
                            discoveredMap[16, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D9";
                            ego.Location = "E9";
                            discoveredMap[16, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D9";
                            ego.Location = "C9";
                            discoveredMap[16, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "C8": //two rooms out jane's bedroom
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[14, 4] = "[x]";
                        discoveredMap[14, 3] = "-";
                        discoveredMap[14, 5] = "-";
                        discoveredMap[15, 4] = " | ";
                        discoveredMap[13, 4] = " | ";
                        Console.WriteLine("This room would be much like the others, if not for the wilted rose petals coming from the south.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C8";
                            ego.Location = "C7";
                            discoveredMap[14, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C8";
                            ego.Location = "C9";
                            discoveredMap[14, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C8";
                            ego.Location = "D8";
                            discoveredMap[14, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "C8";
                            ego.Location = "B8";
                            discoveredMap[14, 4] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "E8": //south of GY
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[14, 8] = "[x]";
                        discoveredMap[14, 9] = "-";
                        discoveredMap[14, 7] = "-";
                        discoveredMap[15, 8] = " | ";
                        discoveredMap[13, 8] = " | ";
                        Console.WriteLine("There is a foul smell in here; so foul you can tell it's coming from the north.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E8";
                            ego.Location = "E7";
                            discoveredMap[14, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E8";
                            ego.Location = "E9";
                            discoveredMap[14, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E8";
                            ego.Location = "F8";
                            discoveredMap[14, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E8";
                            ego.Location = "D8";
                            discoveredMap[14, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "E6": //north of GY
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[10, 8] = "[x]";
                        discoveredMap[10, 9] = "-";
                        discoveredMap[10, 7] = "-";
                        discoveredMap[11, 8] = " | ";
                        discoveredMap[9, 8] = " | ";
                        Console.WriteLine("There is a foul smell in here; so foul you can tell it's coming from the south.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E6";
                            ego.Location = "E5";
                            discoveredMap[10, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E6";
                            ego.Location = "E7";
                            discoveredMap[10, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E6";
                            ego.Location = "F6";
                            discoveredMap[10, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "E6";
                            ego.Location = "D6";
                            discoveredMap[10, 8] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;

                    case "D7": //west of GY
                        if (ego.Location == "dead")
                        {
                            ego.Location = "F7";
                            break;
                        }
                        randomEncountersOn = false;
                        discoveredMap[12, 6] = "[x]";
                        discoveredMap[12, 5] = "-";
                        discoveredMap[12, 7] = "-";
                        discoveredMap[11, 6] = " | ";
                        discoveredMap[13, 6] = " | ";
                        Console.WriteLine("There is a foul smell in here; so foul you can tell it's coming from the east.");
                        Console.WriteLine();
                        Console.WriteLine("There is an exit to the north, south, east, and west.");
                        Console.WriteLine();
                        Console.WriteLine("What will you do?");
                        Console.WriteLine("-------------------");
                        Console.WriteLine("Inventory");
                        Console.WriteLine("Map");
                        Console.WriteLine("Stats");
                        Console.WriteLine("Look at");
                        Console.WriteLine("Search");
                        Console.WriteLine("Go north");
                        Console.WriteLine("Go south");
                        Console.WriteLine("Go east");
                        Console.WriteLine("Go west");
                        Console.WriteLine();
                        Console.WriteLine();

                        Console.Write("Your action: ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = action.Trim();

                        if (action == "go north")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D7";
                            ego.Location = "D6";
                            discoveredMap[12, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go south")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D7";
                            ego.Location = "D8";
                            discoveredMap[12, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go east")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D7";
                            ego.Location = "E7";
                            discoveredMap[12, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }

                        if (action == "go west")
                        {
                            action = "complete";
                            randomEncountersOn = true;
                            ego.FleeLocation = "D7";
                            ego.Location = "C7";
                            discoveredMap[12, 6] = "[ ]";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Onward!");
                            Thread.Sleep(1500);
                        }


                        break;
                }

                if (action == "look at")
                {
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Look at... loo kat? zoo cat? A LION???");
                    Console.WriteLine();
                    Thread.Sleep(3000);
                    Console.WriteLine("IT'S COMIN' RIGHT FOR US!");
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Fight or flee?");
                    Console.WriteLine();
                    Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("OK not really. But could you please be more careful with what you type? Can't really trust me to interpret everything properly.");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }

                if (action.StartsWith("look at "))
                {
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("It looks pretty much as you'd expect.");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }

                if (action == "search")
                {
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Search? Search WHAT?!");
                    Console.WriteLine();
                    Thread.Sleep(1000);
                    //Console.Write("Press ENTER to continue");
                    //Console.ReadLine();
                }

                if (action.StartsWith("search "))
                {
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Unfortunately, searching that did not aid you in your quest. A waste of time even to describe it!");
                    Console.WriteLine();
                    Console.WriteLine("Press ENTER to continue");
                    Console.ReadLine();
                }

                if (action == "map")
                {
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    GetMap(discoveredMap);
                    Console.WriteLine();
                    Console.WriteLine("x: You are here!");
                    Console.WriteLine();
                    if (mapTown) { Console.WriteLine("T: Town"); }
                    if (mapPeace) { Console.WriteLine("P: Peaceful Sanctuary"); }
                    if (mapSalamanca) { Console.WriteLine("S: Salamanca's Territory"); }
                    if (mapLiquor) { Console.WriteLine("L: Liquor & Winery"); }
                    if (mapCartel) { Console.WriteLine("C: Cartel"); }
                    if (mapMike) { Console.WriteLine("M: Mike"); }
                    if (mapFight) { Console.WriteLine("!: Fight Club"); }
                    if (mapLydia) { Console.WriteLine("L: Lydia"); }
                    if (mapSaul) { Console.WriteLine("J: Jimmy"); }
                    if (mapBowl) { Console.WriteLine("B: Bowling Alley"); }
                    if (mapHermit) { Console.WriteLine("H: Hermit"); }
                    if (mapFortress) { Console.WriteLine("F: Fortress"); }
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }

                if (action == "inventory")
                {
                    inventoryLoop = true;
                    while (inventoryLoop == true)
                    {
                        Console.Clear();
                        Console.WriteLine("Equipment:");
                        Console.WriteLine("Weapon: " + ego.EquippedWeapon.Name);
                        Console.WriteLine("Armor: " + ego.EquippedArmor.Name);
                        if (ego.EquippedShield.Name != "Forearm") { Console.WriteLine("Shield: " + ego.EquippedShield.Name); }
                        else { Console.WriteLine("Shield: None"); }
                        Console.WriteLine();
                        Console.WriteLine("Blue Crystals: " + ego.BlueCrystals);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        if ((equippableArmor.Count + equippableShield.Count + equippableWeapon.Count + potionBelt.Count + undroppables.Count - 2) != 1) { Console.WriteLine("You are currently carrying " + (equippableArmor.Count + equippableShield.Count + equippableWeapon.Count + potionBelt.Count + undroppables.Count - 2) + " items:"); }
                        else { Console.WriteLine("You are currently carrying " + (equippableArmor.Count + equippableShield.Count + equippableWeapon.Count + potionBelt.Count + undroppables.Count - 2) + " item:"); }
                        Console.WriteLine();
                        foreach (Armor armor in equippableArmor)
                        {
                            Console.WriteLine(armor.Name);
                        }
                        foreach (Weapon weapon in equippableWeapon)
                        {
                            if (weapon.Name == "Unarmed") { }
                            else { Console.WriteLine(weapon.Name); }
                        }
                        foreach (Shield shield in equippableShield)
                        {
                            if (shield.Name == "Forearm") { }
                            else { Console.WriteLine(shield.Name); }
                        }
                        foreach (Potion potion in potionBelt)
                        {
                            Console.WriteLine(potion.Name);
                        }
                        foreach (Item item in undroppables)
                        {
                            Console.WriteLine(item.Name);
                        }
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Inspect");
                        Console.WriteLine("Equip");
                        Console.WriteLine("Drop");
                        Console.WriteLine("Use");
                        Console.WriteLine();
                        Console.WriteLine("Return");
                        Console.WriteLine();
                        Console.Write("> ");
                        action = Console.ReadLine();
                        action = action.ToLower();
                        action = myTI.ToTitleCase(action);

                        if (action == "Equip")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Oops! You equipped something that we weren't expecting. Whatever it was, you don't need to do it to finish the game.");
                            Console.WriteLine();
                            Console.WriteLine("Try taking a different approach to the situation.");
                            Console.WriteLine();
                            Console.WriteLine("Error 4. SCI Version 1.001.050");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Had you going there, didn't I? But seriously -- next time try saying what you want to equip.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (action.StartsWith("Equip "))
                        {
                            string equippingItem = action.Remove((action.IndexOf("Equip ")), 6);
                            equippingItem = equippingItem.ToLower();
                            equippingItem = myTI.ToTitleCase(equippingItem);

                            foreach (Armor armor in equippableArmor)
                            {
                                string bagCheck = armor.Name;
                                if (equippingItem == bagCheck)
                                {
                                    action = "complete";
                                    GetDressed(ego, armor);
                                    break;
                                }
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                string bagCheck = weapon.Name;
                                if (equippingItem == bagCheck)
                                {
                                    action = "complete";
                                    GetEquipped(ego, weapon);
                                    break;
                                }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                string bagCheck = shield.Name;
                                if (equippingItem == bagCheck)
                                {
                                    action = "complete";
                                    GetStrapped(ego, shield);
                                    break;
                                }
                            }
                            if (action != "complete")
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Let's get one thing straight, OK? You don't have that, it's not equippable, or you just plain typed something that didn't make sense.");
                                Console.WriteLine("Whichever the case -- stop trying to put that on. It makes you look silly.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            };
                        }
                        else if (action == "Drop")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Drop? Drop WHAT?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (action.StartsWith("Drop "))
                        {
                            string droppingItem = action.Remove((action.IndexOf("Drop ")), 5);
                            droppingItem = droppingItem.ToLower();
                            droppingItem = myTI.ToTitleCase(droppingItem);

                            if (droppingItem == "Rags")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Nah don't drop that. Them's your clothes! Can't have a bunch of naked people running around this dungeon. Get more sales with a kid-friendly rating.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else
                            {
                                action = "complete";
                                foreach (Armor armor in equippableArmor)
                                {
                                    string bagCheck = armor.Name;
                                    if (droppingItem == bagCheck)
                                    {
                                        if (ego.EquippedArmor.Name == droppingItem) { GetStripped(ego, rags, ego.EquippedWeapon, ego.EquippedShield); }
                                        equippableArmor.Remove(armor);
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You drop the " + droppingItem + ".");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Weapon weapon in equippableWeapon)
                                {
                                    string bagCheck = weapon.Name;
                                    if (droppingItem == bagCheck)
                                    {
                                        if (ego.EquippedWeapon.Name == droppingItem) { GetStripped(ego, ego.EquippedArmor, unarmed, ego.EquippedShield); }
                                        equippableWeapon.Remove(weapon);
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You drop the " + droppingItem + ".");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Shield shield in equippableShield)
                                {
                                    string bagCheck = shield.Name;
                                    if (droppingItem == bagCheck)
                                    {
                                        if (ego.EquippedShield.Name == droppingItem) { GetStripped(ego, ego.EquippedArmor, ego.EquippedWeapon, nullShield); }
                                        equippableShield.Remove(shield);
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You drop the " + droppingItem + ".");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Potion potion in potionBelt)
                                {
                                    string bagCheck = potion.Name;
                                    if (droppingItem == bagCheck)
                                    {
                                        potionBelt.Remove(potion);
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("You drop the " + droppingItem + ".");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Item item in undroppables)
                                {
                                    string bagCheck = item.Name;
                                    if (droppingItem == bagCheck)
                                    {
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("OK, you drop it.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Then you think better of it and pick it back up.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                    }
                                }
                            }
                            if (action != "complete")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You must be quite a content person, as you don't want what you don't have.");
                                Console.WriteLine();
                                Console.WriteLine("But you can't drop what you don't have, so you don't drop it.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                        else if (action == "Use")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Use? Use WHAT?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (action.StartsWith("Use "))
                        {
                            usingItem = action.Remove((action.IndexOf("Use ")), 4);
                            usingItem = usingItem.ToLower();
                            usingItem = myTI.ToTitleCase(usingItem);

                            foreach (Potion potion in potionBelt)
                            {
                                string bagCheck = potion.Name;
                                if (usingItem == bagCheck)
                                {
                                    action = "complete";
                                    GetDrunk(potionBelt, ego, potion);
                                    break;
                                }
                            }
                            foreach (Armor armor in equippableArmor)
                            {
                                string bagCheck = armor.Name;
                                if (usingItem == bagCheck)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                string bagCheck = weapon.Name;
                                if (usingItem == bagCheck)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                string bagCheck = shield.Name;
                                if (usingItem == bagCheck)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Item item in undroppables)
                            {
                                string bagCheck = item.Name;
                                if (usingItem == bagCheck)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            if (action != "complete")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine($"When you figure out what {usingItem} is you give me a call, ok?");
                                Console.WriteLine();
                                Console.WriteLine("Until then, nothing happens.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                        else if (action == "Inspect")
                        {
                            action = "complete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("-or gadget DOO DOO DOO DOO DOO DOOOO DOOOOOOO!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (action.StartsWith("Inspect "))
                        {
                            inspectingItem = action.Remove((action.IndexOf("Inspect ")), 8);
                            inspectingItem = inspectingItem.ToLower();
                            inspectingItem = myTI.ToTitleCase(inspectingItem);

                            foreach (Armor armor in equippableArmor)
                            {
                                string bagCheck = armor.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(armor.Description);
                                    Console.WriteLine();
                                    Console.WriteLine(armor.Name);
                                    Console.WriteLine($"Dmg Reduction: {armor.DamageReduction}  Crit Resist: {armor.CritResist}");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                string bagCheck = weapon.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(weapon.Description);
                                    Console.WriteLine();
                                    Console.WriteLine(weapon.Name);
                                    Console.WriteLine($"Damage Bonus: {weapon.Damage}  Crit Multiplier: {weapon.CritMultiplier}");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.WriteLine();
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                string bagCheck = shield.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(shield.Description);
                                    Console.WriteLine();
                                    Console.WriteLine(shield.Name);
                                    Console.WriteLine($"AC: {shield.ArmorClass}  Crit Resist: {shield.CritResist}");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Potion potion in potionBelt)
                            {
                                string bagCheck = potion.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(potion.Description);
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Item item in undroppables)
                            {                                                 
                                string bagCheck = item.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    action = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(item.Description);
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            if (action != "complete")
                            {
                                action = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Are we reading from the same inventory sheet?");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                        else if (action == "Return")
                        {
                            action = "complete";
                            inventoryLoop = false;
                        }
                        else if (action != "complete")
                        {
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("That didn't do anything useful.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                    }
                }

                if (action == "stats")
                {
                    action = "complete";
                    string[] yourStats = ego.GetStats();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("My, you're looking heroic today!");
                    Console.WriteLine();
                    Console.WriteLine(yourStats[0]);
                    Console.WriteLine(yourStats[1]);
                    Console.WriteLine(yourStats[2]);
                    Console.WriteLine(yourStats[3]);
                    Console.WriteLine(yourStats[4]);
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }

                if (action == "quit")
                {                    
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("B'wana join the land of the living for a slice of quiche?");
                    Console.WriteLine();
                    Console.Write("Press ENTER to exit");
                    Console.ReadLine();

                    break;
                }

                if (action == "version")
                {
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("v.FI IS OPPOSITE LOGIC");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }

                if (action == "i am the one who knocks")
                {
                    debugMode = true;
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("I sure won't be answering my door tonight.");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }  //debug activate

                if (action.StartsWith("teleport to ") && debugMode == true) 
                {
                    action = action.Remove(action.IndexOf("teleport to "), 12);
                    action = char.ToUpper(action[0]) + action.Substring(1);

                    if (action == "G1" || action == "H1" || action == "F2" || action == "G2" || action == "H2" || action == "E3" || action == "F3" || action == "G3" || action == "H3" || action == "C4" || action == "D4" || action == "E4" || action == "F4" || action == "G4" || action == "H4" || action == "I4" || action == "J4" || action == "C5" || action == "D5" || action == "E5" || action == "F5" || action == "G5" || action == "H5" || action == "I5" || action == "B6" || action == "C6" || action == "D6" || action == "E6" || action == "F6" || action == "G6" || action == "H6" || action == "I6" || action == "J6" || action == "A7" || action == "B7" || action == "C7" || action == "D7" || action == "E7" || action == "F7" || action == "G7" || action == "H7" || action == "I7" || action == "J7" || action == "B8" || action == "C8" || action == "D8" || action == "E8" || action == "F8" || action == "G8" || action == "H8" || action == "B9" || action == "C9" || action == "D9" || action == "E9" || action == "F9" || action == "G9" || action == "H9" || action == "D10" || action == "E10" || action == "F10" || action == "G10" || action == "E11" || action == "F11" || action == "Fortress0" || action == "Fortress1" || action == "Fortress2" || action == "Fortress3" || action == "Secret Tunnel" || action == "Jesse" || action == "Heisenberg")
                    {
                        for (int i = 0; i < 21; i++)
                        {
                            for (int j = 0; j < 19; j++)
                            {
                                if (discoveredMap[i, j] == "[x]")
                                {
                                    if (ego.Location == "F7") { discoveredMap[i, j] = "[T]"; }
                                    else if (ego.Location == "F8") { discoveredMap[i, j] = "[B]"; }
                                    else if (ego.Location == "E11") { discoveredMap[i, j] = "[F]"; }
                                    else if (ego.Location == "G4") { discoveredMap[i, j] = "[C]"; }
                                    else if (ego.Location == "C4") { discoveredMap[i, j] = "[D]"; }
                                    else if (ego.Location == "H9") { discoveredMap[i, j] = "[H]"; }
                                    else if (ego.Location == "A7") { discoveredMap[i, j] = "[J]"; }
                                    else if (ego.Location == "J3") { discoveredMap[i, j] = "[M]"; }
                                    else if (ego.Location == "H1") { discoveredMap[i, j] = "[S]"; }
                                    else if (ego.Location == "J6") { discoveredMap[i, j] = "[L]"; }
                                    else if (ego.Location == "C6") { discoveredMap[i, j] = "[!]"; }
                                    else if (ego.Location == "G1") { discoveredMap[i, j] = "[P]"; }
                                    else { discoveredMap[i, j] = "[ ]"; }
                                    break;
                                }
                            }                            
                        }
                        ego.Location = action;
                    }
                    else
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Could you be more careful where you aim that thing? Liable to wind up in a wall or something.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    action = "complete";
                }  //debug teleport

                if (action == "i'm in the empire business" && debugMode == true)
                {
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("And just how much is your empire worth nowadays?");
                    Console.WriteLine();
                    debugMoneyInput = Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    if (!int.TryParse(debugMoneyInput, out debugMoneyOutput))
                    {
                        Console.WriteLine("Hey, oh, heee-y. We sent that figure out to the number guys, and they're telling us it doesn't quite work out.");
                    }
                    else if (int.TryParse(debugMoneyInput, out debugMoneyOutput))
                    {
                        debugMoneyOutput = Convert.ToInt32(debugMoneyInput);
                        Console.WriteLine("You got it, boss.");
                        ego.BlueCrystals = ego.BlueCrystals + debugMoneyOutput;
                    }
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                } //debug money

                if (action == "say my name" && debugMode == true)
                {
                    action = "complete";
                    ego.MaxHitPoints = 125000;
                    ego.CurrentHitPoints = 125000;
                    ego.ArmorClass = 125000;
                    ego.Damage = 125000;
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Beetlejuice Beetlejuice BEETLEJUICE!");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }  //god mode

                if (action == "tread lightly" && debugMode == true)
                {
                    action = "complete";
                    discoveredMap[0, 12] = "[P]";
                    discoveredMap[0, 14] = "[S]";
                    discoveredMap[4, 8] = "[L]";
                    discoveredMap[6, 4] = "[?]";
                    discoveredMap[6, 12] = "[C]";
                    discoveredMap[6, 18] = "[M]";
                    discoveredMap[10, 4] = "[!]";
                    discoveredMap[10, 18] = "[L]";
                    discoveredMap[12, 0] = "[J]";
                    discoveredMap[12, 10] = "[T]";
                    discoveredMap[14, 10] = "[B]";
                    discoveredMap[16, 14] = "[H]";
                    discoveredMap[20, 8] = "[F]";
                    discoveredMap[2, 10] = "[ ]";
                    discoveredMap[2, 12] = "[ ]";
                    discoveredMap[2, 14] = "[ ]";
                    discoveredMap[4, 10] = "[ ]";
                    discoveredMap[4, 12] = "[ ]";
                    discoveredMap[4, 14] = "[ ]";
                    discoveredMap[6, 6] = "[ ]";
                    discoveredMap[6, 8] = "[ ]";
                    discoveredMap[6, 10] = "[ ]";
                    discoveredMap[6, 14] = "[ ]";
                    discoveredMap[6, 16] = "[ ]";
                    discoveredMap[8, 4] = "[ ]";
                    discoveredMap[8, 6] = "[ ]";
                    discoveredMap[8, 8] = "[ ]";
                    discoveredMap[8, 10] = "[ ]";
                    discoveredMap[8, 12] = "[ ]";
                    discoveredMap[8, 14] = "[ ]";
                    discoveredMap[8, 16] = "[ ]";
                    discoveredMap[10, 2] = "[ ]";
                    discoveredMap[10, 6] = "[ ]";
                    discoveredMap[10, 8] = "[ ]";
                    discoveredMap[10, 10] = "[ ]";
                    discoveredMap[10, 12] = "[ ]";
                    discoveredMap[10, 14] = "[ ]";
                    discoveredMap[10, 16] = "[ ]";
                    discoveredMap[12, 2] = "[ ]";
                    discoveredMap[12, 4] = "[ ]";
                    discoveredMap[12, 6] = "[ ]";
                    discoveredMap[12, 8] = "[ ]";
                    discoveredMap[12, 12] = "[ ]";
                    discoveredMap[12, 14] = "[ ]";
                    discoveredMap[12, 16] = "[ ]";
                    discoveredMap[12, 18] = "[ ]";
                    discoveredMap[14, 2] = "[ ]";
                    discoveredMap[14, 4] = "[ ]";
                    discoveredMap[14, 6] = "[ ]";
                    discoveredMap[14, 8] = "[ ]";
                    discoveredMap[14, 12] = "[ ]";
                    discoveredMap[14, 14] = "[ ]";
                    discoveredMap[16, 2] = "[ ]";
                    discoveredMap[16, 4] = "[ ]";
                    discoveredMap[16, 6] = "[ ]";
                    discoveredMap[16, 8] = "[ ]";
                    discoveredMap[16, 10] = "[ ]";
                    discoveredMap[16, 12] = "[ ]";
                    discoveredMap[18, 6] = "[ ]";
                    discoveredMap[18, 8] = "[ ]";
                    discoveredMap[18, 10] = "[ ]";
                    discoveredMap[18, 12] = "[ ]";
                    discoveredMap[20, 10] = "[ ]";
                    discoveredMap[1, 12] = " | ";
                    discoveredMap[1, 14] = " | ";
                    discoveredMap[3, 10] = " | ";
                    discoveredMap[5, 8] = " | ";
                    discoveredMap[5, 10] = " | ";
                    discoveredMap[5, 14] = " | ";
                    discoveredMap[7, 4] = " | ";
                    discoveredMap[7, 6] = " | ";
                    discoveredMap[7, 8] = " | ";
                    discoveredMap[7, 10] = " | ";
                    discoveredMap[7, 12] = " | ";
                    discoveredMap[7, 14] = " | ";
                    discoveredMap[9, 4] = " | ";
                    discoveredMap[9, 6] = " | ";
                    discoveredMap[9, 8] = " | ";
                    discoveredMap[9, 10] = " | ";
                    discoveredMap[9, 12] = " | ";
                    discoveredMap[9, 14] = " | ";
                    discoveredMap[9, 16] = " | ";
                    discoveredMap[11, 2] = " | ";
                    discoveredMap[11, 4] = " | ";
                    discoveredMap[11, 6] = " | ";
                    discoveredMap[11, 8] = " | ";
                    discoveredMap[11, 12] = " | ";
                    discoveredMap[11, 14] = " | ";
                    discoveredMap[13, 2] = " | ";
                    discoveredMap[13, 4] = " | ";
                    discoveredMap[13, 6] = " | ";
                    discoveredMap[13, 8] = " | ";
                    discoveredMap[13, 12] = " | ";
                    discoveredMap[13, 14] = " | ";
                    discoveredMap[15, 4] = " | ";
                    discoveredMap[15, 6] = " | ";
                    discoveredMap[15, 8] = " | ";
                    discoveredMap[15, 10] = " | ";
                    discoveredMap[15, 12] = " | ";
                    discoveredMap[17, 6] = " | ";
                    discoveredMap[17, 12] = " | ";
                    discoveredMap[19, 10] = " | ";
                    discoveredMap[12, 1] = "-";
                    discoveredMap[10, 3] = "-";
                    discoveredMap[12, 3] = "-";
                    discoveredMap[14, 3] = "-";
                    discoveredMap[16, 3] = "-";
                    discoveredMap[8, 5] = "-";
                    discoveredMap[10, 5] = "-";
                    discoveredMap[12, 5] = "-";
                    discoveredMap[14, 5] = "-";
                    discoveredMap[16, 5] = "-";
                    discoveredMap[6, 7] = "-";
                    discoveredMap[8, 7] = "-";
                    discoveredMap[10, 7] = "-";
                    discoveredMap[12, 7] = "-";
                    discoveredMap[14, 7] = "-";
                    discoveredMap[16, 7] = "-";
                    discoveredMap[18, 7] = "-";
                    discoveredMap[4, 9] = "-";
                    discoveredMap[6, 9] = "-";
                    discoveredMap[8, 9] = "-";
                    discoveredMap[10, 9] = "-";
                    discoveredMap[14, 9] = "-";
                    discoveredMap[16, 9] = "-";
                    discoveredMap[18, 9] = "-";
                    discoveredMap[20, 9] = "-";
                    discoveredMap[2, 11] = "-";
                    discoveredMap[4, 11] = "-";
                    discoveredMap[10, 11] = "-";
                    discoveredMap[12, 11] = "-";
                    discoveredMap[14, 11] = "-";
                    discoveredMap[16, 11] = "-";
                    discoveredMap[2, 13] = "-";
                    discoveredMap[4, 13] = "-";
                    discoveredMap[10, 13] = "-";
                    discoveredMap[12, 13] = "-";
                    discoveredMap[14, 13] = "-";
                    discoveredMap[16, 13] = "-";
                    discoveredMap[6, 15] = "-";
                    discoveredMap[8, 15] = "-";
                    discoveredMap[10, 15] = "-";
                    discoveredMap[12, 15] = "-";
                    discoveredMap[6, 17] = "-";
                    discoveredMap[10, 17] = "-";
                    discoveredMap[12, 17] = "-";
                    mapTown = true;
                    mapPeace = true;
                    mapSalamanca = true;
                    mapLiquor = true;
                    mapVacuum = true;
                    mapCartel = true;
                    mapMike = true;
                    mapFight = true;
                    mapLydia = true;
                    mapSaul = true;
                    mapBowl = true;
                    mapHermit = true;
                    mapFortress = true;
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Black sheep wall!");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }

                if (action == "i'm a knight!" && debugMode == true)
                {
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Ok, Heath, settle down.");
                    Console.WriteLine();
                    Thread.Sleep(1500);
                    Console.Write(".");
                    Thread.Sleep(500);
                    Console.Write(".");
                    Thread.Sleep(500);
                    Console.Write(".");
                    Thread.Sleep(1000);
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("All set! Sorry no horse and stick.");
                    Console.WriteLine();
                    Thread.Sleep(1500);
                    Console.Clear();
                    equippableWeapon.Add(realSword);
                    GetEquipped(ego, realSword);
                    equippableShield.Add(realShield);
                    GetStrapped(ego, realShield);
                    equippableArmor.Add(chainmail);
                    GetDressed(ego, chainmail);
                }  //endgame gear

                if (action == "razzle dazzle root beer" && debugMode == true)
                {
                    action = "complete";
                    undroppables.Add(sackOfCash);
                    undroppables.Add(giantBlueCrystal);
                    undroppables.Add(stevia);
                    undroppables.Add(janesKey);
                    undroppables.Add(largeBrassKey);
                    undroppables.Add(liquorKey);
                    undroppables.Add(mezcal);
                    undroppables.Add(jeweledRing);
                    undroppables.Add(sackOfGoodies);
                    undroppables.Add(minkCoat);
                    undroppables.Add(fredStash);
                    undroppables.Add(safe);
                    undroppables.Add(generator);
                    undroppables.Add(dungeonKey);
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("What is that some kind of advertisement? Because it worked! I want it and I will give you everything to have it!");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }//all undroppables

                if (action == "suck blue frogs" && debugMode == true)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("A mysterious voice bellows, \"What do you need?\"");
                    Console.WriteLine();
                    Console.WriteLine("Sack of Cash");
                    Console.WriteLine("Stevia");
                    Console.WriteLine("Giant Blue Crystal");
                    Console.WriteLine("Bedroom Key");
                    Console.WriteLine("Large Brass Key");
                    Console.WriteLine("Liquor Key");
                    Console.WriteLine("Bottle of Mezcal");
                    Console.WriteLine("Jeweled Ring");
                    Console.WriteLine("Skinny Pete's Sack of Goodies");
                    Console.WriteLine("Mink Coat");
                    Console.WriteLine("Stinky Cash");
                    Console.WriteLine("Safe Cash");
                    Console.WriteLine("Electric Generator");
                    Console.WriteLine("Heisenberg's Key");
                    Console.WriteLine();
                    Console.Write("> ");
                    action = Console.ReadLine();
                    action = action.ToLower();

                    Console.Clear();
                    if (action == "sack of cash")
                    {
                        action = "complete";
                        undroppables.Add(sackOfCash);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "stevia")
                    {
                        action = "complete";
                        undroppables.Add(stevia);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "giant blue crystal")
                    {
                        action = "complete";
                        undroppables.Add(giantBlueCrystal);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "bedroom key")
                    {
                        action = "complete";
                        undroppables.Add(janesKey);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "large brass key")
                    {
                        action = "complete";
                        undroppables.Add(largeBrassKey);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "liquor key")
                    {
                        action = "complete";
                        undroppables.Add(liquorKey);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "bottle of mezcal")
                    {
                        action = "complete";
                        undroppables.Add(mezcal);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "jeweled ring")
                    {
                        action = "complete";
                        undroppables.Add(jeweledRing);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "skinny pete's sack of goodies")
                    {
                        action = "complete";
                        undroppables.Add(sackOfGoodies);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "mink coat")
                    {
                        action = "complete";
                        undroppables.Add(minkCoat);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "stinky cash")
                    {
                        action = "complete";
                        undroppables.Add(fredStash);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "safe cash")
                    {
                        action = "complete";
                        undroppables.Add(safe);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "electric generator")
                    {
                        action = "complete";
                        undroppables.Add(generator);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (action == "electric generator")
                    {
                        action = "complete";
                        undroppables.Add(dungeonKey);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Poof!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else
                    {
                        action = "complete";
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("All right, Sparky, here's the deal: if you wanna get the little item you gotta be a straight shooter, do ya got it?");
                        Console.WriteLine();
                        Console.WriteLine("Type with a precision that shows you care!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                }//choose an undroppable

                if (action == "alt k" && debugMode == true)
                 {
                     Console.WriteLine();
                     Console.WriteLine();
                     Console.WriteLine("Change which stat/skill?");
                     Console.WriteLine();
                     Console.Write("> ");
                     string razzleDazzleRootBeer = Console.ReadLine();


                    for (int i = 0; i < stringList.Count; i++)
                    {
                        string inputCheck = stringList[i];
                        if (razzleDazzleRootBeer == inputCheck)
                        {
                            action = "complete";
                            stringFlags[0] = debugMoneyInput;
                            stringFlags[1] = fightClubAction;
                            stringFlags[2] = fightClubChoice;
                            stringFlags[3] = bowlingAction;
                            stringFlags[4] = purchaseItem;
                            stringFlags[5] = sellItem;
                            stringFlags[6] = sellItem2;
                            stringFlags[7] = usingItem;
                            stringFlags[8] = inspectingItem;
                            stringFlags[9] = salamancaAction;
                            stringFlags[10] = salamancaChoice;
                            stringFlags[11] = disappearChoice;

                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Enter value: ");
                            string suckBlueFrogs = Console.ReadLine();
                            stringFlags[i] = suckBlueFrogs;
                            Console.Write(".");
                            Thread.Sleep(250);
                            Console.Write(".");
                            Thread.Sleep(250);
                            Console.WriteLine(".");
                            Thread.Sleep(250);
                            Console.Write(".");
                            Thread.Sleep(250);
                            Console.Write(".");
                            Thread.Sleep(250);
                            Console.WriteLine(".");
                            Thread.Sleep(250);
                            Console.Write(".");
                            Thread.Sleep(250);
                            Console.Write(".");
                            Thread.Sleep(250);
                            Console.WriteLine(".");
                            Thread.Sleep(250);
                            Console.WriteLine();
                            Console.WriteLine($"{stringList[i]} = {stringFlags[i]}");
                            Console.WriteLine();
                            Console.WriteLine("State flag changed. May god have mercy on your soul.");
                            Console.WriteLine();
                            Console.WriteLine("Press ENTER not to crash the game");
                            Console.ReadLine();

                            debugMoneyInput = stringFlags[0];
                            fightClubAction = stringFlags[1];
                            fightClubChoice = stringFlags[2];
                            bowlingAction = stringFlags[3];
                            purchaseItem = stringFlags[4];
                            sellItem = stringFlags[5];
                            sellItem2 = stringFlags[6];
                            usingItem = stringFlags[7];
                            inspectingItem = stringFlags[8];
                            salamancaAction = stringFlags[9];
                            salamancaChoice = stringFlags[10];
                            disappearChoice = stringFlags[11];
                            break;
                        }
                    }

                    for (int i = 0; i < intList.Count; i++)
                    {
                        string inputCheck = intList[i];
                        if (razzleDazzleRootBeer == inputCheck)
                        {
                            action = "complete";
                            intFlags[0] = hermitAnger;
                            intFlags[1] = highestHermitAnger;
                            intFlags[2] = debugMoneyOutput;
                            intFlags[3] = inappropriateTouchingCounter;
                            intFlags[4] = fightClubMode;
                            intFlags[5] = bowlingSkill;
                            intFlags[6] = lastBowlingBet;
                            intFlags[7] = egoBowlingScore;
                            intFlags[8] = enemyBowlingScore;
                            intFlags[9] = bowlingPrizePackage;
                            intFlags[10] = salamancaStolenCrystals;
                            intFlags[11] = converseCount;
                            intFlags[12] = gusSenseMotiveCheck;
                            intFlags[13] = saulHermitBond;
                            intFlags[14] = konamiProgress;
                            intFlags[15] = stolenHeisenPotions;

                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Enter value: ");
                            string suckBlueFrogs = Console.ReadLine();
                            if (Int32.TryParse(suckBlueFrogs, out int newValue))
                            {
                                intFlags[i] = newValue;
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.WriteLine(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.WriteLine(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.WriteLine(".");
                                Thread.Sleep(250);
                                Console.WriteLine();
                                Console.WriteLine($"{intList[i]} = {intFlags[i]}");
                                Console.WriteLine();
                                Console.WriteLine("State flag changed. May god have mercy on your soul.");
                                Console.WriteLine();
                                Console.WriteLine("Press ENTER not to crash the game");
                                Console.ReadLine();

                                hermitAnger = intFlags[0];
                                highestHermitAnger = intFlags[1];
                                debugMoneyOutput = intFlags[2];
                                inappropriateTouchingCounter = intFlags[3];
                                fightClubMode = intFlags[4];
                                bowlingSkill = intFlags[5];
                                lastBowlingBet = intFlags[6];
                                egoBowlingScore = intFlags[7];
                                enemyBowlingScore = intFlags[8];
                                bowlingPrizePackage = intFlags[9];
                                salamancaStolenCrystals = intFlags[10];
                                converseCount = intFlags[11];
                                gusSenseMotiveCheck = intFlags[12];
                                saulHermitBond = intFlags[13];
                                konamiProgress = intFlags[14];
                                stolenHeisenPotions = intFlags[15];
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("WOAH! That's not a number! I certaintly just saved you from certain doom. Be more careful with what you typ!");
                                Console.WriteLine();
                                Console.WriteLine("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            break;
                        }
                    }

                    for (int i = 0; i < boolList.Count; i++)
                    {
                        string inputCheck = boolList[i];
                        if (razzleDazzleRootBeer == inputCheck)
                        {
                            action = "complete";
                            boolFlags[0] = debugMode;
                            boolFlags[1] = bowlAndSpoonLooted;
                            boolFlags[2] = listenedToTownVoices;
                            boolFlags[3] = unlockedListenTo;
                            boolFlags[4] = hasNotEnteredTown;
                            boolFlags[5] = hasLeftTown;
                            boolFlags[6] = searchedTree;
                            boolFlags[7] = galeQuestGiven;
                            boolFlags[8] = galeQuestCompleted;
                            boolFlags[9] = hermitVisited;
                            boolFlags[10] = lookedMeepEyes;
                            boolFlags[11] = searchedMeepMounds;
                            boolFlags[12] = talkedToMeepMounds;
                            boolFlags[13] = searchedMikeHouse;
                            boolFlags[14] = fuckedUpWithMike;
                            boolFlags[15] = searchedGraveyard;
                            boolFlags[16] = salamancaGuardDefeated;
                            boolFlags[17] = salamancaGuardSearched;
                            boolFlags[18] = salamancaCousinDefeated;
                            boolFlags[19] = salamancaDead;
                            boolFlags[20] = randomEncountersOn;
                            boolFlags[21] = lydiaQuestGiven;
                            boolFlags[22] = lydiaQuestCompleted;
                            boolFlags[23] = lootedCentaur;
                            boolFlags[24] = frontEntranceWarning;
                            boolFlags[25] = joinedFightClub;
                            boolFlags[26] = fightClubLoop;
                            boolFlags[27] = foughtInFightClub;
                            boolFlags[28] = theCreeperInTheDarkDefeated;
                            boolFlags[29] = puddleSearched;
                            boolFlags[30] = visitedBowlingAlley;
                            boolFlags[31] = bowlingLoop;
                            boolFlags[32] = talkedToPriest;
                            boolFlags[33] = noticedJane;
                            boolFlags[34] = janesProtectionActive;
                            boolFlags[35] = janesDoorOpened;
                            boolFlags[36] = signedLogBook;
                            boolFlags[37] = dryadLoop;
                            boolFlags[38] = peteLoop;
                            boolFlags[39] = buyLoop;
                            boolFlags[40] = sellLoop;
                            boolFlags[41] = inventoryLoop;
                            boolFlags[42] = salamancaLoop;
                            boolFlags[43] = salamancaBagLooted;
                            boolFlags[44] = newConverseAvailable;
                            boolFlags[45] = gusQuestGiven;
                            boolFlags[46] = gusQuestCompleted;
                            boolFlags[47] = gusLoop;
                            boolFlags[48] = losPollosHermanos;
                            boolFlags[49] = mikeQuestGiven;
                            boolFlags[50] = mikeQuestCompleted;
                            boolFlags[51] = peteQuestGiven;
                            boolFlags[52] = peteQuestCompleted;
                            boolFlags[53] = saulQuestGiven;
                            boolFlags[54] = saulQuestCompleted;
                            boolFlags[55] = studdedLeatherArmorLooted;
                            boolFlags[56] = knightSuitAvailable;
                            boolFlags[57] = mikeLoop;
                            boolFlags[58] = janeQuestGiven;
                            boolFlags[59] = janeQuestCompleted;
                            boolFlags[60] = janeLoop;
                            boolFlags[61] = freePotions;
                            boolFlags[62] = dudeOnAPogoStickDefeated;
                            boolFlags[63] = hidenGoseke;
                            boolFlags[64] = secretTunnelOpened;
                            boolFlags[65] = returnedRing;
                            boolFlags[66] = shopClosed;
                            boolFlags[67] = readLogbook;
                            boolFlags[68] = tookPeteCash;
                            boolFlags[69] = tookGusCash;
                            boolFlags[70] = tookSaulCash;
                            boolFlags[71] = tookHermitCash;
                            boolFlags[72] = tookLydiaCash;
                            boolFlags[73] = tookMikeCash;
                            boolFlags[74] = tookJaneCash;
                            boolFlags[75] = talkLoop;
                            boolFlags[76] = killedJesse;
                            boolFlags[77] = jesseDefeated;
                            boolFlags[78] = sparedJesse;
                            boolFlags[79] = searchedHeisenberg;
                            boolFlags[80] = narratorDefeated;
                            boolFlags[81] = searchedFortress;
                            boolFlags[82] = mapTown;
                            boolFlags[83] = mapPeace;
                            boolFlags[84] = mapSalamanca;
                            boolFlags[85] = mapLiquor;
                            boolFlags[86] = mapVacuum;
                            boolFlags[87] = mapCartel;
                            boolFlags[88] = mapMike;
                            boolFlags[89] = mapFight;
                            boolFlags[90] = mapLydia;
                            boolFlags[91] = mapSaul;
                            boolFlags[92] = mapBowl;
                            boolFlags[93] = mapHermit;
                            boolFlags[94] = mapFortress;

                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Enter value: ");
                            string suckBlueFrogs = Console.ReadLine();
                            if (bool.TryParse(suckBlueFrogs, out bool newValue))
                            {
                                boolFlags[i] = newValue;
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.WriteLine(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.WriteLine(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.Write(".");
                                Thread.Sleep(250);
                                Console.WriteLine(".");
                                Thread.Sleep(250);
                                Console.WriteLine();
                                Console.WriteLine($"{boolList[i]} = {boolFlags[i]}");
                                Console.WriteLine();
                                Console.WriteLine("State flag changed. May god have mercy on your soul.");
                                Console.WriteLine();
                                Console.WriteLine("Press ENTER not to crash the game");
                                Console.ReadLine();

                                debugMode = boolFlags[0];
                                bowlAndSpoonLooted = boolFlags[1];
                                listenedToTownVoices = boolFlags[2];
                                unlockedListenTo = boolFlags[3];
                                hasNotEnteredTown = boolFlags[4];
                                hasLeftTown = boolFlags[5];
                                searchedTree = boolFlags[6];
                                galeQuestGiven = boolFlags[7];
                                galeQuestCompleted = boolFlags[8];
                                hermitVisited = boolFlags[9];
                                lookedMeepEyes = boolFlags[10];
                                searchedMeepMounds = boolFlags[11];
                                talkedToMeepMounds = boolFlags[12];
                                searchedMikeHouse = boolFlags[13];
                                fuckedUpWithMike = boolFlags[14];
                                searchedGraveyard = boolFlags[15];
                                salamancaGuardDefeated = boolFlags[16];
                                salamancaGuardSearched = boolFlags[17];
                                salamancaCousinDefeated = boolFlags[18];
                                salamancaDead = boolFlags[19];
                                randomEncountersOn = boolFlags[20];
                                lydiaQuestGiven = boolFlags[21];
                                lydiaQuestCompleted = boolFlags[22];
                                lootedCentaur = boolFlags[23];
                                frontEntranceWarning = boolFlags[24];
                                joinedFightClub = boolFlags[25];
                                fightClubLoop = boolFlags[26];
                                foughtInFightClub = boolFlags[27];
                                theCreeperInTheDarkDefeated = boolFlags[28];
                                puddleSearched = boolFlags[29];
                                visitedBowlingAlley = boolFlags[30];
                                bowlingLoop = boolFlags[31];
                                talkedToPriest = boolFlags[32];
                                noticedJane = boolFlags[33];
                                janesProtectionActive = boolFlags[34];
                                janesDoorOpened = boolFlags[35];
                                signedLogBook = boolFlags[36];
                                dryadLoop = boolFlags[37];
                                peteLoop = boolFlags[38];
                                buyLoop = boolFlags[39];
                                sellLoop = boolFlags[40];
                                inventoryLoop = boolFlags[41];
                                salamancaLoop = boolFlags[42];
                                salamancaBagLooted = boolFlags[43];
                                newConverseAvailable = boolFlags[44];
                                gusQuestGiven = boolFlags[45];
                                gusQuestCompleted = boolFlags[46];
                                gusLoop = boolFlags[47];
                                losPollosHermanos = boolFlags[48];
                                mikeQuestGiven = boolFlags[49];
                                mikeQuestCompleted = boolFlags[50];
                                peteQuestGiven = boolFlags[51];
                                peteQuestCompleted = boolFlags[52];
                                saulQuestGiven = boolFlags[53];
                                saulQuestCompleted = boolFlags[54];
                                studdedLeatherArmorLooted = boolFlags[55];
                                knightSuitAvailable = boolFlags[56];
                                mikeLoop = boolFlags[57];
                                janeQuestGiven = boolFlags[58];
                                janeQuestCompleted = boolFlags[59];
                                janeLoop = boolFlags[60];
                                freePotions = boolFlags[61];
                                dudeOnAPogoStickDefeated = boolFlags[62];
                                hidenGoseke = boolFlags[63];
                                secretTunnelOpened = boolFlags[64];
                                returnedRing = boolFlags[65];
                                shopClosed = boolFlags[66];
                                readLogbook = boolFlags[67];
                                tookPeteCash = boolFlags[68];
                                tookGusCash = boolFlags[69];
                                tookSaulCash = boolFlags[70];
                                tookHermitCash = boolFlags[71];
                                tookLydiaCash = boolFlags[72];
                                tookMikeCash = boolFlags[73];
                                tookJaneCash = boolFlags[74];
                                talkLoop = boolFlags[75];
                                killedJesse = boolFlags[76];
                                jesseDefeated = boolFlags[77];
                                sparedJesse = boolFlags[78];
                                searchedHeisenberg = boolFlags[79];
                                narratorDefeated = boolFlags[80];
                                searchedFortress = boolFlags[81];
                                mapTown = boolFlags[82];
                                mapPeace = boolFlags[83];
                                mapSalamanca = boolFlags[84];
                                mapLiquor = boolFlags[85];
                                mapVacuum = boolFlags[86];
                                mapCartel = boolFlags[87];
                                mapMike = boolFlags[88];
                                mapFight = boolFlags[89];
                                mapLydia = boolFlags[90];
                                mapSaul = boolFlags[91];
                                mapBowl = boolFlags[92];
                                mapHermit = boolFlags[93];
                                mapFortress = boolFlags[94];
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("WOAH! That's not a boolean! I certaintly just saved you from certain doom. Be more careful with what you typ!");
                                Console.WriteLine();
                                Console.WriteLine("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            break;
                        }
                    }

                    if (action != "complete")
                    {
                        action = "complete";
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Obviously something has gone awry. Oft go the plans of mice and men.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }


                }//stat change **changing values so can screw things up

                if (action != "complete")
                {
                    action = "complete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("That didn't do anything useful.");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }

                if (ego.Location == "disappeared")
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Congratulations! You escaped the dungeon!");
                    Console.WriteLine();
                    Console.ReadLine();
                    break;
                }
            }

            if (ego.Location == "winner")
            {
                Console.Clear();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("\"He's here!\"");
                Console.WriteLine();
                Console.WriteLine("The inhabitants of the dungeon have all congregated at the exit and turn to you. They applaud and cheer.");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("When the applause comes down, Jimmy, standing at the head of the crowd, speaks. \"So you've finally made it! We all just wanted to properly thank you for getting us out of here.\"");
                Console.WriteLine();
                Console.WriteLine("\"Not only that, but, you know, you're still walking around with the key.\"");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("\"But I would be remiss if I did not point out that without your intervention - for my personal benefit or not - my relationship with my brother would still be in shambles.\"");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
                if (disappearChoice != "hermit mcgill")
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("After clearing his throat, a man mummified in space blankets begin to speak.");
                    Console.WriteLine();
                    if (highestHermitAnger == 0)
                    {
                        Console.WriteLine("\"Yes, well - the boy is a pure delight to speak with. The manners of a saint and the vision of a hawk, I'm sure.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("The hermit loosens the wrap on his head and peeks his eyes out.");
                        Console.WriteLine();
                        Console.WriteLine("\"The young man has even inspired me to acclimate myself to the light. I think I'll get into selling action figures of us and split the profits!\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("\"'Jesse's Dungeon: You know the name -- now own the toy!!'\"");
                        Console.WriteLine();
                    }
                    else if (highestHermitAnger < 3)
                    {
                        Console.WriteLine("\"Yes, well - the boy is a pure delight to speak with. The manners of a saint and the vision of a hawk, I'm sure.\"");
                        Console.WriteLine();
                    }
                    else if (highestHermitAnger < 7)
                    {
                        Console.WriteLine("\"Yes, well - the boy can be a bit of a handful at times, but certainly a young man worthy of praise. Well done.\"");
                        Console.WriteLine();
                    }
                    else
                    {
                        Console.WriteLine("\"Yes, well - while perhaps deserving of recognition for getting us out, he is a bit of a handful. Probably carries around a flashlight, too, I'll bet.\"");
                        Console.WriteLine();
                    }
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                Console.Clear();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("After another round of applause, Jimmy addresses the crowd.");
                Console.WriteLine();
                Console.WriteLine("\"Who else owes thanks to this Matchmaker of the Dungeon?\"");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
                if (disappearChoice != "badger")
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Badger hesitantly looks around and raises his hand.");
                    Console.WriteLine();
                    Console.WriteLine("\"Yeah, I mean, none of us even knew this guy at all, and he risked everything while we just sat on our butts. Even if he only did it with himself in mind I owe him big, you know? Thanks, bro!\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    if (disappearChoice != "skinny pete")
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Skinny Pete thrusts his hands in the air. \"Yeah! None of you guys really like to trade anymore, but this guy right here even brought me Jesse's celebratory Mezcal for when we were done in here! Seem appropriate for us to pass some around now!\"");
                        Console.WriteLine();
                        Console.WriteLine("He and Badger proceed to pass around some cups.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Skinny Pete holds up the mostly-full bottle with a smile, and shrugs.");
                        Console.WriteLine();
                        Console.WriteLine("\"Hey, well, I didn't really count on you succeeding and all... so I guess we'll just say I got a bit of a head start.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("\"And I'm not too sure where Skinny Pete got off to, but I know he was planning some celebratory toast or something.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("After another round of applause, Jimmy addresses the crowd.");
                    Console.WriteLine();
                    Console.WriteLine("\"Who else owes thanks to this Celebration of the Dungeon?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                else
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Skinny Pete raises a hand in the air. \"None of you guys really like to trade anymore, but this guy right here even brought me Jesse's celebratory Mezcal for when we were done in here! Seem appropriate for us to pass some around now!\"");
                    Console.WriteLine();
                    Console.WriteLine("He proceeds to pass around some cups.");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Skinny Pete looks left and right to the people adjacent to him.");
                    Console.WriteLine();
                    Console.WriteLine("\"Well I don't like exactly know where Badger got off to, but could you help pass these cups out?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("After another round of applause, Jimmy addresses the crowd.");
                    Console.WriteLine();
                    Console.WriteLine("\"Who else owes thanks to this Celebration of the Dungeon?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (disappearChoice != "lydia")
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Lydia hands off her cup of tea to a bystander.");
                    Console.WriteLine();
                    Console.WriteLine("\"This young man saved me from a most dire fate. I could barely muster the energy to lament my circumstances - not to mention do anything to solve them! Without him I would still be horribly backlogged, which would likely have then caused the collapse of our entire economic structure! First the value of the crystal would crash, and then war, plague, and FAMINE!\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Lydia retrieves her cup.");
                    Console.WriteLine();
                    Console.WriteLine("\"Just remember how important the little things can be.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Jimmy is motionless for a moment and then rolls his eyes.");
                    Console.WriteLine();
                    Console.WriteLine("\"Who else owes thanks to this Stevia Retriever of the Dungeon?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (disappearChoice != "narrator" && narratorDefeated)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("The gorgeous, shirtless man from the fight club steps forward.");
                    Console.WriteLine();
                    Console.WriteLine("\"This man can not only outwit and outmaneuver his enemies, but he is the strongest fighter I've ever seen. With brains and brawn, he is a force to be reckoned with.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("After another round of applause, Jimmy addresses the crowd.");
                    Console.WriteLine();
                    Console.WriteLine("\"Who else owes thanks to this Most Interesting Single-Serving Friend of the Dungeon?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (disappearChoice != "bowling guy" && bowlingSkill == 20)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("The glib bowling salesman speaks next.");
                    Console.WriteLine();
                    Console.WriteLine("\"A great man walks here. A great man who has contributed SO much money to his recreational prowess! He has procured my services through his own blood and sweat that he has bested all others in the sport of bowling!\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("\"I'll be able to open a franchise of alleys now!\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Jimmy squints his eyes and gives the man a half smile. \"Of course you realize those crystals no longer hold any value as currency... actually - you know what - we'll talk!\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("After another round of applause, Jimmy addresses the crowd.");
                    Console.WriteLine();
                    Console.WriteLine("\"Who else owes thanks to this Investor of the Dungeon?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (disappearChoice != "gus")
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Though making no apparent sound or movement, Gus ushers a hush over the crowd as everyone focuses on him.");
                    Console.WriteLine();
                    Console.WriteLine("\"This man was integral in the unification of our factions. Without his essential contributions, none of us would be getting out today.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    if (disappearChoice != "salamanca" && !salamancaDead)
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("\"He first destroyed the Salamanca dissidents --\"");
                        Thread.Sleep(1000);
                        Console.WriteLine();
                        Console.WriteLine("Salamanca interrupts and begins a (likely less than flattering) tirade in Spanish.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Gus pauses until it is finished, and then continues.");
                        Console.WriteLine();
                        Console.WriteLine("\"-- and then removed all other obstacles for a united front. We owe him a debt of gratitude - one I fully intend to repay.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("\"He first destroyed the Salamanca dissidents and then removed all other obstacles for a united front. We owe him a debt of gratitude - one I fully intend to repay.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("After another round of applause, Jimmy addresses the crowd.");
                    Console.WriteLine();
                    Console.WriteLine("\"Who else owes thanks to this Facilitator of the Dungeon?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (disappearChoice != "mike")
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("There is a short silence, and Jimmy looks at Mike.");
                    Console.WriteLine();
                    Console.WriteLine("\"Who ELSE owes thanks to this man?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    if (disappearChoice != "daniel")
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Mike remains unmoving with his arms crossed.");
                        Console.WriteLine();
                        Console.WriteLine("Next to him, the statue man speaks. \"Uh? Hey, well, I do suppose there is something. There was a bit of a cash flow problem and he did cleared that up. I'm sure I can speak for us both in giving our sincerest thanks.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Mike, keeping his arms folded in front of his chest, looks away to the side.");
                    Console.WriteLine();
                    Console.WriteLine("\"Hmph.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("After another round of applause, Jimmy addresses the crowd.");
                    Console.WriteLine();
                    Console.WriteLine("\"Who else owes thanks to this Unappreciated Man of the Dungeon?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                else
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("The statue man raises his hand and stutters.");
                    Console.WriteLine();
                    Console.WriteLine("\"Uh? Hey, well, I do suppose there is something. There was a bit of a cash flow problem and he did cleared that up. I'm unsure of where Mike has gone, but I think he'd be thankful.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("After another round of applause, Jimmy addresses the crowd.");
                    Console.WriteLine();
                    Console.WriteLine("\"Who else owes thanks to this Unappreciated Man of the Dungeon?\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (disappearChoice != "jane" && !killedJesse && searchedTree)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("The tree woman raises her branch and takes a step forward.");
                    Console.WriteLine();
                    Console.WriteLine("\"Despite my initial distrust of this stranger, he has proven to be what we all had needed.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    if (freePotions)
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("\"I trusted him with the secrets to Jesse's Fortress. In return I asked what little I could do to protect Jesse: a promise that he would leave him alive -- something anyone could easily break.\"");
                        Console.WriteLine();
                        Console.WriteLine("\"Despite the opportunity, he stayed true to his word. He is a man of integrity and honor.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (disappearChoice == "jesse")
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("\"I know not where Jesse ended up, but I do trust that he is alive and well somewhere.\"");
                        Console.WriteLine();
                        Console.WriteLine("\"He is out there waiting.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (disappearChoice == "heisenberg")
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Jesse clears his throat and steps forward next to her.");
                        Console.WriteLine();
                        Console.WriteLine("\"Yeah, man, he even is like more than I ever imagined. All I wanted was for this to end, and I only saw that happening with Heisenberg's death. I couldn't do it myself, so I sent him to do it for me; but he managed to free us while sparing my friend's life. He is a true hero.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Jesse turns and smiles at the tree woman and they both step back.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Jesse clears his throat and steps forward next to her.");
                        Console.WriteLine();
                        Console.WriteLine("\"Yeah, man. All I wanted was for this to end, and I only saw that happening with Heisenberg's death. I couldn't do it myself, so I sent him to do it for me; he is a hero -- to me, at least.\"");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Jesse turns and smiles at the tree woman and they both step back.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                }
                else
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("\"Oh, I'm wrong.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (disappearChoice != "saul")
                {
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Jimmy breaks into a largely exaggerated applause.");
                    Console.WriteLine();
                    Console.WriteLine("\"No matter if he came from the north or east, he did not disappoint in the least. Whether your problems were many or zero, he has proven to be our hero.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                else
                {
                    Console.Clear();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("The Runaway Five Theme suddenly begins to play.");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("As if from nowhere, the disappearing-service man appears from behind the crowd and throws a bag over Jimmy's head.");
                    Console.WriteLine();
                    Console.WriteLine("\"I waited for you to get the credit you were owed. Now finish up what you came here to do.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("The crowd parts, making a path for you to the door. Someone had the forethought of setting up a ladder for you, as well.");
                Console.WriteLine();
                Console.WriteLine("You climb the ladder and unlock the cage holding you all inside. The key turns, and you push the door open.");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
                talkLoop = true;
                while (talkLoop == true)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("After climbing out, would you like to:");
                    Console.WriteLine();
                    Console.WriteLine("[Help] everyone out until every last person has escaped");
                    Console.WriteLine("[Kick] out the ladder and shut the door");
                    Console.WriteLine();
                    Console.Write("> ");
                    action = Console.ReadLine();
                    action = action.ToLower();

                    if (action == "help")
                    {
                        action = "complete";
                        talkLoop = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You see to the escape of all your grateful friends. Gradually, everyone says their goodbyes and parts ways.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        if (disappearChoice != "jesse" && !killedJesse)
                        {
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("In thanks, Jesse bequeaths the dungeon to you to use as you see fit. He suggests the installation of an entrance ramp and a thorough cleaning.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Congratulations! You've successfully completed \"Jesse's Dungeon.\" Your final score was 100 of 100 possible Puzzle Points.");
                        Console.WriteLine();
                        Console.WriteLine("Now play again with the other character types; many puzzles are different, or have alternate solutions.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Just kidding sorry there is no unlockable feature or second quest or anything. Probably a whole bunch of jokes and references you didn't see, though!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("See you next time!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to gracefully end the program");
                        Console.ReadLine();
                    }
                    else if (action == "kick")
                    {
                        action = "complete";
                        talkLoop = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Dick.");
                        Thread.Sleep(1500);
                    }
                    else
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("That didn't do anything useful.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                }
            }
        }

        static void GetMap(string[,] discoveredMap)
        {
            for (int i = 0; i <= 20; i++)
            {
                Console.WriteLine(
                    discoveredMap[i, 0] + 
                    discoveredMap[i, 1] + 
                    discoveredMap[i, 2] +
                    discoveredMap[i, 3] +
                    discoveredMap[i, 4] +
                    discoveredMap[i, 5] +
                    discoveredMap[i, 6] +
                    discoveredMap[i, 7] +
                    discoveredMap[i, 8] +
                    discoveredMap[i, 9] +
                    discoveredMap[i, 10] +
                    discoveredMap[i, 11] +
                    discoveredMap[i, 12] +
                    discoveredMap[i, 13] +
                    discoveredMap[i, 14] +
                    discoveredMap[i, 15] +
                    discoveredMap[i, 16] +
                    discoveredMap[i, 17] +
                    discoveredMap[i, 18]);
            }

            
        }

        static void GetDressed(Stats ego, Armor newArmor)
        {
            if (ego.EquippedArmor.Name != newArmor.Name )
            {
                ego.DamageReduction = ego.DamageReduction - ego.EquippedArmor.DamageReduction + newArmor.DamageReduction;
                ego.CritResist = ego.CritResist - ego.EquippedArmor.CritResist + newArmor.CritResist;
                Console.WriteLine();
                Console.WriteLine();
                ego.EquippedArmor = newArmor;
                Console.WriteLine("You equip the " + newArmor.Name + ".");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();

            }
            else
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("You're already wearing " + newArmor.Name + ", silly.");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }
        }

        static void GetEquipped(Stats ego, Weapon newWeapon)
        {
            Shield nullShield = new Shield("Forearm", 0, 1.00, true, 0, "'Tis nothing but spun sugar and bootblack.");

            if (ego.EquippedWeapon.Name != newWeapon.Name)
            {
                if (ego.EquippedWeapon.Name == "Fireman's Axe")
                {
                    ego.DamageDie = ego.DamageDie - 2;
                    ego.ArmorClass = ego.ArmorClass + 2;
                }
                ego.ToHitMod = ego.ToHitMod - ego.EquippedWeapon.ToHitMod + newWeapon.ToHitMod;
                ego.Damage = ego.Damage - ego.EquippedWeapon.Damage + newWeapon.Damage;
                ego.CritMultiplier = ego.CritMultiplier - ego.EquippedWeapon.CritMultiplier + newWeapon.CritMultiplier;
                Console.WriteLine();
                Console.WriteLine();
                ego.EquippedWeapon = newWeapon;
                Console.WriteLine("You equip the " + newWeapon.Name + ".");
                Console.WriteLine();
                if (newWeapon.Name == "Fireman's Axe")
                {
                    ego.DamageDie = ego.DamageDie + 2;
                    ego.ArmorClass = ego.ArmorClass - 2;
                }
                if (newWeapon.OneHanded == false && ego.EquippedShield.Name != "Forearm")
                {                   
                    Console.WriteLine($"But you cannot use your {ego.EquippedShield.Name} at the same time. You remove it.");
                    Console.WriteLine();
                    GetStripped(ego, ego.EquippedArmor, ego.EquippedWeapon, nullShield);
                }
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }
            else
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("You're already using the " + newWeapon.Name + ", silly.");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }
        }

        static void GetStrapped(Stats ego, Shield newShield)
        {
            if (ego.EquippedShield.Name != newShield.Name)
            {
                if (ego.EquippedWeapon.OneHanded == false)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine($"You can't use the {newShield.Name} while holding the {ego.EquippedWeapon.Name}.");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                else
                {
                    ego.ArmorClass = ego.ArmorClass - ego.EquippedShield.ArmorClass + newShield.ArmorClass;
                    ego.CritResist = ego.CritResist - ego.EquippedShield.CritResist + newShield.CritResist;
                    Console.WriteLine();
                    Console.WriteLine();
                    ego.EquippedShield = newShield;
                    Console.WriteLine("You equip the " + newShield.Name + ".");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
            }
            else
            {
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("You're already wearing the " + newShield.Name + ", silly.");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }
        }

        static void GetStripped(Stats ego, Armor newArmor, Weapon newWeapon, Shield newShield)
        {
            if (ego.EquippedWeapon.Name == "Fireman's Axe")
            {
                ego.DamageDie = ego.DamageDie - 2;
                ego.ArmorClass = ego.ArmorClass + 2;
            }
            ego.DamageReduction = ego.DamageReduction - ego.EquippedArmor.DamageReduction + newArmor.DamageReduction;
            ego.CritResist = ego.CritResist + ego.EquippedArmor.CritResist - newArmor.CritResist;
            ego.EquippedArmor = newArmor;
            ego.ToHitMod = ego.ToHitMod - ego.EquippedWeapon.ToHitMod + newWeapon.ToHitMod;
            ego.Damage = ego.Damage - ego.EquippedWeapon.Damage + newWeapon.Damage;
            ego.CritMultiplier = ego.CritMultiplier - ego.EquippedWeapon.CritMultiplier + newWeapon.CritMultiplier;
            ego.EquippedWeapon = newWeapon;
            ego.ArmorClass = ego.ArmorClass - ego.EquippedShield.ArmorClass + newShield.ArmorClass;
            ego.CritResist = ego.CritResist + ego.EquippedShield.CritResist - newShield.CritResist;
            ego.EquippedShield = newShield;
        }

        static void GetDrunk(List<Potion> potionBelt, Stats ego, Potion potion)
        {
            potionBelt.Remove(potion);
            Console.WriteLine();
            Console.WriteLine();
            if (ego.CurrentHitPoints <= (ego.MaxHitPoints - potion.Potency))
            {
                ego.CurrentHitPoints = ego.CurrentHitPoints + potion.Potency;
                Console.WriteLine("You drink the " + potion.Name + ". You regain " + potion.Potency + " HP!");
            }
            else
            {
                ego.CurrentHitPoints = ego.MaxHitPoints;
                Console.WriteLine("You drink the " + potion.Name + ". Your HP are maxed out!");
            }
            Console.WriteLine();
            Console.Write("Press ENTER to continue");
            Console.ReadLine();
        }

        static void FightClubBattleGenerator(int mode, Stats ego, List<Potion> potionBelt, List<Armor> equippableArmor, List<Weapon> equippableWeapon, List<Shield> equippableShield, bool theCreeperInTheDarkDefeated, bool salamancaGuardDefeated, bool salamancaCousinDefeated, bool dudeOnAPogoStickDefeated, bool jesseDefeated, List<Item> undroppables)
        {
            Random die = new Random();

            Weapon noWeapon = new Weapon(null, 0, 0, 0, true, false, 0, "'Tis nothing but spun sugar and bootblack.");
            Armor noArmor = new Armor(null, 0, 0, false, 0, "'Tis nothing but spun sugar and bootblack.");
            Potion lightHealingPotion = new Potion("Light Healing Potion", 10, "This potion will recover 10 HP.");
            Potion healingPotion = new Potion("Healing Potion", 20, "This potion will recover 20 HP.");
            Potion greaterHealingPotion = new Potion("Greater Healing Potion", 50, "This potion will recover 50 HP.");
            Weapon pointyStick = new Weapon("Pointy Stick", 4, 2, 0, true, false, 10, "Brilliant use of \"force over surface area\" wouldn't you say?");
            Weapon huntingKnife = new Weapon("Hunting Knife", 4, 3, 0, true, false, 50, "THAT'S a knife.");
            Weapon pogoStick = new Weapon("Pogo Stick", 4, 2, 0, false, false, 700, "Wielding this contraption like a lance/bazooka, each successful hit leads to an additional attack -- albeit at a -5 penalty.");
            Armor leatherArmor = new Armor("Leather Armor", 1, 0.85, false, 70, "Provides a bit of protection, but still no match for a good stabbing.");
            Item dungeonKey = new Item("Heisenberg's Key", "A key found in the Fortress that (hopefully) will free you and everyone else.");

            BadGuyStats badGuy = new BadGuyStats(null, 0, 0, 0, 0.00, 0, 0, 0.00, 0, 0, lightHealingPotion, noWeapon, noArmor, null);

            int badGuyHandicap = 0;

            if (mode == 1)
            {
                if (ego.FightClubRank >= 20)
                {
                    badGuy = badGuy.RewriteBadGuy("Narrator", 300, 300, 5, 1.00, 10, 10, 2.50, 0, 1, greaterHealingPotion, noWeapon, noArmor, "Everyone falls silent and backs away.");
                    badGuyHandicap = ego.FightClubRank - 20;
                }
                else if (undroppables.Contains(dungeonKey) && ego.FightClubRank >= 18)
                {
                    badGuy = badGuy.RewriteBadGuy("Heisenberg", 150, 150, 3, 0.75, 8, 4, 2.00, 5000, 2, greaterHealingPotion, noWeapon, noArmor, "The crowd suddenly hushes and begins to part, revealing Heisenberg standing in the back. He folds his hands in front of himself and says, \"I am the one who knocks.\"");
                    badGuyHandicap = ego.FightClubRank - 18;
                }
                else if (jesseDefeated == true && ego.FightClubRank >= 15)
                {
                    badGuy = badGuy.RewriteBadGuy("Jesse", 150, 150, 4, 0.85, 8, 3, 3.00, 500, 2, healingPotion, noWeapon, noArmor, "Jesse steps forward from the back of the crowd and brandishes an axe menacingly!");
                    badGuyHandicap = ego.FightClubRank - 15;
                }
                else if (dudeOnAPogoStickDefeated == true && ego.FightClubRank >= 12)
                {
                    badGuy = badGuy.RewriteBadGuy("Dude on a Pogo Stick", 150, 150, 5, 0.80, 8, 6, 3.00, die.Next(30, 51), 1, healingPotion, pogoStick, leatherArmor, "A Dude on a Pogo Stick bounces through the crowd and bounces at you furiously!");
                    badGuyHandicap = ego.FightClubRank - 12;
                }
                else if (salamancaCousinDefeated == true && ego.FightClubRank >= 8)
                {
                    badGuy = badGuy.RewriteBadGuy("Salamanca Cousin", 100, 100, 2, 0.85, 8, 4, 3.00, die.Next(30, 51), 1, healingPotion, huntingKnife, leatherArmor, "A Salamanca Cousin steps out of the crowd, and comes at you with a knife!");
                    badGuyHandicap = ego.FightClubRank - 8;
                }
                else if (salamancaGuardDefeated == true && ego.FightClubRank >= 5)
                {
                    badGuy = badGuy.RewriteBadGuy("Salamanca Guard", 50, 50, 2, 0.85, 8, 4, 3.00, die.Next(10, 26), 1, lightHealingPotion, huntingKnife, leatherArmor, "A Salamanca Guard steps out of the crowd, and comes at you with a knife!");
                    badGuyHandicap = ego.FightClubRank -5;
                }
                //insert more badguys with else if in order from hard to easy
                else if (theCreeperInTheDarkDefeated == true && ego.FightClubRank >= 1)
                {
                    badGuy = badGuy.RewriteBadGuy("The Creeper in the Dark", 20, 20, 0, 0.95, 6, 2, 2.00, die.Next(11), 0, lightHealingPotion, pointyStick, noArmor, "From the back of the crowd emerges a creeper in the dark. He begins closing in with a weapon pointed at you.");
                    badGuyHandicap = ego.FightClubRank - 1;
                }
                else if (ego.FightClubRank == 0)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("\"Hmm. Your rank isn\'t too hot. This small, sickly child will do nicely.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    badGuy = badGuy.RewriteBadGuy("A small, sickly child", 2, 2, 0, 1.5, 2, 0, 0.90, 1, 0, lightHealingPotion, noWeapon, noArmor, "Well your rank isn't too hot. This small, sickly child will do nicely.");
                }
                else
                {
                    if (ego.FightClubRank > 1) { ego.FightClubRank--; }
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("\"You've never fought anyone before, have you? This small, sickly child will do nicely.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    badGuy = badGuy.RewriteBadGuy("A small, sickly child", 2, 2, 0, 1.5, 2, 0, 0.90, 1, 0, lightHealingPotion, noWeapon, noArmor, "Well your rank isn't too hot. This small, sickly child will do nicely.");
                }

                if (badGuyHandicap > 5)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints * (int)1.5, badGuy.CurrentHitPoints * (int)1.5, badGuy.ArmorClass + 2, badGuy.CritResist - 0.10, badGuy.DamageDie + 2, badGuy.Damage + 2, badGuy.CritMultiplier + 1, badGuy.BlueCrystals * 2, badGuy.PotionCount + 2, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks TOUGH!");
                }
                if (badGuyHandicap == 5)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints * (int)1.5, badGuy.CurrentHitPoints * (int)1.5, badGuy.ArmorClass + 2, badGuy.CritResist, badGuy.DamageDie + 2, badGuy.Damage + 2, badGuy.CritMultiplier, badGuy.BlueCrystals * 2, badGuy.PotionCount + 2, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks rather tough!");
                }
                if (badGuyHandicap == 4)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints * (int)1.5, badGuy.CurrentHitPoints * (int)1.5, badGuy.ArmorClass, badGuy.CritResist, badGuy.DamageDie, badGuy.Damage, badGuy.CritMultiplier, badGuy.BlueCrystals * 2, badGuy.PotionCount, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks pretty tough!");
                }
                if (badGuyHandicap == 3)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints, badGuy.CurrentHitPoints, badGuy.ArmorClass + 1, badGuy.CritResist - 0.05, badGuy.DamageDie + 2, badGuy.Damage + 1, badGuy.CritMultiplier, badGuy.BlueCrystals * (int)1.5, badGuy.PotionCount + 1, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks kinda tough.");
                }
                if (badGuyHandicap == 2)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints, badGuy.CurrentHitPoints, badGuy.ArmorClass + 1, badGuy.CritResist, badGuy.DamageDie, badGuy.Damage + 1, badGuy.CritMultiplier, badGuy.BlueCrystals * (int)1.25, badGuy.PotionCount + 1, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks a bit rough.");
                }
                if (badGuyHandicap == 1)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints, badGuy.CurrentHitPoints, badGuy.ArmorClass, badGuy.CritResist, badGuy.DamageDie, badGuy.Damage, badGuy.CritMultiplier, badGuy.BlueCrystals, badGuy.PotionCount + 1, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he... well he's got an extra potion! Punk!");
                }
            }
            if (mode == 2)
            {
                ego.FightClubRank = ego.FightClubRank / 2;
                if (ego.FightClubRank >= 20)
                {
                    badGuy = badGuy.RewriteBadGuy("Narrator", 300, 300, 5, 1.00, 10, 10, 2.50, 0, 1, greaterHealingPotion, noWeapon, noArmor, "Everyone falls silent and backs away.");
                    badGuyHandicap = ego.FightClubRank - 20;
                }
                else if (undroppables.Contains(dungeonKey) && ego.FightClubRank >= 18)
                {
                    badGuy = badGuy.RewriteBadGuy("Heisenberg", 200, 200, 3, 0.75, 8, 4, 2.00, 5000, 2, greaterHealingPotion, noWeapon, noArmor, "The crowd suddenly hushes and begins to part, revealing Heisenberg standing in the back. He folds his hands in front of himself and says, \"I am the one who knocks.\"");
                    badGuyHandicap = ego.FightClubRank - 18;
                }
                else if (jesseDefeated == true && ego.FightClubRank >= 15)
                {
                    badGuy = badGuy.RewriteBadGuy("Jesse", 150, 150, 4, 0.85, 8, 3, 3.00, 500, 3, healingPotion, noWeapon, noArmor, "Jesse steps forward from the back of the crowd and brandishes an axe menacingly!");
                    badGuyHandicap = ego.FightClubRank - 15;
                }
                else if (dudeOnAPogoStickDefeated == true && ego.FightClubRank >= 12)
                {
                    badGuy = badGuy.RewriteBadGuy("Dude on a Pogo Stick", 150, 150, 5, 0.80, 8, 6, 3.00, die.Next(30, 51), 2, greaterHealingPotion, pogoStick, leatherArmor, "A Dude on a Pogo Stick bounces through the crowd and bounces at you furiously!");
                    badGuyHandicap = ego.FightClubRank - 12;
                }
                else if (salamancaCousinDefeated == true && ego.FightClubRank >= 8)
                {
                    badGuy = badGuy.RewriteBadGuy("Salamanca Cousin", 100, 100, 2, 0.85, 8, 4, 3.00, die.Next(30, 51), 2, greaterHealingPotion, huntingKnife, leatherArmor, "A Salamanca Cousin steps out of the crowd, and comes at you with a knife!");
                    badGuyHandicap = ego.FightClubRank - 8;
                }
                else if (salamancaGuardDefeated == true && ego.FightClubRank >= 5)
                {
                    badGuy = badGuy.RewriteBadGuy("Salamanca Guard", 50, 50, 2, 0.85, 8, 4, 3.00, die.Next(10, 26), 2, healingPotion, huntingKnife, leatherArmor, "Two Salamanca Guards step out of the crowd, and come at you with knifes!");
                    badGuyHandicap = ego.FightClubRank - 5;
                }
                //insert more badguys with else if
                else if (theCreeperInTheDarkDefeated == true && ego.FightClubRank >= 1)
                {
                    badGuy = badGuy.RewriteBadGuy("The Creeper in the Dark", 20, 20, 0, 0.95, 6, 2, 2.00, die.Next(11), 1, lightHealingPotion, pointyStick, noArmor, "From the back of the crowd emerges two creepers in the dark. They begin closing in with weapons pointed at you.");
                    badGuyHandicap = ego.FightClubRank - 1;
                }
                else if (ego.FightClubRank == 0)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("\"Hmm. Your rank isn\'t too hot. This small, sickly child will do nicely.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    badGuy = badGuy.RewriteBadGuy("A small, sickly child", 2, 2, 0, 1.5, 2, 0, 0.90, 1, 0, lightHealingPotion, noWeapon, noArmor, "Well your rank isn't too hot. These small, sickly children will do nicely.");
                }
                else
                {
                    if (ego.FightClubRank > 1) { ego.FightClubRank--; }
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("\"You've never fought anyone before, have you? This small, sickly child will do nicely.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    badGuy = badGuy.RewriteBadGuy("A small, sickly child", 2, 2, 0, 1.5, 2, 0, 0.90, 1, 0, lightHealingPotion, noWeapon, noArmor, "Well your rank isn't too hot. This small, sickly child will do nicely.");
                }

                if (badGuyHandicap > 5)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints * (int)1.5, badGuy.CurrentHitPoints * (int)1.5, badGuy.ArmorClass + 2, badGuy.CritResist - 0.10, badGuy.DamageDie + 2, badGuy.Damage + 2, badGuy.CritMultiplier + 1, badGuy.BlueCrystals * 2, badGuy.PotionCount + 2, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks TOUGH!");
                }
                if (badGuyHandicap == 5)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints * (int)1.5, badGuy.CurrentHitPoints * (int)1.5, badGuy.ArmorClass + 2, badGuy.CritResist, badGuy.DamageDie + 2, badGuy.Damage + 2, badGuy.CritMultiplier, badGuy.BlueCrystals * 2, badGuy.PotionCount + 2, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks rather tough!");
                }
                if (badGuyHandicap == 4)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints * (int)1.5, badGuy.CurrentHitPoints * (int)1.5, badGuy.ArmorClass, badGuy.CritResist, badGuy.DamageDie, badGuy.Damage, badGuy.CritMultiplier, badGuy.BlueCrystals * 2, badGuy.PotionCount, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks pretty tough!");
                }
                if (badGuyHandicap == 3)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints, badGuy.CurrentHitPoints, badGuy.ArmorClass + 1, badGuy.CritResist - 0.05, badGuy.DamageDie + 2, badGuy.Damage + 1, badGuy.CritMultiplier, badGuy.BlueCrystals * (int)1.5, badGuy.PotionCount + 1, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks kinda tough.");
                }
                if (badGuyHandicap == 2)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints, badGuy.CurrentHitPoints, badGuy.ArmorClass + 1, badGuy.CritResist, badGuy.DamageDie, badGuy.Damage + 1, badGuy.CritMultiplier, badGuy.BlueCrystals * (int)1.25, badGuy.PotionCount + 1, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he looks a bit rough.");
                }
                if (badGuyHandicap == 1)
                {
                    badGuy = badGuy.RewriteBadGuy(badGuy.Name, badGuy.MaxHitPoints, badGuy.CurrentHitPoints, badGuy.ArmorClass, badGuy.CritResist, badGuy.DamageDie, badGuy.Damage, badGuy.CritMultiplier, badGuy.BlueCrystals, badGuy.PotionCount + 1, badGuy.PotionType, badGuy.Weapon, badGuy.Armor, badGuy.BattleIntro + " And he... well he's got an extra potion! Punk!");
                }
            }
            if (mode == 3)
            {
                if (ego.FightClubRank == 0)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("\"Hmm. Your rank isn\'t too hot. This small, sickly child will do nicely.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    badGuy = badGuy.RewriteBadGuy("A small, sickly child", 2, 2, 0, 1.5, 2, 0, 0.90, 1, 0, lightHealingPotion, noWeapon, noArmor, "Well your rank isn't too hot. These small, sickly children will do nicely.");
                }
                else if (ego.FightClubRank == 1 && theCreeperInTheDarkDefeated == true)
                {
                    badGuy = badGuy.RewriteBadGuy("The Creeper in the Dark", 20, 20, 0, 0.95, 6, 2, 2.00, die.Next(11), 1, lightHealingPotion, pointyStick, noArmor, "SO MANY - wait there's just one. A creeper in the Dark emerges and engages.");
                }
                else if (ego.FightClubRank > 1 && theCreeperInTheDarkDefeated == true)
                {
                    badGuy = badGuy.RewriteBadGuy("The Creeper in the Dark", 20, 20, 0, 0.95, 6, 2, 2.00, die.Next(11), 1, lightHealingPotion, pointyStick, noArmor, "From somewhere - somehow - many creepers in the dark emerge. They begin closing in with weapons pointed at you. One engages, and the rest throw air punches and kicks menacingly!");
                }
                else
                {
                    if (ego.FightClubRank > 1) { ego.FightClubRank--; }
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("\"You've never fought anyone before, have you? This small, sickly child will do nicely.\"");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    badGuy = badGuy.RewriteBadGuy("A small, sickly child", 2, 2, 0, 1.5, 2, 0, 0.90, 1, 0, lightHealingPotion, noWeapon, noArmor, "Well your rank isn't too hot. This small, sickly child will do nicely.");
                }
                mode = ego.FightClubRank;
            }
            FightClubBattle(ego, badGuy, potionBelt, mode, equippableArmor, equippableWeapon, equippableShield);
            if (ego.JanesProtectionActive == true)
            {
                ego.JanesProtectionActive = false;
                ego.ArmorClass--;
            }
            if (ego.CurrentHitPoints <= 0)
            {
                Console.Clear();
                if (ego.FightClubRank > 0) { ego.FightClubRank--; }
                ego.BlueCrystals = 0;
                ego.CurrentHitPoints = 1;
                Thread.Sleep(2000);
                Console.WriteLine("You awaken on the cold floor. Your eyes open to a set of gorgeously sculpted abs leaning over you.");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("\"Well, he sure did you in, bud. Don't be ashamed -- this is why we're here. We all win and we all lose.\"");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("\"I see the look of a tiger in your eye. I understand, but you're in no shape to fight. Just come back another time.\"");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }
            else if (badGuy.CurrentHitPoints <= 0)
            {
                ego.FightClubRank++;
                ego.LastDefeated = badGuy.Name;
                Console.Clear();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("You won!");
                Console.WriteLine();
                Console.WriteLine("Press ENTER to continue");
                Console.WriteLine();
                Console.WriteLine();
                if (badGuy.BlueCrystals == 1)
                {
                    Console.WriteLine("You search the pockets... but only find a single measly blue crystal; what a way to make a living!");
                }
                else if (badGuy.BlueCrystals != 1)
                {
                    Console.WriteLine("You search the pockets and find " + badGuy.BlueCrystals + " blue crystals, which you take.");
                }
                ego.BlueCrystals = ego.BlueCrystals + badGuy.BlueCrystals;
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("Press ENTER to continue");
                Console.ReadLine();
                Console.Clear();
            }
            else if (mode == 4)
            {
                Console.Clear();
                if (ego.FightClubRank > 0) { ego.FightClubRank--; }
                ego.BlueCrystals = ego.BlueCrystals / 2;
                Thread.Sleep(2000);
                Console.WriteLine("You hand over half your blue crystals to your victor\'s waiting hand.");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("\"No shame, bud; better part of valor, and all that. Use what you got left to buy some potions then earn that cash back.\"");
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }


            static void FightClubBattle(Stats ego, BadGuyStats badGuy, List<Potion> potionBelt, int mode, List<Armor> equippableArmor, List<Weapon> equippableWeapon, List<Shield> equippableShield)
            {
                Random die = new Random();
                bool battleLoop = true;
                bool fightingDefensively = false;
                bool fullDefense = false;
                string battleAction;
                bool inventoryLoop;
                int attackRoll = 1;
                int rolledDamage = 0;
                double enemyHPPercent = 1.00;
                int numberOfBaddies = mode;
                bool pantsOff = false;
                int randomAttack = 1;
                int randomDamage = 1;
                TextInfo myTI = new CultureInfo("en-US", false).TextInfo;

                while (battleLoop == true)
                {
                    Console.Clear();
                    if (fullDefense == true)
                    {
                        ego.ArmorClass = ego.ArmorClass - 5;
                        fullDefense = false;
                    }
                    string enemyHealth = GetEnemyHealth(badGuy.MaxHitPoints, badGuy.CurrentHitPoints);
                    Console.WriteLine("Your Hit Points: " + ego.CurrentHitPoints + " / " + ego.MaxHitPoints);
                    Console.WriteLine(badGuy.Name + "'s Status: " + enemyHealth);
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("What will you do?");
                    Console.WriteLine("-------------------");
                    Console.WriteLine("Inventory");
                    Console.WriteLine("Attack");
                    Console.WriteLine("Defend");
                    if (fightingDefensively == false) { Console.WriteLine("Fight defensively"); }
                    if (fightingDefensively == true) { Console.WriteLine("Fight normally"); }
                    Console.WriteLine("Tap out");
                    Console.WriteLine();
                    Console.WriteLine();

                    Console.Write("Your action: ");
                    battleAction = Console.ReadLine();
                    battleAction = battleAction.ToLower();

                    if (battleAction == "inventory")
                    {
                        inventoryLoop = true;
                        while (inventoryLoop == true)
                        {
                            Console.WriteLine();
                            Console.WriteLine("____________________________________________________");
                            Console.WriteLine();
                            Console.WriteLine("Equipment:");
                            Console.WriteLine("Weapon: " + ego.EquippedWeapon.Name);
                            Console.WriteLine("Armor: " + ego.EquippedArmor.Name);
                            if (ego.EquippedShield.Name != "Forearm") { Console.WriteLine("Shield: " + ego.EquippedShield.Name); }
                            else { Console.WriteLine("Shield: None"); }
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Inventory:");
                            Console.WriteLine();
                            foreach (Armor armor in equippableArmor)
                            {
                                Console.WriteLine(armor.Name);
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                if (weapon.Name == "Unarmed") { }
                                else { Console.WriteLine(weapon.Name); }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                if (shield.Name == "Forearm") { }
                                else { Console.WriteLine(shield.Name); }
                            }
                            foreach (Potion potion in potionBelt)
                            {
                                Console.WriteLine(potion.Name);
                            }
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Use");
                            Console.WriteLine("Inspect");
                            Console.WriteLine("Equip");
                            Console.WriteLine();
                            Console.WriteLine("Return");
                            Console.WriteLine();
                            Console.Write("> ");
                            battleAction = Console.ReadLine();
                            battleAction = battleAction.ToLower();
                            battleAction = myTI.ToTitleCase(battleAction);

                            if (battleAction == "Return")
                            {
                                battleAction = "incomplete";
                                inventoryLoop = false;
                            }
                            else if (battleAction.StartsWith("Use "))
                            {
                                string usedItem = battleAction.Remove(battleAction.IndexOf("Use "), 4);
                                foreach (Armor armor in equippableArmor)
                                {
                                    string bagCheck = armor.Name;
                                    if (usedItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Nothing happens.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Weapon weapon in equippableWeapon)
                                {
                                    string bagCheck = weapon.Name;
                                    if (usedItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Nothing happens.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Shield shield in equippableShield)
                                {
                                    string bagCheck = shield.Name;
                                    if (usedItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Nothing happens.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Potion potion in potionBelt)
                                {
                                    string bagCheck = potion.Name;
                                    if (usedItem == bagCheck)
                                    {
                                        battleAction = "complete";
                                        potionBelt.Remove(potion);
                                        GetGoodGuyDrunk(ego, potion);
                                        break;
                                    }
                                }

                                if (battleAction != "complete" && battleAction != "incomplete")
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Let's get one thing straight, OK? You don't have that, it's not usable here, or you just plain typed something that didn't make sense.");
                                    Console.WriteLine("Whichever the case -- stop trying to use it. You're looking silly in front of the bad guy.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            else if (battleAction == "Use")
                            {
                                battleAction = "incomplete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Use? Use WHAT?!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (battleAction == "Equip")
                            {
                                battleAction = "incomplete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Oops! You equipped something that we weren't expecting. Whatever it was, you don't need to do it to finish the game.");
                                Console.WriteLine();
                                Console.WriteLine("Try taking a different approach to the situation.");
                                Console.WriteLine();
                                Console.WriteLine("Error 4. SCI Version 1.001.050");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Had you going there, didn't I? But seriously -- next time try saying what you want to equip.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (battleAction.StartsWith("Equip "))
                            {
                                string equippingItem = battleAction.Remove((battleAction.IndexOf("Equip ")), 6);

                                foreach (Armor armor in equippableArmor)
                                {
                                    string bagCheck = armor.Name;
                                    if (equippingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        GetDressed(ego, armor);
                                        break;
                                    }
                                }
                                foreach (Weapon weapon in equippableWeapon)
                                {
                                    string bagCheck = weapon.Name;
                                    if (equippingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        GetEquipped(ego, weapon);
                                        break;
                                    }
                                }
                                foreach (Shield shield in equippableShield)
                                {
                                    string bagCheck = shield.Name;
                                    if (equippingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        GetStrapped(ego, shield);
                                        break;
                                    }
                                }
                                if (battleAction != "complete" && battleAction != "incomplete")
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Let's get one thing straight, OK? You don't have that, it's not equippable, or you just plain typed something that didn't make sense.");
                                    Console.WriteLine("Whichever the case -- stop trying to put that on. It makes you look silly.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                };
                            }
                            else if (battleAction == "Inspect")
                            {
                                battleAction = "incomplete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("-or gadget DOO DOO DOO DOO DOO DOOOO DOOOOOOO!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (battleAction.StartsWith("Inspect "))
                            {
                                string inspectingItem = battleAction.Remove((battleAction.IndexOf("Inspect ")), 8);
                                foreach (Armor armor in equippableArmor)
                                {
                                    string bagCheck = armor.Name;
                                    if (inspectingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine(armor.Description);
                                        Console.WriteLine();
                                        Console.WriteLine(armor.Name);
                                        Console.WriteLine($"Dmg Reduction: {armor.DamageReduction}  Crit Resist: {armor.CritResist}");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Weapon weapon in equippableWeapon)
                                {
                                    string bagCheck = weapon.Name;
                                    if (inspectingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine(weapon.Description);
                                        Console.WriteLine();
                                        Console.WriteLine(weapon.Name);
                                        Console.WriteLine($"Damage Bonus: {weapon.Damage}  Crit Multiplier: {weapon.CritMultiplier}");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.WriteLine();
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Shield shield in equippableShield)
                                {
                                    string bagCheck = shield.Name;
                                    if (inspectingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine(shield.Description);
                                        Console.WriteLine();
                                        Console.WriteLine(shield.Name);
                                        Console.WriteLine($"AC: {shield.ArmorClass}  Crit Resist: {shield.CritResist}");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Potion potion in potionBelt)
                                {
                                    string bagCheck = potion.Name;
                                    if (inspectingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine(potion.Description);
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                if (battleAction != "complete" && battleAction != "incomplete")
                                {
                                    battleAction = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Are we reading from the same inventory sheet?");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }
                    }
                    if (battleAction == "fight defensively" && fightingDefensively == false)
                    {
                        battleAction = "fight";
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You begin fighting defensively. Both you and your opponent gain 1 AC.");
                        ego.ArmorClass = ego.ArmorClass + 1;
                        badGuy.ArmorClass = badGuy.ArmorClass + 1;
                        fightingDefensively = true;
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (battleAction == "fight normally" && fightingDefensively == true)
                    {
                        battleAction = "fight";
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You begin fighting normally. Both your and your opponent's ACs return to normal.");
                        ego.ArmorClass = ego.ArmorClass - 1;
                        badGuy.ArmorClass = badGuy.ArmorClass - 1;
                        fightingDefensively = false;
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (battleAction == "defend")
                    {
                        battleAction = "complete";
                        fullDefense = true;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You take a defensive stance. You gain 5 AC.");
                        ego.ArmorClass = ego.ArmorClass + 5;
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (battleAction == "attack" || battleAction == "fight" || battleAction == "kill")
                    {
                        battleAction = "complete";
                        attackRoll = die.Next(1, 21) + ego.ToHitMod;
                        Console.WriteLine();
                        Console.WriteLine();
                        if (ego.EquippedWeapon.Name == "Pointy Stick" || ego.EquippedWeapon.Name == "Mildew-encrusted Pocket Knife" || ego.EquippedWeapon.Name == "Knife" || ego.EquippedWeapon.Name == "Stick" || ego.EquippedWeapon.Name == "Hunting Knife") { Console.Write("You stab at " + badGuy.Name + ", "); }
                        else if (ego.EquippedWeapon.Name == "Gun") { Console.Write("You shoot at " + badGuy.Name + ", "); }
                        else if (ego.EquippedWeapon.Name == "Pogo Stick") { Console.Write("You jab at " + badGuy.Name + ", "); }
                        else { Console.Write("You swing at " + badGuy.Name + ", "); }
                        Thread.Sleep(1500);
                        if (attackRoll >= badGuy.ArmorClass && attackRoll < 20)
                        {
                            if (ego.EquippedWeapon.Name == "Pogo Stick") { ego.Flurry = ego.Flurry + 5; }
                            rolledDamage = die.Next(1, (ego.DamageDie + 1)) + ego.Damage;
                            Console.Write("and hit for " + rolledDamage + " damage!");
                            badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        if (attackRoll == 20)
                        {
                            if (ego.EquippedWeapon.Name == "Pogo Stick") { ego.Flurry = ego.Flurry + 5; }
                            rolledDamage = (int)Math.Round((ego.CritMultiplier * (die.Next(1, (ego.DamageDie + 1)) + ego.Damage)) * badGuy.CritResist);
                            Console.Write("and critically hit for " + rolledDamage + " damage!");
                            badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll < badGuy.ArmorClass)
                        {
                            Console.Write("but miss!");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        while (ego.Flurry > 0)
                        {
                            attackRoll = die.Next(1, 21) + ego.ToHitMod;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write($"Your pogo stick executes a FLURRY of attacks on {badGuy.Name}, ");
                            Thread.Sleep(1500);
                            if (attackRoll >= (badGuy.ArmorClass + ego.Flurry) && attackRoll < 20)
                            {
                                ego.Flurry = ego.Flurry + 5;
                                rolledDamage = die.Next(1, (ego.DamageDie + 1)) + ego.Damage;
                                Console.Write("and hits for " + rolledDamage + " damage!");
                                badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (attackRoll == 20)
                            {
                                ego.Flurry = ego.Flurry + 5;
                                rolledDamage = (int)Math.Round((ego.CritMultiplier * (die.Next(1, (ego.DamageDie + 1)) + ego.Damage)) * badGuy.CritResist);
                                Console.Write("and critically hits for " + rolledDamage + " damage!");
                                badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (attackRoll < (badGuy.ArmorClass + ego.Flurry))
                            {
                                ego.Flurry = 0;
                                Console.Write("but misses!");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                    }
                    if (battleAction == "tap out")
                    {
                        battleAction = "incomplete";
                        battleLoop = false;
                        mode = 4;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You tap and beg for mercy. " + badGuy.Name + " drops his attack posture.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (battleAction != "complete" && battleAction != "incomplete")
                    {
                        battleAction = "incomplete";
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("That didn't do anything useful.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (badGuy.Name == "Heisenberg")
                    {
                        if (battleAction == "complete" && badGuy.CurrentHitPoints > 0)
                        {
                            enemyHPPercent = ((double)badGuy.CurrentHitPoints / (double)badGuy.MaxHitPoints);

                            randomAttack = die.Next(1, 11);
                            if (enemyHPPercent > 0.25 && randomAttack == 1 && pantsOff == false)
                            {
                                pantsOff = true;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Heisenberg takes off his pants!");
                                Thread.Sleep(1500);
                            }
                            else if (enemyHPPercent > 0.25)
                            {
                                if (randomAttack < 3)
                                {
                                    randomDamage = die.Next(1, 6);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Heisenberg, screaming in frustration, throws a pizza onto a canopied work station! The pizza begins to bake under an intense lamp, and the cheese becomes scalding hot. The oils become turbulent, causing it to slide down and off the canopy!");
                                    Thread.Sleep(4000);
                                    Console.WriteLine();
                                    Console.Write("It falls straight at your face, ");
                                }
                                else if (randomAttack == 3)
                                {
                                    randomDamage = die.Next(10, 21);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Heisenberg raises two fingers, and a red beam appears on your chest. He throws his fingers forward, and a gunshot is heard!");
                                    Thread.Sleep(4000);
                                    Console.WriteLine();
                                    Console.Write("The sniper fires at you, ");
                                }
                                else if (randomAttack == 4)
                                {
                                    randomDamage = die.Next(15, 26);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Heisenberg offers you a bath! In need of relaxation, you get in. Suddenly, Heisenberg is standing over you with flesh-disintegrating chemicals!");
                                    Thread.Sleep(3000);
                                    Console.WriteLine();
                                    Console.Write("He pours the chemicals, ");
                                }
                                else if (randomAttack == 5)
                                {
                                    randomDamage = die.Next(10, 16);
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Heisenberg tells you he poisoned someone near and dear to your heart. While this causes no direct damage, the mental distress manifests as physical harm!");
                                    Thread.Sleep(3000);
                                    Console.WriteLine();
                                    Console.Write("Heisenberg's evil intent reaches out with its icy hand, ");
                                }
                                else
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Heisenberg attacks you, ");
                                }
                                Thread.Sleep(1500);
                                attackRoll = die.Next(1, 21);

                                if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                                {
                                    rolledDamage = die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage + randomDamage - ego.DamageReduction;
                                    if (rolledDamage < 0) { rolledDamage = 0; }
                                    Console.Write("and hits for " + rolledDamage + " damage!");
                                    ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                if (attackRoll == 20)
                                {
                                    rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                                    if (rolledDamage < 0) { rolledDamage = 0; }
                                    Console.Write("and critically hits for " + rolledDamage + " damage!");
                                    ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (attackRoll < ego.ArmorClass)
                                {
                                    Console.Write("but misses!");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            else if (enemyHPPercent <= 0.25 && enemyHPPercent > 0 && badGuy.PotionCount > 0)
                            {
                                badGuy.PotionCount--;
                                GetBadGuyDrunk(badGuy, badGuy.PotionType);
                            }
                            else if (enemyHPPercent <= 0.25 && enemyHPPercent > 0)
                            {
                                attackRoll = die.Next(1, 21);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Heisenberg presses the button on a remote! Gesturing your attention, he points to the trunk of a car which pops open with a machine gun emerging.");
                                Thread.Sleep(4000);
                                Console.WriteLine();
                                Console.WriteLine("The gun fires!");
                                Thread.Sleep(1500);
                                if (attackRoll >= ego.ArmorClass)
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    while (attackRoll >= ego.ArmorClass)
                                    {
                                        rolledDamage = die.Next(5, 16) - ego.DamageReduction;
                                        if (rolledDamage < 0) { rolledDamage = 0; }
                                        Console.WriteLine("And hits for " + rolledDamage + " damage!");
                                        ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                        attackRoll--;
                                        Thread.Sleep(500);
                                    }
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (attackRoll < ego.ArmorClass)
                                {
                                    Console.Write(" But misses!");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }
                    }
                    else
                    {
                        if (battleAction == "complete" && badGuy.CurrentHitPoints > 0)
                        {
                            enemyHPPercent = ((double)badGuy.CurrentHitPoints / (double)badGuy.MaxHitPoints);
                            if (enemyHPPercent > 0.25)
                            {
                                attackRoll = die.Next(1, 21);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write(badGuy.Name + " attacks you, ");
                                Thread.Sleep(1500);
                                if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                                {
                                    rolledDamage = die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage - ego.DamageReduction;
                                    if (rolledDamage < 0) { rolledDamage = 0; }
                                    Console.Write("and hits for " + rolledDamage + " damage!");
                                    ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                if (attackRoll == 20)
                                {
                                    rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                                    if (rolledDamage < 0) { rolledDamage = 0; }
                                    Console.Write("and critically hits for " + rolledDamage + " damage!");
                                    ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (attackRoll < ego.ArmorClass)
                                {
                                    Console.Write("but misses!");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            if (enemyHPPercent <= 0.25 && enemyHPPercent > 0 && badGuy.PotionCount > 0)
                            {
                                badGuy.PotionCount--;
                                GetBadGuyDrunk(badGuy, badGuy.PotionType);
                            }
                            else if (enemyHPPercent <= 0.25 && enemyHPPercent > 0)
                            {
                                attackRoll = die.Next(1, 21);
                                if (badGuy.Name == "Jesse")
                                {
                                    attackRoll = attackRoll - 5;
                                }
                                Console.WriteLine();
                                Console.WriteLine();
                                if (badGuy.Name == "Dude on a Pogo Stick") { Console.Write($"{badGuy.Name} charges forward!"); }
                                else if (badGuy.Name == "Jesse") { Console.Write($"{badGuy.Name} pulls out a gun and fires!"); }
                                else { Console.Write(badGuy.Name + " attacks you, "); }
                                Thread.Sleep(1500);
                                if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                                {
                                    if (badGuy.Name == "Dude on a Pogo Stick")
                                    {
                                        rolledDamage = 2 * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage) - ego.DamageReduction;
                                        if (rolledDamage < 0) { rolledDamage = 0; }
                                        Console.Write(" And hits for " + rolledDamage + " damage!");
                                    }
                                    else if (badGuy.Name == "Jesse")
                                    {
                                        rolledDamage = die.Next(20, 31) - ego.DamageReduction;
                                        if (rolledDamage < 0) { rolledDamage = 0; }
                                        Console.Write(" And hits for " + rolledDamage + " damage!");
                                    }
                                    else
                                    {
                                        rolledDamage = die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage - ego.DamageReduction;
                                        if (rolledDamage < 0) { rolledDamage = 0; }
                                        Console.Write("and hits for " + rolledDamage + " damage!");
                                    }
                                    ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                if (attackRoll == 20)
                                {
                                    if (badGuy.Name == "Dude on a Pogo Stick")
                                    {
                                        rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                                        if (rolledDamage < 0) { rolledDamage = 0; }
                                        Console.Write(" And critically hits for " + rolledDamage + " damage!");
                                    }
                                    else
                                    {
                                        rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                                        if (rolledDamage < 0) { rolledDamage = 0; }
                                        Console.Write("and critically hits for " + rolledDamage + " damage!");
                                    }
                                    ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (attackRoll < ego.ArmorClass)
                                {
                                    Console.Write("but misses!");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }
                    }
                    
                    if ((double)badGuy.CurrentHitPoints <= 0 && numberOfBaddies == 1)
                    {
                        battleLoop = false;
                        if (fightingDefensively == true)
                        {
                            fightingDefensively = false;
                            ego.ArmorClass = ego.ArmorClass - 1;
                            badGuy.ArmorClass = badGuy.ArmorClass - 1;
                        }
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You won!");
                        Thread.Sleep(2000);
                        Console.WriteLine();
                        Console.WriteLine("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if ((double)badGuy.CurrentHitPoints <= 0 && numberOfBaddies > 1)
                    {
                        numberOfBaddies--;
                        badGuy.CurrentHitPoints = badGuy.MaxHitPoints;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine(badGuy.Name + " has been defeated!");
                        Console.WriteLine();
                        Thread.Sleep(2000);
                        Console.WriteLine("But another engages!");
                        Console.WriteLine();
                        Thread.Sleep(1500);
                        Console.WriteLine("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if ((double)ego.CurrentHitPoints <= 0)
                    {
                        battleLoop = false;
                        if (fightingDefensively == true)
                        {
                            fightingDefensively = false;
                            ego.ArmorClass = ego.ArmorClass - 1;
                            badGuy.ArmorClass = badGuy.ArmorClass - 1;
                        }
                        Console.Clear();
                        Console.WriteLine("...Shoot. You lost.");
                        Thread.Sleep(1000);
                        Console.WriteLine();
                        Console.WriteLine("Press ENTER to continue");
                        Console.ReadLine();
                    }
                }

                static string GetEnemyHealth(int max, int current)
                {
                    double percentage = (double)current / (double)max;
                    string status = "Uninjured";

                    if (percentage == 1) { status = "Uninjured"; }
                    if (percentage >= 0.75 && percentage != 1) { status = "Healthy"; }
                    if (percentage >= 0.5 && percentage < 0.75) { status = "Injured"; }
                    if (percentage >= 0.2 && percentage < 0.5) { status = "Bloodied"; }
                    if (percentage >= 0.05 && percentage < 0.2) { status = "Critical"; }
                    if (percentage > 0 && percentage < 0.05) { status = "Practically dead"; }

                    return status;
                }

                static void GetGoodGuyDrunk(Stats imbiber, Potion potion)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    if (imbiber.CurrentHitPoints <= (imbiber.MaxHitPoints - potion.Potency))
                    {
                        imbiber.CurrentHitPoints = imbiber.CurrentHitPoints + potion.Potency;
                        if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". You regain " + potion.Potency + " HP!"); }
                        else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }

                    }
                    else
                    {
                        imbiber.CurrentHitPoints = imbiber.MaxHitPoints;
                        if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". Your HP are maxed out!"); }
                        else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }
                    }
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                static void GetBadGuyDrunk(BadGuyStats imbiber, Potion potion)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    if (imbiber.CurrentHitPoints <= (imbiber.MaxHitPoints - potion.Potency))
                    {
                        imbiber.CurrentHitPoints = imbiber.CurrentHitPoints + potion.Potency;
                        if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". You regain " + potion.Potency + " HP!"); }
                        else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }

                    }
                    else
                    {
                        imbiber.CurrentHitPoints = imbiber.MaxHitPoints;
                        if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". Your HP are maxed out!"); }
                        else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }
                    }
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
            }
        }
       
        static void RandomEncounterGenerator(Stats ego, List<Potion> potionBelt, List<Weapon> equippableWeapon, List<Armor> equippableArmor, List<Shield> equippableShield)
        {
            Random d100 = new Random();
            Random d20 = new Random();
            Random d10 = new Random();
            Random d6 = new Random();
            Random blueCrystalLoot = new Random();
            string encounterAction;
            bool encounterLoop = true;
            Weapon Unarmed = new Weapon("Unarmed", 0, 1, 0, true, false, 0, "Fists of fury.");
            Armor Rags = new Armor("Rags", 0, 0.95, false, 0, "These are your clothes, but with a fancier name.");
            Weapon noWeapon = new Weapon(null, 0, 0, 0, true, false, 0, "'Tis nothing but spun sugar and bootblack.");
            Armor noArmor = new Armor(null, 0, 0, false, 0, "'Tis nothing but spun sugar and bootblack.");
            Potion lightHealingPotion = new Potion("Light Healing Potion", 10, "This potion will recover 10 HP.");
            Potion HealingPotion = new Potion("Healing Potion", 20, "This potion will recover 20 HP.");
            Potion greaterHealingPotion = new Potion("Greater Healing Potion", 50, "This potion will recover 50 HP.");
            Weapon pointyStick = new Weapon("Pointy Stick", 0, 4, 2, true, false, 10, "Brilliant use of \"force over surface area\" wouldn't you say?");
            Weapon huntingKnife = new Weapon("Hunting Knife", 0, 4, 3, true, false, 50, "THAT'S a knife.");
            Armor leatherArmor = new Armor("Leather Armor", 1, 0.85, false, 70, "Provides a bit of protection, but still no match for a good stabbing.");
            var badGuy = new BadGuyStats(null, 0, 0, 0, 0, 0, 0, 0, 0, 0, lightHealingPotion, noWeapon, noArmor, null);

            int encounterRoll = d100.Next(1, 101);
            int rolledDamage = 1;


            if (encounterRoll < 6) //creeper
            {
                badGuy = badGuy.RewriteBadGuy("The Creeper in the Dark", 20, 20, 0, 0.95, 6, 2, 2.00, blueCrystalLoot.Next(11), 0, lightHealingPotion, pointyStick, noArmor, "From the far corner of the room emerges a creeper in the dark. He begins closing in with a weapon pointed at you.");
            }
            if (encounterRoll > 5)
            { 
                return;
            }
                Console.WriteLine(badGuy.BattleIntro);
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("Fight or Flee?");
                Console.WriteLine();
                Console.Write("> ");
                encounterAction = Console.ReadLine();
                encounterAction = encounterAction.ToLower();

                while (encounterLoop == true)
                {
                    if (encounterAction == "fight")
                    {
                        encounterLoop = false;
                        Console.WriteLine();
                        Console.WriteLine();
                        if (ego.EquippedWeapon.Name != "Unarmed")
                        {
                            Console.WriteLine("You take out your " + ego.EquippedWeapon.Name + " and prepare for battle.");
                        }
                        else
                        {
                            Console.WriteLine("You clench your fists and prepare for battle.");
                        }
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Battle(ego, badGuy, potionBelt, equippableArmor, equippableWeapon, equippableShield);
                        if (ego.JanesProtectionActive == true)
                        {
                        ego.JanesProtectionActive = false;
                        ego.ArmorClass--;
                        }
                        if (ego.CurrentHitPoints <= 0)
                        {
                            EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
                        }
                        else if (badGuy.CurrentHitPoints <= 0)
                        {
                        ego.LastDefeated = badGuy.Name;
                        Console.Clear();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You won!");
                        Console.WriteLine();
                        Console.WriteLine("Press ENTER to continue");
                        Console.WriteLine();
                        Console.WriteLine();
                        if (badGuy.BlueCrystals == 1)
                        {
                            Console.WriteLine("Searching the grotesque carcass, you find a single measly blue crystal; what a way to make a living!");
                        }
                        else if (badGuy.BlueCrystals != 1)
                        {
                            Console.WriteLine("Searching the grotesque carcass, you find " + badGuy.BlueCrystals + " blue crystals, which you take.");
                        }
                        ego.BlueCrystals = ego.BlueCrystals + badGuy.BlueCrystals;
                        Console.WriteLine();
                        Thread.Sleep(3000);
                        if (badGuy.Weapon.Name == null && badGuy.Armor.Name != null)
                        {
                            Console.WriteLine("And the enemy left a present!");
                            Console.WriteLine();
                            Console.WriteLine("The " + badGuy.Armor.Name + " looks useful. You take it.");
                            equippableArmor.Add(badGuy.Armor);
                            Thread.Sleep(3000);
                        }
                        if (badGuy.Weapon.Name != null && badGuy.Armor.Name == null)
                        {
                            Console.WriteLine("And the enemy left a present!");
                            Console.WriteLine();
                            Console.WriteLine("The " + badGuy.Weapon.Name + " looks useful. You take it.");
                            equippableWeapon.Add(badGuy.Weapon);
                            Thread.Sleep(3000);
                        }
                        if (badGuy.Weapon.Name != null && badGuy.Armor.Name != null)
                        {
                            Console.WriteLine("And the enemy left some presents!");
                            Console.WriteLine();
                            Console.WriteLine("The " + badGuy.Weapon.Name + " and " + badGuy.Armor.Name + " look useful. You take them.");
                            equippableWeapon.Add(badGuy.Weapon);
                            equippableArmor.Add(badGuy.Armor);
                            Thread.Sleep(3000);
                        }
                        Console.WriteLine();
                        Console.WriteLine("Press ENTER to continue");
                        Console.ReadLine();
                        Console.Clear();
                        }
                    }
                    else if (encounterAction == "flee")
                    {
                        if (ego.JustFled == false)
                        {
                            encounterLoop = false;
                            ego.Location = ego.FleeLocation;
                            ego.JustFled = true;
                            if (d100.Next(1, 101) < 25)
                            {
                                encounterRoll = d20.Next(1, 21);
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Before you can escape, " + badGuy.Name + " gets in an attack!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write(badGuy.Name + " attacks you, ");

                                if (encounterRoll >= ego.ArmorClass && encounterRoll < 20)
                                {
                                    rolledDamage = d6.Next(1, (badGuy.DamageDie + 1) + badGuy.Damage);
                                    Console.Write("and hits for " + rolledDamage + " damage!");
                                    ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                if (encounterRoll == 20)
                                {
                                    rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (d6.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist);
                                Console.Write("and critically hits for " + rolledDamage + " damage!");
                                    ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                                else if (encounterRoll < ego.ArmorClass)
                                {
                                    Console.Write("but misses!");
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }

                                if (ego.CurrentHitPoints <= 0)
                                {
                                    Console.Clear();
                                    Console.WriteLine("...Well that didn't work out.");
                                    Thread.Sleep(1000);
                                    Console.WriteLine();
                                    Console.WriteLine("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            else
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("You escape before " + badGuy.Name + " could get in an attack.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                        else if (ego.JustFled == true)
                        {
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("There's something right behind you! Looks like you only have one option here.");
                            Console.WriteLine();
                        Console.Write("Well?");
                        Console.WriteLine();
                        Console.WriteLine("> ");
                            encounterAction = Console.ReadLine();
                            encounterAction = encounterAction.ToLower();
                        }
                }
                    else
                    {
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("OH HO! You've uncovered the super secret hidden battle option! You now can use \"" + encounterAction + "\" in all fights from here on!");
                        Console.WriteLine();
                        Console.WriteLine("Not really. No hidden parser secret or joke here. Just pick one.");
                        Console.WriteLine();
                        encounterAction = Console.ReadLine();
                        encounterAction = encounterAction.ToLower();
                    }
                }


            
            static void Battle(Stats ego, BadGuyStats badGuy, List<Potion> potionBelt, List<Armor> equippableArmor, List<Weapon> equippableWeapon, List<Shield> equippableShield)
            {
                Random d100 = new Random();
                Random d20 = new Random();
                Random d6 = new Random();
                Random die = new Random();
                bool battleLoop = true;
                bool fightingDefensively = false;
                bool fullDefense = false;
                string battleAction;
                bool inventoryLoop;
                int attackRoll = 1;
                int rolledDamage = 0;
                double enemyHPPercent = 1.00;
                TextInfo myTI = new CultureInfo("en-US", false).TextInfo;

                while (battleLoop == true)
                {
                    Console.Clear();
                    if (fullDefense == true)
                    {
                        ego.ArmorClass = ego.ArmorClass - 5;
                        fullDefense = false;
                    }
                    string enemyHealth = GetEnemyHealth(badGuy.MaxHitPoints, badGuy.CurrentHitPoints);
                    Console.WriteLine("Your Hit Points: " + ego.CurrentHitPoints + " / " + ego.MaxHitPoints);
                    Console.WriteLine(badGuy.Name + "'s Status: " + enemyHealth);
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("What will you do?");
                    Console.WriteLine("-------------------");
                    Console.WriteLine("Inventory");
                    Console.WriteLine("Attack");
                    Console.WriteLine("Defend");
                    if (fightingDefensively == false) { Console.WriteLine("Fight defensively"); }
                    if (fightingDefensively == true) { Console.WriteLine("Fight normally"); }
                    Console.WriteLine("Flee");
                    Console.WriteLine();
                    Console.WriteLine();

                    Console.Write("Your action: ");
                    battleAction = Console.ReadLine();
                    battleAction = battleAction.ToLower();

                    if (battleAction == "inventory")
                    {
                        inventoryLoop = true;
                        while (inventoryLoop == true)
                        {
                            Console.WriteLine();
                            Console.WriteLine("____________________________________________________");
                            Console.WriteLine();
                            Console.WriteLine("Equipment:");
                            Console.WriteLine("Weapon: " + ego.EquippedWeapon.Name);
                            Console.WriteLine("Armor: " + ego.EquippedArmor.Name);
                            if (ego.EquippedShield.Name != "Forearm") { Console.WriteLine("Shield: " + ego.EquippedShield.Name); }
                            else { Console.WriteLine("Shield: None"); }
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Inventory:");
                            Console.WriteLine();
                            foreach (Armor armor in equippableArmor)
                            {
                                Console.WriteLine(armor.Name);
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                if (weapon.Name == "Unarmed") { }
                                else { Console.WriteLine(weapon.Name); }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                if (shield.Name == "Forearm") { }
                                else { Console.WriteLine(shield.Name); }
                            }
                            foreach (Potion potion in potionBelt)
                            {
                                Console.WriteLine(potion.Name);
                            }
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Use");
                            Console.WriteLine("Inspect");
                            Console.WriteLine("Equip");
                            Console.WriteLine();
                            Console.WriteLine("Return");
                            Console.WriteLine();
                            Console.Write("> ");
                            battleAction = Console.ReadLine();
                            battleAction = battleAction.ToLower();
                            battleAction = myTI.ToTitleCase(battleAction);

                            if (battleAction == "Return")
                            {
                                battleAction = "incomplete";
                                inventoryLoop = false;
                            }
                            else if (battleAction.StartsWith("Use "))
                            {
                                string usedItem = battleAction.Remove(battleAction.IndexOf("Use "), 4);
                                foreach (Armor armor in equippableArmor)
                                {
                                    string bagCheck = armor.Name;
                                    if (usedItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Nothing happens.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Weapon weapon in equippableWeapon)
                                {
                                    string bagCheck = weapon.Name;
                                    if (usedItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Nothing happens.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Shield shield in equippableShield)
                                {
                                    string bagCheck = shield.Name;
                                    if (usedItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine("Nothing happens.");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Potion potion in potionBelt)
                                {
                                    string bagCheck = potion.Name;
                                    if (usedItem == bagCheck)
                                    {
                                        battleAction = "complete";
                                        potionBelt.Remove(potion);
                                        GetGoodGuyDrunk(ego, potion);
                                        break;
                                    }
                                }

                                if (battleAction != "complete" && battleAction != "incomplete")
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Let's get one thing straight, OK? You don't have that, it's not usable here, or you just plain typed something that didn't make sense.");
                                    Console.WriteLine("Whichever the case -- stop trying to use it. You're looking silly in front of the bad guy.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                            else if (battleAction == "Use")
                            {
                                battleAction = "incomplete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Use? Use WHAT?!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (battleAction == "Equip")
                            {
                                battleAction = "incomplete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Oops! You equipped something that we weren't expecting. Whatever it was, you don't need to do it to finish the game.");
                                Console.WriteLine();
                                Console.WriteLine("Try taking a different approach to the situation.");
                                Console.WriteLine();
                                Console.WriteLine("Error 4. SCI Version 1.001.050");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Had you going there, didn't I? But seriously -- next time try saying what you want to equip.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (battleAction.StartsWith("Equip "))
                            {
                                string equippingItem = battleAction.Remove((battleAction.IndexOf("Equip ")), 6);

                                foreach (Armor armor in equippableArmor)
                                {
                                    string bagCheck = armor.Name;
                                    if (equippingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        GetDressed(ego, armor);
                                        break;
                                    }
                                }
                                foreach (Weapon weapon in equippableWeapon)
                                {
                                    string bagCheck = weapon.Name;
                                    if (equippingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        GetEquipped(ego, weapon);
                                        break;
                                    }
                                }
                                foreach (Shield shield in equippableShield)
                                {
                                    string bagCheck = shield.Name;
                                    if (equippingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        GetStrapped(ego, shield);
                                        break;
                                    }
                                }
                                if (battleAction != "complete" && battleAction != "incomplete")
                                {
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Let's get one thing straight, OK? You don't have that, it's not equippable, or you just plain typed something that didn't make sense.");
                                    Console.WriteLine("Whichever the case -- stop trying to put that on. It makes you look silly.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                };
                            }
                            else if (battleAction == "Inspect")
                            {
                                battleAction = "incomplete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("-or gadget DOO DOO DOO DOO DOO DOOOO DOOOOOOO!");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (battleAction.StartsWith("Inspect "))
                            {
                                string inspectingItem = battleAction.Remove((battleAction.IndexOf("Inspect ")), 8);
                                foreach (Armor armor in equippableArmor)
                                {
                                    string bagCheck = armor.Name;
                                    if (inspectingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine(armor.Description);
                                        Console.WriteLine();
                                        Console.WriteLine(armor.Name);
                                        Console.WriteLine($"Dmg Reduction: {armor.DamageReduction}  Crit Resist: {armor.CritResist}");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Weapon weapon in equippableWeapon)
                                {
                                    string bagCheck = weapon.Name;
                                    if (inspectingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine(weapon.Description);
                                        Console.WriteLine();
                                        Console.WriteLine(weapon.Name);
                                        Console.WriteLine($"Damage Bonus: {weapon.Damage}  Crit Multiplier: {weapon.CritMultiplier}");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.WriteLine();
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Shield shield in equippableShield)
                                {
                                    string bagCheck = shield.Name;
                                    if (inspectingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine(shield.Description);
                                        Console.WriteLine();
                                        Console.WriteLine(shield.Name);
                                        Console.WriteLine($"AC: {shield.ArmorClass}  Crit Resist: {shield.CritResist}");
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                foreach (Potion potion in potionBelt)
                                {
                                    string bagCheck = potion.Name;
                                    if (inspectingItem == bagCheck)
                                    {
                                        battleAction = "incomplete";
                                        Console.WriteLine();
                                        Console.WriteLine();
                                        Console.WriteLine(potion.Description);
                                        Console.WriteLine();
                                        Console.Write("Press ENTER to continue");
                                        Console.ReadLine();
                                        break;
                                    }
                                }
                                if (battleAction != "complete" && battleAction != "incomplete")
                                {
                                    battleAction = "complete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Are we reading from the same inventory sheet?");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                }
                            }
                        }
                    }
                    if (battleAction == "fight defensively" && fightingDefensively == false)
                    {
                        battleAction = "incomplete";
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You begin fighting defensively. Both you and your opponent gain 1 AC.");
                        ego.ArmorClass = ego.ArmorClass + 1;
                        badGuy.ArmorClass = badGuy.ArmorClass + 1;
                        fightingDefensively = true;
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (battleAction == "fight normally" && fightingDefensively == true)
                    {
                        battleAction = "incomplete";
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You begin fighting normally. Both your and your opponent's ACs return to normal.");
                        ego.ArmorClass = ego.ArmorClass - 1;
                        badGuy.ArmorClass = badGuy.ArmorClass - 1;
                        fightingDefensively = false;
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (battleAction == "defend")
                    {
                        battleAction = "complete";
                        fullDefense = true;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You take a defensive stance. You gain 5 AC.");
                        ego.ArmorClass = ego.ArmorClass + 5;
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (battleAction == "attack" || battleAction == "fight" || battleAction == "kill")
                    {
                        battleAction = "complete";
                        attackRoll = d20.Next(1, 21);
                        Console.WriteLine();
                        Console.WriteLine();
                        if (ego.EquippedWeapon.Name == "Pointy Stick" || ego.EquippedWeapon.Name == "Mildew-encrusted Pocket Knife" || ego.EquippedWeapon.Name == "Knife" || ego.EquippedWeapon.Name == "Stick" || ego.EquippedWeapon.Name == "Hunting Knife") { Console.Write("You stab at " + badGuy.Name + ", "); }
                        else if (ego.EquippedWeapon.Name == "Gun") { Console.Write("You shoot at " + badGuy.Name + ", "); }
                        else if (ego.EquippedWeapon.Name == "Pogo Stick") { Console.Write("You jab at " + badGuy.Name + ", "); }
                        else { Console.Write("You swing at " + badGuy.Name + ", "); }
                        Thread.Sleep(1500);
                        if (attackRoll >= badGuy.ArmorClass && attackRoll < 20)
                        {
                            if (ego.EquippedWeapon.Name == "Pogo Stick") { ego.Flurry = ego.Flurry + 5; }
                            rolledDamage = d6.Next(1, (ego.DamageDie + 1)) + ego.Damage;
                            Console.Write("and hit for " + rolledDamage + " damage!");
                            badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        if (attackRoll == 20)
                        {
                            if (ego.EquippedWeapon.Name == "Pogo Stick") { ego.Flurry = ego.Flurry + 5; }
                            rolledDamage = (int)Math.Round((ego.CritMultiplier * (d6.Next(1, (ego.DamageDie + 1)) + ego.Damage)) * badGuy.CritResist);
                            Console.Write("and critically hit for " + rolledDamage + " damage!");                           
                            badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll < badGuy.ArmorClass)
                        {
                            Console.Write("but miss!");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        while (ego.Flurry > 0)
                        {
                            attackRoll = die.Next(1, 21) + ego.ToHitMod;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write($"Your pogo stick executes a FLURRY of attacks on {badGuy.Name}, ");
                            Thread.Sleep(1500);
                            if (attackRoll >= (badGuy.ArmorClass + ego.Flurry) && attackRoll < 20)
                            {
                                ego.Flurry = ego.Flurry + 5;
                                rolledDamage = die.Next(1, (ego.DamageDie + 1)) + ego.Damage;
                                Console.Write("and hits for " + rolledDamage + " damage!");
                                badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (attackRoll == 20)
                            {
                                ego.Flurry = ego.Flurry + 5;
                                rolledDamage = (int)Math.Round((ego.CritMultiplier * (die.Next(1, (ego.DamageDie + 1)) + ego.Damage)) * badGuy.CritResist);
                                Console.Write("and critically hits for " + rolledDamage + " damage!");
                                badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (attackRoll < (badGuy.ArmorClass + ego.Flurry))
                            {
                                ego.Flurry = 0;
                                Console.Write("but misses!");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                    }
                    if (battleAction == "flee")
                    {
                        battleAction = "incomplete";
                        battleLoop = false;
                        ego.JustFled = true;
                        ego.Location = ego.FleeLocation;
                        attackRoll = d20.Next(1, 21);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Before you can escape, " + badGuy.Name + " gets in an attack!");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write(badGuy.Name + " attacks you, ");
                        Thread.Sleep(1500);
                        if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                        {
                            rolledDamage = d6.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage;
                            Console.Write("and hits for " + rolledDamage + " damage!");
                            ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        if (attackRoll == 20)
                        {
                            rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (d6.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist);
                            Console.Write("and critically hits for " + rolledDamage + " damage!");
                            ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll < ego.ArmorClass)
                        {
                            Console.Write("but misses!");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                    }
                    if (battleAction != "complete" && battleAction != "incomplete")
                    {
                        battleAction = "incomplete";
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("That didn't do anything useful.");
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (battleAction == "complete" && badGuy.CurrentHitPoints > 0)
                    {
                        enemyHPPercent = ((double)badGuy.CurrentHitPoints / (double)badGuy.MaxHitPoints);
                        if ( enemyHPPercent > 0.25)
                        {
                            attackRoll = d20.Next(1, 21);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write(badGuy.Name + " attacks you, ");
                            Thread.Sleep(1500);
                            if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                            {
                                rolledDamage = d6.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.Write("and hits for " + rolledDamage + " damage!");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            if (attackRoll == 20)
                            {
                                rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (d6.Next(1, (badGuy.DamageDie +1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.Write("and critically hits for " + rolledDamage + " damage!");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (attackRoll < ego.ArmorClass)
                            {
                                Console.Write("but misses!");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                        if (enemyHPPercent <= 0.25 && enemyHPPercent > 0 && badGuy.PotionCount > 0)
                        {
                            badGuy.PotionCount--;
                            GetBadGuyDrunk(badGuy, badGuy.PotionType);
                        }
                        else if (enemyHPPercent <= 0.25 && enemyHPPercent > 0)
                        {
                            attackRoll = d20.Next(1, 21);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write(badGuy.Name + " attacks you, ");
                            Thread.Sleep(1500);
                            if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                            {
                                rolledDamage = d6.Next(1, (badGuy.DamageDie +1)) + badGuy.Damage - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.Write("and hits for " + rolledDamage + " damage!");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            if (attackRoll == 20)
                            {
                                rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (d6.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.Write("and critically hits for " + rolledDamage + " damage!");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                            else if (attackRoll < ego.ArmorClass)
                            {
                                Console.Write("but misses!");
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                    }

                    if ((double)badGuy.CurrentHitPoints <= 0)
                    {
                        battleLoop = false;
                        if (fightingDefensively == true)
                        {
                            fightingDefensively = false;
                            ego.ArmorClass = ego.ArmorClass - 1;
                            badGuy.ArmorClass = badGuy.ArmorClass - 1;
                        }
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("You won!");
                        Thread.Sleep(2000);
                        Console.WriteLine();
                        Console.WriteLine("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if ((double)ego.CurrentHitPoints <= 0)
                    {
                        battleLoop = false;
                        if (fightingDefensively == true)
                        {
                            fightingDefensively = false;
                            ego.ArmorClass = ego.ArmorClass - 1;
                            badGuy.ArmorClass = badGuy.ArmorClass - 1;
                        }
                        Console.Clear();
                        Console.WriteLine("...Shoot. You lost.");
                        Thread.Sleep(1000);
                        Console.WriteLine();
                        Console.WriteLine("Press ENTER to continue");
                        Console.ReadLine();
                    }                                
                }
                static string GetEnemyHealth(int max, int current)
                {
                    double percentage = (double)current / (double)max;
                    string status = "Uninjured";

                    if (percentage == 1) { status = "Uninjured"; }
                    if (percentage >= 0.75 && percentage != 1) { status = "Healthy"; }
                    if (percentage >= 0.5 && percentage < 0.75) { status = "Injured"; }
                    if (percentage >= 0.2 && percentage < 0.5) { status = "Bloodied"; }
                    if (percentage >= 0.05 && percentage < 0.2) { status = "Critical"; }
                    if (percentage > 0 && percentage < 0.05) { status = "Practically dead"; }

                    return status;
                }

                static void GetGoodGuyDrunk(Stats imbiber, Potion potion)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    if (imbiber.CurrentHitPoints <= (imbiber.MaxHitPoints - potion.Potency))
                    {
                        imbiber.CurrentHitPoints = imbiber.CurrentHitPoints + potion.Potency;
                        if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". You regain " + potion.Potency + " HP!"); }
                        else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }

                    }
                    else
                    {
                        imbiber.CurrentHitPoints = imbiber.MaxHitPoints;
                        if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". Your HP are maxed out!"); }
                        else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }                       
                    }
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                static void GetBadGuyDrunk(BadGuyStats imbiber, Potion potion)
                {
                    Console.WriteLine();
                    Console.WriteLine();
                    if (imbiber.CurrentHitPoints <= (imbiber.MaxHitPoints - potion.Potency))
                    {
                        imbiber.CurrentHitPoints = imbiber.CurrentHitPoints + potion.Potency;
                        if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". You regain " + potion.Potency + " HP!"); }
                        else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }

                    }
                    else
                    {
                        imbiber.CurrentHitPoints = imbiber.MaxHitPoints;
                        if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". Your HP are maxed out!"); }
                        else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }
                    }
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
            }
        }

        static void PlotBattle(Stats ego, BadGuyStats badGuy, List<Potion> potionBelt, List<Armor> equippableArmor, List<Weapon> equippableWeapon, List<Shield> equippableShield)
        {
            Random die = new Random();
            bool battleLoop = true;
            bool fightingDefensively = false;
            bool fullDefense = false;
            string battleAction;
            bool inventoryLoop;
            int attackRoll = 1;
            int rolledDamage = 0;
            double enemyHPPercent = 1.00;
            TextInfo myTI = new CultureInfo("en-US", false).TextInfo;

            while (battleLoop == true)
            {
                Console.Clear();
                if (fullDefense == true)
                {
                    ego.ArmorClass = ego.ArmorClass - 5;
                    fullDefense = false;
                }
                string enemyHealth = GetEnemyHealth(badGuy.MaxHitPoints, badGuy.CurrentHitPoints);
                Console.WriteLine("Your Hit Points: " + ego.CurrentHitPoints + " / " + ego.MaxHitPoints);
                Console.WriteLine(badGuy.Name + "'s Status: " + enemyHealth);
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("What will you do?");
                Console.WriteLine("-------------------");
                Console.WriteLine("Inventory");
                Console.WriteLine("Attack");
                Console.WriteLine("Defend");
                if (fightingDefensively == false) { Console.WriteLine("Fight defensively"); }
                if (fightingDefensively == true) { Console.WriteLine("Fight normally"); }
                Console.WriteLine("Flee");
                Console.WriteLine();
                Console.WriteLine();

                Console.Write("Your action: ");
                battleAction = Console.ReadLine();
                battleAction = battleAction.ToLower();

                if (battleAction == "inventory")
                {
                    inventoryLoop = true;
                    while (inventoryLoop == true)
                    {
                        Console.WriteLine();
                        Console.WriteLine("____________________________________________________");
                        Console.WriteLine();
                        Console.WriteLine("Equipment:");
                        Console.WriteLine("Weapon: " + ego.EquippedWeapon.Name);
                        Console.WriteLine("Armor: " + ego.EquippedArmor.Name);
                        if (ego.EquippedShield.Name != "Forearm") { Console.WriteLine("Shield: " + ego.EquippedShield.Name); }
                        else { Console.WriteLine("Shield: None"); }
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Inventory:");
                        Console.WriteLine();
                        foreach (Armor armor in equippableArmor)
                        {
                            Console.WriteLine(armor.Name);
                        }
                        foreach (Weapon weapon in equippableWeapon)
                        {
                            if (weapon.Name == "Unarmed") { }
                            else { Console.WriteLine(weapon.Name); }
                        }
                        foreach (Shield shield in equippableShield)
                        {
                            if (shield.Name == "Forearm") { }
                            else { Console.WriteLine(shield.Name); }
                        }
                        foreach (Potion potion in potionBelt)
                        {
                            Console.WriteLine(potion.Name);
                        }
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Use");
                        Console.WriteLine("Inspect");
                        Console.WriteLine("Equip");
                        Console.WriteLine();
                        Console.WriteLine("Return");
                        Console.WriteLine();
                        Console.Write("> ");
                        battleAction = Console.ReadLine();
                        battleAction = battleAction.ToLower();
                        battleAction = myTI.ToTitleCase(battleAction);

                        if (battleAction == "Return")
                        {
                            battleAction = "incomplete";
                            inventoryLoop = false;
                        }
                        else if (battleAction.StartsWith("Use "))
                        {
                            string usedItem = battleAction.Remove(battleAction.IndexOf("Use "), 4);
                            foreach (Armor armor in equippableArmor)
                            {
                                string bagCheck = armor.Name;
                                if (usedItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                string bagCheck = weapon.Name;
                                if (usedItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                string bagCheck = shield.Name;
                                if (usedItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Potion potion in potionBelt)
                            {
                                string bagCheck = potion.Name;
                                if (usedItem == bagCheck)
                                {
                                    battleAction = "complete";
                                    potionBelt.Remove(potion);
                                    GetGoodGuyDrunk(ego, potion);
                                    break;
                                }
                            }

                            if (battleAction != "complete" && battleAction != "incomplete")
                            {
                                battleAction = "incomplete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Let's get one thing straight, OK? You don't have that, it's not usable here, or you just plain typed something that didn't make sense.");
                                Console.WriteLine("Whichever the case -- stop trying to use it. You're looking silly in front of the bad guy.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                        else if (battleAction == "Use")
                        {
                            battleAction = "incomplete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Use? Use WHAT?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (battleAction == "Equip")
                        {
                            battleAction = "incomplete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Oops! You equipped something that we weren't expecting. Whatever it was, you don't need to do it to finish the game.");
                            Console.WriteLine();
                            Console.WriteLine("Try taking a different approach to the situation.");
                            Console.WriteLine();
                            Console.WriteLine("Error 4. SCI Version 1.001.050");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Had you going there, didn't I? But seriously -- next time try saying what you want to equip.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (battleAction.StartsWith("Equip "))
                        {
                            string equippingItem = battleAction.Remove((battleAction.IndexOf("Equip ")), 6);

                            foreach (Armor armor in equippableArmor)
                            {
                                string bagCheck = armor.Name;
                                if (equippingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    GetDressed(ego, armor);
                                    break;
                                }
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                string bagCheck = weapon.Name;
                                if (equippingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    GetEquipped(ego, weapon);
                                    break;
                                }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                string bagCheck = shield.Name;
                                if (equippingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    GetStrapped(ego, shield);
                                    break;
                                }
                            }
                            if (battleAction != "complete" && battleAction != "incomplete")
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Let's get one thing straight, OK? You don't have that, it's not equippable, or you just plain typed something that didn't make sense.");
                                Console.WriteLine("Whichever the case -- stop trying to put that on. It makes you look silly.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            };
                        }
                        else if (battleAction == "Inspect")
                        {
                            battleAction = "incomplete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("-or gadget DOO DOO DOO DOO DOO DOOOO DOOOOOOO!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (battleAction.StartsWith("Inspect "))
                        {
                            string inspectingItem = battleAction.Remove((battleAction.IndexOf("Inspect ")), 8);
                            foreach (Armor armor in equippableArmor)
                            {
                                string bagCheck = armor.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(armor.Description);
                                    Console.WriteLine();
                                    Console.WriteLine(armor.Name);
                                    Console.WriteLine($"Dmg Reduction: {armor.DamageReduction}  Crit Resist: {armor.CritResist}");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                string bagCheck = weapon.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(weapon.Description);
                                    Console.WriteLine();
                                    Console.WriteLine(weapon.Name);
                                    Console.WriteLine($"Damage Bonus: {weapon.Damage}  Crit Multiplier: {weapon.CritMultiplier}");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.WriteLine();
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                string bagCheck = shield.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(shield.Description);
                                    Console.WriteLine();
                                    Console.WriteLine(shield.Name);
                                    Console.WriteLine($"AC: {shield.ArmorClass}  Crit Resist: {shield.CritResist}");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Potion potion in potionBelt)
                            {
                                string bagCheck = potion.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(potion.Description);
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            if (battleAction != "complete" && battleAction != "incomplete")
                            {
                                battleAction = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Are we reading from the same inventory sheet?");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                    }
                }
                if (battleAction == "fight defensively" && fightingDefensively == false)
                {
                    battleAction = "incomplete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("You begin fighting defensively. Both you and your opponent gain 1 AC.");
                    ego.ArmorClass = ego.ArmorClass + 1;
                    badGuy.ArmorClass = badGuy.ArmorClass + 1;
                    fightingDefensively = true;
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (battleAction == "fight normally" && fightingDefensively == true)
                {
                    battleAction = "incomplete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("You begin fighting normally. Both your and your opponent's ACs return to normal.");
                    ego.ArmorClass = ego.ArmorClass - 1;
                    badGuy.ArmorClass = badGuy.ArmorClass - 1;
                    fightingDefensively = false;
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (battleAction == "defend")
                {
                    battleAction = "complete";
                    fullDefense = true;
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("You take a defensive stance. You gain 5 AC.");
                    ego.ArmorClass = ego.ArmorClass + 5;
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (battleAction == "attack" || battleAction == "fight" || battleAction == "kill")
                {
                    battleAction = "complete";
                    attackRoll = die.Next(1, 21) + ego.ToHitMod;
                    Console.WriteLine();
                    Console.WriteLine();
                    if (ego.EquippedWeapon.Name == "Pointy Stick" || ego.EquippedWeapon.Name == "Mildew-encrusted Pocket Knife" || ego.EquippedWeapon.Name == "Knife" || ego.EquippedWeapon.Name == "Stick" || ego.EquippedWeapon.Name == "Hunting Knife") { Console.Write("You stab at " + badGuy.Name + ", "); }
                    else if (ego.EquippedWeapon.Name == "Gun") { Console.Write("You shoot at " + badGuy.Name + ", "); }
                    else if (ego.EquippedWeapon.Name == "Pogo Stick") { Console.Write("You jab at " + badGuy.Name + ", "); }
                    else { Console.Write("You swing at " + badGuy.Name + ", "); }
                    Thread.Sleep(1500);
                    if (attackRoll >= badGuy.ArmorClass && attackRoll < 20)
                    {
                        if (ego.EquippedWeapon.Name == "Pogo Stick") { ego.Flurry = ego.Flurry + 5; }
                        rolledDamage = die.Next(1, (ego.DamageDie + 1)) + ego.Damage;
                        Console.Write("and hit for " + rolledDamage + " damage!");
                        badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (attackRoll == 20)
                    {
                        if (ego.EquippedWeapon.Name == "Pogo Stick") { ego.Flurry = ego.Flurry + 5; }
                        rolledDamage = (int)Math.Round((ego.CritMultiplier * (die.Next(1, (ego.DamageDie + 1)) + ego.Damage)) * badGuy.CritResist);
                        Console.Write("and critically hit for " + rolledDamage + " damage!");
                        badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (attackRoll < badGuy.ArmorClass)
                    {
                        Console.Write("but miss!");
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    while (ego.Flurry > 0)
                    {
                        attackRoll = die.Next(1, 21) + ego.ToHitMod;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write($"Your pogo stick executes a FLURRY of attacks on {badGuy.Name}, ");
                        Thread.Sleep(1500);
                        if (attackRoll >= (badGuy.ArmorClass + ego.Flurry) && attackRoll < 20)
                        {
                            ego.Flurry = ego.Flurry + 5;
                            rolledDamage = die.Next(1, (ego.DamageDie + 1)) + ego.Damage;
                            Console.Write("and hits for " + rolledDamage + " damage!");
                            badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll == 20)
                        {
                            ego.Flurry = ego.Flurry + 5;
                            rolledDamage = (int)Math.Round((ego.CritMultiplier * (die.Next(1, (ego.DamageDie + 1)) + ego.Damage)) * badGuy.CritResist);
                            Console.Write("and critically hits for " + rolledDamage + " damage!");
                            badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll < (badGuy.ArmorClass + ego.Flurry))
                        {
                            ego.Flurry = 0;
                            Console.Write("but misses!");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                    }
                }
                if (battleAction == "flee")
                {
                    battleAction = "incomplete";
                    battleLoop = false;
                    ego.JustFled = true;
                    ego.Location = ego.FleeLocation;
                    attackRoll = die.Next(1, 21);
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Before you can escape, " + badGuy.Name + " gets in an attack!");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.Write(badGuy.Name + " attacks you, ");
                    Thread.Sleep(1500);
                    if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                    {
                        rolledDamage = die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage;
                        Console.Write("and hits for " + rolledDamage + " damage!");
                        ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (attackRoll == 20)
                    {
                        rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist);
                        Console.Write("and critically hits for " + rolledDamage + " damage!");
                        ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (attackRoll < ego.ArmorClass)
                    {
                        Console.Write("but misses!");
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                }
                if (battleAction != "complete" && battleAction != "incomplete")
                {
                    battleAction = "incomplete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("That didn't do anything useful.");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (battleAction == "complete" && badGuy.CurrentHitPoints > 0)
                {
                    enemyHPPercent = ((double)badGuy.CurrentHitPoints / (double)badGuy.MaxHitPoints);
                    if (enemyHPPercent > 0.25)
                    {
                        attackRoll = die.Next(1, 21);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write(badGuy.Name + " attacks you, ");
                        Thread.Sleep(1500);
                        if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                        {
                            rolledDamage = die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage - ego.DamageReduction;
                            if (rolledDamage < 0) { rolledDamage = 0; }
                            Console.Write("and hits for " + rolledDamage + " damage!");
                            ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        if (attackRoll == 20)
                        {
                            rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                            if (rolledDamage < 0) { rolledDamage = 0; }
                            Console.Write("and critically hits for " + rolledDamage + " damage!");
                            ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll < ego.ArmorClass)
                        {
                            Console.Write("but misses!");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                    }
                    else if (enemyHPPercent <= 0.25 && enemyHPPercent > 0 && badGuy.PotionCount > 0)
                    {
                        badGuy.PotionCount--;
                        GetBadGuyDrunk(badGuy, badGuy.PotionType);
                    }
                    else if (enemyHPPercent <= 0.25 && enemyHPPercent > 0)
                    {
                        attackRoll = die.Next(1, 21);
                        if (badGuy.Name == "Jesse")
                        {
                            attackRoll = attackRoll - 5;
                        }
                        Console.WriteLine();
                        Console.WriteLine();
                        if (badGuy.Name == "Dude on a Pogo Stick") { Console.Write($"{badGuy.Name} charges forward!"); }
                        else if (badGuy.Name == "Jesse") { Console.Write($"{badGuy.Name} pulls out a gun and fires!"); }
                        else { Console.Write(badGuy.Name + " attacks you, "); }
                        Thread.Sleep(1500);
                        if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                        {
                            if (badGuy.Name == "Dude on a Pogo Stick")
                            {
                                rolledDamage = 2 * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage) - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.Write(" And hits for " + rolledDamage + " damage!");
                            }
                            else if (badGuy.Name == "Jesse")
                            {
                                rolledDamage = die.Next(20, 31) - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.Write(" And hits for " + rolledDamage + " damage!");
                            }
                            else
                            {
                                rolledDamage = die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.Write("and hits for " + rolledDamage + " damage!");
                            }
                            
                            ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        if (attackRoll == 20)
                        {
                            if (badGuy.Name == "Dude on a Pogo Stick")
                            {
                                rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.Write(" And critically hits for " + rolledDamage + " damage!");
                            }
                            else
                            {
                                rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.Write("and critically hits for " + rolledDamage + " damage!");
                            }


                            ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll < ego.ArmorClass)
                        {
                            if (badGuy.Name == "Dude on a Pogo Stick" || badGuy.Name == "Jesse")
                            {
                                Console.Write(" But misses!");
                            }
                            else
                            {
                                Console.Write("but misses!");
                            }
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                    }
                }

                if ((double)badGuy.CurrentHitPoints <= 0)
                {
                    battleLoop = false;
                    if (fightingDefensively == true)
                    {
                        fightingDefensively = false;
                        ego.ArmorClass = ego.ArmorClass - 1;
                        badGuy.ArmorClass = badGuy.ArmorClass - 1;
                    }
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("You won!");
                    Thread.Sleep(2000);
                    Console.WriteLine();
                    Console.WriteLine("Press ENTER to continue");
                    Console.ReadLine();
                }
                if ((double)ego.CurrentHitPoints <= 0)
                {
                    battleLoop = false;
                    if (fightingDefensively == true)
                    {
                        fightingDefensively = false;
                        ego.ArmorClass = ego.ArmorClass - 1;
                        badGuy.ArmorClass = badGuy.ArmorClass - 1;
                    }
                    Console.Clear();
                    Console.WriteLine("...Shoot. You lost.");
                    Thread.Sleep(1000);
                    Console.WriteLine();
                    Console.WriteLine("Press ENTER to continue");
                    Console.ReadLine();
                }
            }
            static string GetEnemyHealth(int max, int current)
            {
                double percentage = (double)current / (double)max;
                string status = "Uninjured";

                if (percentage == 1) { status = "Uninjured"; }
                if (percentage >= 0.75 && percentage != 1) { status = "Healthy"; }
                if (percentage >= 0.5 && percentage < 0.75) { status = "Injured"; }
                if (percentage >= 0.2 && percentage < 0.5) { status = "Bloodied"; }
                if (percentage >= 0.05 && percentage < 0.2) { status = "Critical"; }
                if (percentage > 0 && percentage < 0.05) { status = "Practically dead"; }

                return status;
            }

            static void GetGoodGuyDrunk(Stats imbiber, Potion potion)
            {
                Console.WriteLine();
                Console.WriteLine();
                if (imbiber.CurrentHitPoints <= (imbiber.MaxHitPoints - potion.Potency))
                {
                    imbiber.CurrentHitPoints = imbiber.CurrentHitPoints + potion.Potency;
                    if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". You regain " + potion.Potency + " HP!"); }
                    else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }

                }
                else
                {
                    imbiber.CurrentHitPoints = imbiber.MaxHitPoints;
                    if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". Your HP are maxed out!"); }
                    else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }
                }
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }
            static void GetBadGuyDrunk(BadGuyStats imbiber, Potion potion)
            {
                Console.WriteLine();
                Console.WriteLine();
                if (imbiber.CurrentHitPoints <= (imbiber.MaxHitPoints - potion.Potency))
                {
                    imbiber.CurrentHitPoints = imbiber.CurrentHitPoints + potion.Potency;
                    if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". You regain " + potion.Potency + " HP!"); }
                    else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }

                }
                else
                {
                    imbiber.CurrentHitPoints = imbiber.MaxHitPoints;
                    if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". Your HP are maxed out!"); }
                    else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }
                }
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }
        }

        static void HeisenBattle(Stats ego, BadGuyStats badGuy, List<Potion> potionBelt, List<Armor> equippableArmor, List<Weapon> equippableWeapon, List<Shield> equippableShield)
        {
            Random die = new Random();
            bool battleLoop = true;
            bool fightingDefensively = false;
            bool fullDefense = false;
            string battleAction;
            bool inventoryLoop;
            int attackRoll = 1;
            int rolledDamage = 0;
            double enemyHPPercent = 1.00;
            int randomAttack = 1;
            int randomDamage = 1;
            bool pantsOff = false;
            TextInfo myTI = new CultureInfo("en-US", false).TextInfo;

            while (battleLoop == true)
            {
                Console.Clear();
                if (fullDefense == true)
                {
                    ego.ArmorClass = ego.ArmorClass - 5;
                    fullDefense = false;
                }
                string enemyHealth = GetEnemyHealth(badGuy.MaxHitPoints, badGuy.CurrentHitPoints);
                Console.WriteLine("Your Hit Points: " + ego.CurrentHitPoints + " / " + ego.MaxHitPoints);
                Console.WriteLine(badGuy.Name + "'s Status: " + enemyHealth);
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("What will you do?");
                Console.WriteLine("-------------------");
                Console.WriteLine("Inventory");
                Console.WriteLine("Attack");
                Console.WriteLine("Defend");
                if (fightingDefensively == false) { Console.WriteLine("Fight defensively"); }
                if (fightingDefensively == true) { Console.WriteLine("Fight normally"); }
                Console.WriteLine("Flee");
                Console.WriteLine();
                Console.WriteLine();

                Console.Write("Your action: ");
                battleAction = Console.ReadLine();
                battleAction = battleAction.ToLower();

                if (battleAction == "inventory")
                {
                    inventoryLoop = true;
                    while (inventoryLoop == true)
                    {
                        Console.WriteLine();
                        Console.WriteLine("____________________________________________________");
                        Console.WriteLine();
                        Console.WriteLine("Equipment:");
                        Console.WriteLine("Weapon: " + ego.EquippedWeapon.Name);
                        Console.WriteLine("Armor: " + ego.EquippedArmor.Name);
                        if (ego.EquippedShield.Name != "Forearm") { Console.WriteLine("Shield: " + ego.EquippedShield.Name); }
                        else { Console.WriteLine("Shield: None"); }
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Inventory:");
                        Console.WriteLine();
                        foreach (Armor armor in equippableArmor)
                        {
                            Console.WriteLine(armor.Name);
                        }
                        foreach (Weapon weapon in equippableWeapon)
                        {
                            if (weapon.Name == "Unarmed") { }
                            else { Console.WriteLine(weapon.Name); }
                        }
                        foreach (Shield shield in equippableShield)
                        {
                            if (shield.Name == "Forearm") { }
                            else { Console.WriteLine(shield.Name); }
                        }
                        foreach (Potion potion in potionBelt)
                        {
                            Console.WriteLine(potion.Name);
                        }
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Use");
                        Console.WriteLine("Inspect");
                        Console.WriteLine("Equip");
                        Console.WriteLine();
                        Console.WriteLine("Return");
                        Console.WriteLine();
                        Console.Write("> ");
                        battleAction = Console.ReadLine();
                        battleAction = battleAction.ToLower();
                        battleAction = myTI.ToTitleCase(battleAction);

                        if (battleAction == "Return")
                        {
                            battleAction = "incomplete";
                            inventoryLoop = false;
                        }
                        else if (battleAction.StartsWith("Use "))
                        {
                            string usedItem = battleAction.Remove(battleAction.IndexOf("Use "), 4);
                            foreach (Armor armor in equippableArmor)
                            {
                                string bagCheck = armor.Name;
                                if (usedItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                string bagCheck = weapon.Name;
                                if (usedItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                string bagCheck = shield.Name;
                                if (usedItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine("Nothing happens.");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Potion potion in potionBelt)
                            {
                                string bagCheck = potion.Name;
                                if (usedItem == bagCheck)
                                {
                                    battleAction = "complete";
                                    potionBelt.Remove(potion);
                                    GetGoodGuyDrunk(ego, potion);
                                    break;
                                }
                            }

                            if (battleAction != "complete" && battleAction != "incomplete")
                            {
                                battleAction = "incomplete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Let's get one thing straight, OK? You don't have that, it's not usable here, or you just plain typed something that didn't make sense.");
                                Console.WriteLine("Whichever the case -- stop trying to use it. You're looking silly in front of the bad guy.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                        else if (battleAction == "Use")
                        {
                            battleAction = "incomplete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Use? Use WHAT?!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (battleAction == "Equip")
                        {
                            battleAction = "incomplete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Oops! You equipped something that we weren't expecting. Whatever it was, you don't need to do it to finish the game.");
                            Console.WriteLine();
                            Console.WriteLine("Try taking a different approach to the situation.");
                            Console.WriteLine();
                            Console.WriteLine("Error 4. SCI Version 1.001.050");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Had you going there, didn't I? But seriously -- next time try saying what you want to equip.");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (battleAction.StartsWith("Equip "))
                        {
                            string equippingItem = battleAction.Remove((battleAction.IndexOf("Equip ")), 6);

                            foreach (Armor armor in equippableArmor)
                            {
                                string bagCheck = armor.Name;
                                if (equippingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    GetDressed(ego, armor);
                                    break;
                                }
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                string bagCheck = weapon.Name;
                                if (equippingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    GetEquipped(ego, weapon);
                                    break;
                                }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                string bagCheck = shield.Name;
                                if (equippingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    GetStrapped(ego, shield);
                                    break;
                                }
                            }
                            if (battleAction != "complete" && battleAction != "incomplete")
                            {
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Let's get one thing straight, OK? You don't have that, it's not equippable, or you just plain typed something that didn't make sense.");
                                Console.WriteLine("Whichever the case -- stop trying to put that on. It makes you look silly.");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            };
                        }
                        else if (battleAction == "Inspect")
                        {
                            battleAction = "incomplete";
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("-or gadget DOO DOO DOO DOO DOO DOOOO DOOOOOOO!");
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (battleAction.StartsWith("Inspect "))
                        {
                            string inspectingItem = battleAction.Remove((battleAction.IndexOf("Inspect ")), 8);
                            foreach (Armor armor in equippableArmor)
                            {
                                string bagCheck = armor.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(armor.Description);
                                    Console.WriteLine();
                                    Console.WriteLine(armor.Name);
                                    Console.WriteLine($"Dmg Reduction: {armor.DamageReduction}  Crit Resist: {armor.CritResist}");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Weapon weapon in equippableWeapon)
                            {
                                string bagCheck = weapon.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(weapon.Description);
                                    Console.WriteLine();
                                    Console.WriteLine(weapon.Name);
                                    Console.WriteLine($"Damage Bonus: {weapon.Damage}  Crit Multiplier: {weapon.CritMultiplier}");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.WriteLine();
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Shield shield in equippableShield)
                            {
                                string bagCheck = shield.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(shield.Description);
                                    Console.WriteLine();
                                    Console.WriteLine(shield.Name);
                                    Console.WriteLine($"AC: {shield.ArmorClass}  Crit Resist: {shield.CritResist}");
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            foreach (Potion potion in potionBelt)
                            {
                                string bagCheck = potion.Name;
                                if (inspectingItem == bagCheck)
                                {
                                    battleAction = "incomplete";
                                    Console.WriteLine();
                                    Console.WriteLine();
                                    Console.WriteLine(potion.Description);
                                    Console.WriteLine();
                                    Console.Write("Press ENTER to continue");
                                    Console.ReadLine();
                                    break;
                                }
                            }
                            if (battleAction != "complete" && battleAction != "incomplete")
                            {
                                battleAction = "complete";
                                Console.WriteLine();
                                Console.WriteLine();
                                Console.WriteLine("Are we reading from the same inventory sheet?");
                                Console.WriteLine();
                                Console.Write("Press ENTER to continue");
                                Console.ReadLine();
                            }
                        }
                    }
                }
                if (battleAction == "fight defensively" && fightingDefensively == false)
                {
                    battleAction = "fight";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("You begin fighting defensively. Both you and your opponent gain 1 AC.");
                    ego.ArmorClass = ego.ArmorClass + 1;
                    badGuy.ArmorClass = badGuy.ArmorClass + 1;
                    fightingDefensively = true;
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (battleAction == "fight normally" && fightingDefensively == true)
                {
                    battleAction = "fight";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("You begin fighting normally. Both your and your opponent's ACs return to normal.");
                    ego.ArmorClass = ego.ArmorClass - 1;
                    badGuy.ArmorClass = badGuy.ArmorClass - 1;
                    fightingDefensively = false;
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (battleAction == "defend")
                {
                    battleAction = "complete";
                    fullDefense = true;
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("You take a defensive stance. You gain 5 AC.");
                    ego.ArmorClass = ego.ArmorClass + 5;
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (battleAction == "attack")
                {
                    battleAction = "complete";
                    attackRoll = die.Next(1, 21) + ego.ToHitMod;
                    Console.WriteLine();
                    Console.WriteLine();
                    if (ego.EquippedWeapon.Name == "Pointy Stick" || ego.EquippedWeapon.Name == "Mildew-encrusted Pocket Knife" || ego.EquippedWeapon.Name == "Knife" || ego.EquippedWeapon.Name == "Stick" || ego.EquippedWeapon.Name == "Hunting Knife") { Console.Write("You stab at " + badGuy.Name + ", "); }
                    else if (ego.EquippedWeapon.Name == "Gun") { Console.Write("You shoot at " + badGuy.Name + ", "); }
                    else if (ego.EquippedWeapon.Name == "Pogo Stick") { Console.Write("You jab at " + badGuy.Name + ", "); }
                    else { Console.Write("You swing at " + badGuy.Name + ", "); }
                    Thread.Sleep(1500);
                    if (attackRoll >= badGuy.ArmorClass && attackRoll < 20)
                    {
                        if (ego.EquippedWeapon.Name == "Pogo Stick") { ego.Flurry = ego.Flurry + 5; }
                        rolledDamage = die.Next(1, (ego.DamageDie + 1)) + ego.Damage;
                        Console.Write("and hit for " + rolledDamage + " damage!");
                        badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (attackRoll == 20)
                    {
                        if (ego.EquippedWeapon.Name == "Pogo Stick") { ego.Flurry = ego.Flurry + 5; }
                        rolledDamage = (int)Math.Round((ego.CritMultiplier * (die.Next(1, (ego.DamageDie + 1)) + ego.Damage)) * badGuy.CritResist);
                        Console.Write("and critically hit for " + rolledDamage + " damage!");
                        badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (attackRoll < badGuy.ArmorClass)
                    {
                        Console.Write("but miss!");
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    while (ego.Flurry > 0)
                    {
                        attackRoll = die.Next(1, 21) + ego.ToHitMod;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write($"Your pogo stick executes a FLURRY of attacks on {badGuy.Name}, ");
                        Thread.Sleep(1500);
                        if (attackRoll >= (badGuy.ArmorClass + ego.Flurry) && attackRoll < 20)
                        {
                            ego.Flurry = ego.Flurry + 5;
                            rolledDamage = die.Next(1, (ego.DamageDie + 1)) + ego.Damage;
                            Console.Write("and hits for " + rolledDamage + " damage!");
                            badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll == 20)
                        {
                            ego.Flurry = ego.Flurry + 5;
                            rolledDamage = (int)Math.Round((ego.CritMultiplier * (die.Next(1, (ego.DamageDie + 1)) + ego.Damage)) * badGuy.CritResist);
                            Console.Write("and critically hits for " + rolledDamage + " damage!");
                            badGuy.CurrentHitPoints = badGuy.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll < (badGuy.ArmorClass + ego.Flurry))
                        {
                            ego.Flurry = 0;
                            Console.Write("but misses!");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                    }
                }
                if (battleAction == "flee")
                {
                    battleAction = "incomplete";
                    battleLoop = false;
                    ego.JustFled = true;
                    ego.Location = ego.FleeLocation;
                    attackRoll = die.Next(1, 21);
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("Before you can escape, " + badGuy.Name + " gets in an attack!");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.Write(badGuy.Name + " attacks you, ");
                    Thread.Sleep(1500);
                    if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                    {
                        rolledDamage = die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage;
                        Console.Write("and hits for " + rolledDamage + " damage!");
                        ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    if (attackRoll == 20)
                    {
                        rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist);
                        Console.Write("and critically hits for " + rolledDamage + " damage!");
                        ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                    else if (attackRoll < ego.ArmorClass)
                    {
                        Console.Write("but misses!");
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Press ENTER to continue");
                        Console.ReadLine();
                    }
                }
                if (battleAction != "complete" && battleAction != "incomplete")
                {
                    battleAction = "incomplete";
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("That didn't do anything useful.");
                    Console.WriteLine();
                    Console.Write("Press ENTER to continue");
                    Console.ReadLine();
                }
                if (battleAction == "complete" && badGuy.CurrentHitPoints > 0)
                {
                    enemyHPPercent = ((double)badGuy.CurrentHitPoints / (double)badGuy.MaxHitPoints);

                    randomAttack = die.Next(1, 11);
                    if (enemyHPPercent > 0.25 && randomAttack == 1 && pantsOff == false)
                    {
                        pantsOff = true;
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.Write("Heisenberg takes off his pants!");
                        Thread.Sleep(1500);
                    }
                    else if (enemyHPPercent > 0.25)
                    {
                        if (randomAttack < 3)
                        {
                            randomDamage = die.Next(1, 6);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Heisenberg, screaming in frustration, throws a pizza onto a canopied work station! The pizza begins to bake under an intense lamp, and the cheese becomes scalding hot. The oils become turbulent, causing it to slide down and off the canopy!");
                            Thread.Sleep(4000);
                            Console.WriteLine();
                            Console.Write("It falls straight at your face, ");
                        }
                        else if (randomAttack == 3)
                        {
                            randomDamage = die.Next(10, 21);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Heisenberg raises two fingers, and a red beam appears on your chest. He throws his fingers forward, and a gunshot is heard!");
                            Thread.Sleep(4000);
                            Console.WriteLine();
                            Console.Write("The sniper fires at you, ");
                        }
                        else if (randomAttack == 4)
                        {
                            randomDamage = die.Next(15, 26);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Heisenberg offers you a bath! In need of relaxation, you get in. Suddenly, Heisenberg is standing over you with flesh-disintegrating chemicals!");
                            Thread.Sleep(3000);
                            Console.WriteLine();
                            Console.Write("He pours the chemicals, ");
                        }
                        else if (randomAttack == 5)
                        {
                            randomDamage = die.Next(10, 16);
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.WriteLine("Heisenberg tells you he poisoned someone near and dear to your heart. While this causes no direct damage, the mental distress manifests as physical harm!");
                            Thread.Sleep(3000);
                            Console.WriteLine();
                            Console.Write("Heisenberg's evil intent reaches out with its icy hand, ");
                        }
                        else
                        {
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Heisenberg attacks you, ");
                        }
                        Thread.Sleep(1500);
                        attackRoll = die.Next(1, 21);
                        
                        if (attackRoll >= ego.ArmorClass && attackRoll < 20)
                        {
                            rolledDamage = die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage + randomDamage - ego.DamageReduction;
                            if (rolledDamage < 0) { rolledDamage = 0; }
                            Console.Write("and hits for " + rolledDamage + " damage!");
                            ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        if (attackRoll == 20)
                        {
                            rolledDamage = (int)Math.Round((badGuy.CritMultiplier * (die.Next(1, (badGuy.DamageDie + 1)) + badGuy.Damage)) * ego.CritResist) - ego.DamageReduction;
                            if (rolledDamage < 0) { rolledDamage = 0; }
                            Console.Write("and critically hits for " + rolledDamage + " damage!");
                            ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll < ego.ArmorClass)
                        {
                            Console.Write("but misses!");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                    }
                    else if (enemyHPPercent <= 0.25 && enemyHPPercent > 0 && badGuy.PotionCount > 0)
                    {
                        badGuy.PotionCount--;
                        GetBadGuyDrunk(badGuy, badGuy.PotionType);
                    }
                    else if (enemyHPPercent <= 0.25 && enemyHPPercent > 0)
                    {
                        attackRoll = die.Next(1, 21);
                        Console.WriteLine();
                        Console.WriteLine();
                        Console.WriteLine("Heisenberg presses the button on a remote! Gesturing your attention, he points to the trunk of a car which pops open with a machine gun emerging.");
                        Thread.Sleep(4000);
                        Console.WriteLine();
                        Console.WriteLine("The gun fires!");
                        Thread.Sleep(1500);
                        if (attackRoll >= ego.ArmorClass)
                        {
                            Console.WriteLine();
                            Console.WriteLine();
                            while (attackRoll >= ego.ArmorClass)
                            {
                                rolledDamage = die.Next(5, 16) - ego.DamageReduction;
                                if (rolledDamage < 0) { rolledDamage = 0; }
                                Console.WriteLine("And hits for " + rolledDamage + " damage!");
                                ego.CurrentHitPoints = ego.CurrentHitPoints - rolledDamage;
                                attackRoll--;
                                Thread.Sleep(500);
                            }
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                        else if (attackRoll < ego.ArmorClass)
                        {
                            Console.Write(" But misses!");
                            Console.WriteLine();
                            Console.WriteLine();
                            Console.Write("Press ENTER to continue");
                            Console.ReadLine();
                        }
                    }
                }

                if ((double)badGuy.CurrentHitPoints <= 0)
                {
                    battleLoop = false;
                    if (fightingDefensively == true)
                    {
                        fightingDefensively = false;
                        ego.ArmorClass = ego.ArmorClass - 1;
                        badGuy.ArmorClass = badGuy.ArmorClass - 1;
                    }
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine();
                    Console.WriteLine("You won!");
                    Thread.Sleep(2000);
                    Console.WriteLine();
                    Console.WriteLine("Press ENTER to continue");
                    Console.ReadLine();
                }
                if ((double)ego.CurrentHitPoints <= 0)
                {
                    battleLoop = false;
                    if (fightingDefensively == true)
                    {
                        fightingDefensively = false;
                        ego.ArmorClass = ego.ArmorClass - 1;
                        badGuy.ArmorClass = badGuy.ArmorClass - 1;
                    }
                    Console.Clear();
                    Console.WriteLine("...Shoot. You lost.");
                    Thread.Sleep(1000);
                    Console.WriteLine();
                    Console.WriteLine("Press ENTER to continue");
                    Console.ReadLine();
                }
            }
            static string GetEnemyHealth(int max, int current)
            {
                double percentage = (double)current / (double)max;
                string status = "Uninjured";

                if (percentage == 1) { status = "Uninjured"; }
                if (percentage >= 0.75 && percentage != 1) { status = "Healthy"; }
                if (percentage >= 0.5 && percentage < 0.75) { status = "Injured"; }
                if (percentage >= 0.2 && percentage < 0.5) { status = "Bloodied"; }
                if (percentage >= 0.05 && percentage < 0.2) { status = "Critical"; }
                if (percentage > 0 && percentage < 0.05) { status = "Practically dead"; }

                return status;
            }

            static void GetGoodGuyDrunk(Stats imbiber, Potion potion)
            {
                Console.WriteLine();
                Console.WriteLine();
                if (imbiber.CurrentHitPoints <= (imbiber.MaxHitPoints - potion.Potency))
                {
                    imbiber.CurrentHitPoints = imbiber.CurrentHitPoints + potion.Potency;
                    if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". You regain " + potion.Potency + " HP!"); }
                    else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }

                }
                else
                {
                    imbiber.CurrentHitPoints = imbiber.MaxHitPoints;
                    if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". Your HP are maxed out!"); }
                    else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }
                }
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }
            static void GetBadGuyDrunk(BadGuyStats imbiber, Potion potion)
            {
                Console.WriteLine();
                Console.WriteLine();
                if (imbiber.CurrentHitPoints <= (imbiber.MaxHitPoints - potion.Potency))
                {
                    imbiber.CurrentHitPoints = imbiber.CurrentHitPoints + potion.Potency;
                    if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". You regain " + potion.Potency + " HP!"); }
                    else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }

                }
                else
                {
                    imbiber.CurrentHitPoints = imbiber.MaxHitPoints;
                    if (imbiber.Name == "Ego") { Console.WriteLine("You drink the " + potion.Name + ". Your HP are maxed out!"); }
                    else { Console.WriteLine(imbiber.Name + " drinks a " + potion.Name + ", and suddenly looks healthier!"); }
                }
                Console.WriteLine();
                Console.Write("Press ENTER to continue");
                Console.ReadLine();
            }
        }

        static void PlotBattleResolution(Stats ego, List<Armor> equippableArmor, List<Weapon> equippableWeapon, List<Shield> equippableShield, List<Potion> potionBelt, BadGuyStats badGuy)
        {
            if (ego.JanesProtectionActive == true)
            {
                ego.JanesProtectionActive = false;
                ego.ArmorClass--;
            }
            if (ego.JustFled == true)
            {

            }
            if (ego.CurrentHitPoints <= 0)
            {
                EgoDead(ego, equippableArmor, equippableShield, equippableWeapon, potionBelt);
            }
            else if (badGuy.CurrentHitPoints <= 0)
            {
                ego.LastDefeated = badGuy.Name;
                Console.Clear();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine();
                Console.WriteLine("You won!");
                Console.WriteLine();
                Console.WriteLine("Press ENTER to continue");
                Console.WriteLine();
                Console.WriteLine();
                if (badGuy.BlueCrystals == 1)
                {
                    Console.WriteLine("Searching the grotesque carcass, you find a single measly blue crystal; what a way to make a living!");
                }
                else if (badGuy.BlueCrystals != 1)
                {
                    Console.WriteLine("Searching the grotesque carcass, you find " + badGuy.BlueCrystals + " blue crystals, which you take.");
                }
                ego.BlueCrystals = ego.BlueCrystals + badGuy.BlueCrystals;
                Console.WriteLine();
                Thread.Sleep(3000);
                if (badGuy.Weapon.Name == null && badGuy.Armor.Name != null)
                {
                    Console.WriteLine("And the enemy left a present!");
                    Console.WriteLine();
                    Console.WriteLine("The " + badGuy.Armor.Name + " looks useful. You take it.");
                    equippableArmor.Add(badGuy.Armor);
                    Thread.Sleep(3000);
                }
                if (badGuy.Weapon.Name != null && badGuy.Armor.Name == null)
                {
                    Console.WriteLine("And the enemy left a present!");
                    Console.WriteLine();
                    Console.WriteLine("The " + badGuy.Weapon.Name + " looks useful. You take it.");
                    equippableWeapon.Add(badGuy.Weapon);
                    Thread.Sleep(3000);
                }
                if (badGuy.Weapon.Name != null && badGuy.Armor.Name != null)
                {
                    Console.WriteLine("And the enemy left some presents!");
                    Console.WriteLine();
                    Console.WriteLine("The " + badGuy.Weapon.Name + " and " + badGuy.Armor.Name + " look useful. You take them.");
                    equippableWeapon.Add(badGuy.Weapon);
                    equippableArmor.Add(badGuy.Armor);
                    Thread.Sleep(3000);
                }
                Console.WriteLine();
                Console.WriteLine("Press ENTER to continue");
                Console.ReadLine();
                Console.Clear();
            }
        }

        static void EgoDead(Stats ego, List<Armor> equippableArmor, List<Shield> equippableShield, List<Weapon> equippableWeapon, List<Potion> potionBelt)
        {
            Armor Rags = new Armor("Rags", 0, 0.95, false, 0, "These are your clothes, but with a fancier name.");
            Shield nullShield = new Shield(null, 0, 1.00, true, 0, "'Tis nothing but spun sugar and bootblack.");
            Weapon Unarmed = new Weapon("Unarmed", 0, 1, 0, true, false, 0, "Fists of fury.");

            Console.Clear();
            ego.Location = "F7";
            ego.BlueCrystals = 0;
            equippableArmor.Clear();
            equippableShield.Clear();
            equippableWeapon.Clear();
            potionBelt.Clear();
            equippableArmor.Add(Rags);
            equippableShield.Add(nullShield);
            equippableWeapon.Add(Unarmed);
            GetStripped(ego, Rags, Unarmed, nullShield);
            ego.CurrentHitPoints = ego.MaxHitPoints;
            Thread.Sleep(1000);
            Console.WriteLine("You awaken on something hard. Not cold, though, as you'd expect from the dungeon floor.");
            Console.WriteLine();
            Console.Write("Press ENTER to continue");
            Console.ReadLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("\"Hey, man. I found you laying out there a little beat up. I brought you back here and let you rest up on my plank.\"");
            Console.WriteLine();
            Console.Write("Press ENTER to continue");
            Console.ReadLine();
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("\"And, uh, don't worry about paying me. Looks like they took your stuff. Just think of it as my investing in your health so you can come back and pay in the future.\"");
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("Yep. Everything's gone.");
            Console.WriteLine();
            Console.Write("Press ENTER to continue");
            Console.ReadLine();           
        }
    }
}
